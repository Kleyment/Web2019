!function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){return o(e[i][1][r]||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r}()({1:[function(require,module,exports){!function(global,factory){"object"==typeof exports&&void 0!==module?module.exports=factory(function(){try{return require("moment")}catch(e){}}()):"function"==typeof define&&define.amd?define(["require"],function(require){return factory(function(){try{return require("moment")}catch(e){}}())}):global.Chart=factory(global.moment)}(this,function(moment){"use strict";function rgb2hsl(rgb){var h,s,l,r=rgb[0]/255,g=rgb[1]/255,b=rgb[2]/255,min=Math.min(r,g,b),max=Math.max(r,g,b),delta=max-min;return max==min?h=0:r==max?h=(g-b)/delta:g==max?h=2+(b-r)/delta:b==max&&(h=4+(r-g)/delta),h=Math.min(60*h,360),h<0&&(h+=360),l=(min+max)/2,s=max==min?0:l<=.5?delta/(max+min):delta/(2-max-min),[h,100*s,100*l]}function rgb2hsv(rgb){var h,s,v,r=rgb[0],g=rgb[1],b=rgb[2],min=Math.min(r,g,b),max=Math.max(r,g,b),delta=max-min;return s=0==max?0:delta/max*1e3/10,max==min?h=0:r==max?h=(g-b)/delta:g==max?h=2+(b-r)/delta:b==max&&(h=4+(r-g)/delta),h=Math.min(60*h,360),h<0&&(h+=360),v=max/255*1e3/10,[h,s,v]}function rgb2hwb(rgb){var r=rgb[0],g=rgb[1],b=rgb[2],h=rgb2hsl(rgb)[0],w=1/255*Math.min(r,Math.min(g,b)),b=1-1/255*Math.max(r,Math.max(g,b));return[h,100*w,100*b]}function rgb2cmyk(rgb){var c,m,y,k,r=rgb[0]/255,g=rgb[1]/255,b=rgb[2]/255;return k=Math.min(1-r,1-g,1-b),c=(1-r-k)/(1-k)||0,m=(1-g-k)/(1-k)||0,y=(1-b-k)/(1-k)||0,[100*c,100*m,100*y,100*k]}function rgb2keyword(rgb){return reverseKeywords[JSON.stringify(rgb)]}function rgb2xyz(rgb){var r=rgb[0]/255,g=rgb[1]/255,b=rgb[2]/255;return r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92,g=g>.04045?Math.pow((g+.055)/1.055,2.4):g/12.92,b=b>.04045?Math.pow((b+.055)/1.055,2.4):b/12.92,[100*(.4124*r+.3576*g+.1805*b),100*(.2126*r+.7152*g+.0722*b),100*(.0193*r+.1192*g+.9505*b)]}function rgb2lab(rgb){var l,a,b,xyz=rgb2xyz(rgb),x=xyz[0],y=xyz[1],z=xyz[2];return x/=95.047,y/=100,z/=108.883,x=x>.008856?Math.pow(x,1/3):7.787*x+16/116,y=y>.008856?Math.pow(y,1/3):7.787*y+16/116,z=z>.008856?Math.pow(z,1/3):7.787*z+16/116,l=116*y-16,a=500*(x-y),b=200*(y-z),[l,a,b]}function rgb2lch(args){return lab2lch(rgb2lab(args))}function hsl2rgb(hsl){var t1,t2,t3,rgb,val,h=hsl[0]/360,s=hsl[1]/100,l=hsl[2]/100;if(0==s)return val=255*l,[val,val,val];t2=l<.5?l*(1+s):l+s-l*s,t1=2*l-t2,rgb=[0,0,0];for(var i=0;i<3;i++)t3=h+1/3*-(i-1),t3<0&&t3++,t3>1&&t3--,val=6*t3<1?t1+6*(t2-t1)*t3:2*t3<1?t2:3*t3<2?t1+(t2-t1)*(2/3-t3)*6:t1,rgb[i]=255*val;return rgb}function hsl2hsv(hsl){var sv,v,h=hsl[0],s=hsl[1]/100,l=hsl[2]/100;return 0===l?[0,0,0]:(l*=2,s*=l<=1?l:2-l,v=(l+s)/2,sv=2*s/(l+s),[h,100*sv,100*v])}function hsl2hwb(args){return rgb2hwb(hsl2rgb(args))}function hsl2cmyk(args){return rgb2cmyk(hsl2rgb(args))}function hsl2keyword(args){return rgb2keyword(hsl2rgb(args))}function hsv2rgb(hsv){var h=hsv[0]/60,s=hsv[1]/100,v=hsv[2]/100,hi=Math.floor(h)%6,f=h-Math.floor(h),p=255*v*(1-s),q=255*v*(1-s*f),t=255*v*(1-s*(1-f)),v=255*v;switch(hi){case 0:return[v,t,p];case 1:return[q,v,p];case 2:return[p,v,t];case 3:return[p,q,v];case 4:return[t,p,v];case 5:return[v,p,q]}}function hsv2hsl(hsv){var sl,l,h=hsv[0],s=hsv[1]/100,v=hsv[2]/100;return l=(2-s)*v,sl=s*v,sl/=l<=1?l:2-l,sl=sl||0,l/=2,[h,100*sl,100*l]}function hsv2hwb(args){return rgb2hwb(hsv2rgb(args))}function hsv2cmyk(args){return rgb2cmyk(hsv2rgb(args))}function hsv2keyword(args){return rgb2keyword(hsv2rgb(args))}function hwb2rgb(hwb){var i,v,f,n,h=hwb[0]/360,wh=hwb[1]/100,bl=hwb[2]/100,ratio=wh+bl;switch(ratio>1&&(wh/=ratio,bl/=ratio),i=Math.floor(6*h),v=1-bl,f=6*h-i,0!=(1&i)&&(f=1-f),n=wh+f*(v-wh),i){default:case 6:case 0:r=v,g=n,b=wh;break;case 1:r=n,g=v,b=wh;break;case 2:r=wh,g=v,b=n;break;case 3:r=wh,g=n,b=v;break;case 4:r=n,g=wh,b=v;break;case 5:r=v,g=wh,b=n}return[255*r,255*g,255*b]}function hwb2hsl(args){return rgb2hsl(hwb2rgb(args))}function hwb2hsv(args){return rgb2hsv(hwb2rgb(args))}function hwb2cmyk(args){return rgb2cmyk(hwb2rgb(args))}function hwb2keyword(args){return rgb2keyword(hwb2rgb(args))}function cmyk2rgb(cmyk){var r,g,b,c=cmyk[0]/100,m=cmyk[1]/100,y=cmyk[2]/100,k=cmyk[3]/100;return r=1-Math.min(1,c*(1-k)+k),g=1-Math.min(1,m*(1-k)+k),b=1-Math.min(1,y*(1-k)+k),[255*r,255*g,255*b]}function cmyk2hsl(args){return rgb2hsl(cmyk2rgb(args))}function cmyk2hsv(args){return rgb2hsv(cmyk2rgb(args))}function cmyk2hwb(args){return rgb2hwb(cmyk2rgb(args))}function cmyk2keyword(args){return rgb2keyword(cmyk2rgb(args))}function xyz2rgb(xyz){var r,g,b,x=xyz[0]/100,y=xyz[1]/100,z=xyz[2]/100;return r=3.2406*x+-1.5372*y+-.4986*z,g=-.9689*x+1.8758*y+.0415*z,b=.0557*x+-.204*y+1.057*z,r=r>.0031308?1.055*Math.pow(r,1/2.4)-.055:r*=12.92,g=g>.0031308?1.055*Math.pow(g,1/2.4)-.055:g*=12.92,b=b>.0031308?1.055*Math.pow(b,1/2.4)-.055:b*=12.92,r=Math.min(Math.max(0,r),1),g=Math.min(Math.max(0,g),1),b=Math.min(Math.max(0,b),1),[255*r,255*g,255*b]}function xyz2lab(xyz){var l,a,b,x=xyz[0],y=xyz[1],z=xyz[2];return x/=95.047,y/=100,z/=108.883,x=x>.008856?Math.pow(x,1/3):7.787*x+16/116,y=y>.008856?Math.pow(y,1/3):7.787*y+16/116,z=z>.008856?Math.pow(z,1/3):7.787*z+16/116,l=116*y-16,a=500*(x-y),b=200*(y-z),[l,a,b]}function xyz2lch(args){return lab2lch(xyz2lab(args))}function lab2xyz(lab){var x,y,z,y2,l=lab[0],a=lab[1],b=lab[2];return l<=8?(y=100*l/903.3,y2=y/100*7.787+16/116):(y=100*Math.pow((l+16)/116,3),y2=Math.pow(y/100,1/3)),x=x/95.047<=.008856?x=95.047*(a/500+y2-16/116)/7.787:95.047*Math.pow(a/500+y2,3),z=z/108.883<=.008859?z=108.883*(y2-b/200-16/116)/7.787:108.883*Math.pow(y2-b/200,3),[x,y,z]}function lab2lch(lab){var hr,h,c,l=lab[0],a=lab[1],b=lab[2];return hr=Math.atan2(b,a),h=360*hr/2/Math.PI,h<0&&(h+=360),c=Math.sqrt(a*a+b*b),[l,c,h]}function lab2rgb(args){return xyz2rgb(lab2xyz(args))}function lch2lab(lch){var a,b,hr,l=lch[0],c=lch[1],h=lch[2];return hr=h/360*2*Math.PI,a=c*Math.cos(hr),b=c*Math.sin(hr),[l,a,b]}function lch2xyz(args){return lab2xyz(lch2lab(args))}function lch2rgb(args){return lab2rgb(lch2lab(args))}function keyword2rgb(keyword){return cssKeywords[keyword]}function keyword2hsl(args){return rgb2hsl(keyword2rgb(args))}function keyword2hsv(args){return rgb2hsv(keyword2rgb(args))}function keyword2hwb(args){return rgb2hwb(keyword2rgb(args))}function keyword2cmyk(args){return rgb2cmyk(keyword2rgb(args))}function keyword2lab(args){return rgb2lab(keyword2rgb(args))}function keyword2xyz(args){return rgb2xyz(keyword2rgb(args))}function getRgba(string){if(string){var abbr=/^#([a-fA-F0-9]{3,4})$/i,hex=/^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,rgba=/^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,per=/^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,keyword=/(\w+)/,rgb=[0,0,0],a=1,match=string.match(abbr),hexAlpha="";if(match){match=match[1],hexAlpha=match[3];for(var i=0;i<rgb.length;i++)rgb[i]=parseInt(match[i]+match[i],16);hexAlpha&&(a=Math.round(parseInt(hexAlpha+hexAlpha,16)/255*100)/100)}else if(match=string.match(hex)){hexAlpha=match[2],match=match[1];for(var i=0;i<rgb.length;i++)rgb[i]=parseInt(match.slice(2*i,2*i+2),16);hexAlpha&&(a=Math.round(parseInt(hexAlpha,16)/255*100)/100)}else if(match=string.match(rgba)){for(var i=0;i<rgb.length;i++)rgb[i]=parseInt(match[i+1]);a=parseFloat(match[4])}else if(match=string.match(per)){for(var i=0;i<rgb.length;i++)rgb[i]=Math.round(2.55*parseFloat(match[i+1]));a=parseFloat(match[4])}else if(match=string.match(keyword)){if("transparent"==match[1])return[0,0,0,0];if(!(rgb=colorName[match[1]]))return}for(var i=0;i<rgb.length;i++)rgb[i]=scale(rgb[i],0,255);return a=a||0==a?scale(a,0,1):1,rgb[3]=a,rgb}}function getHsla(string){if(string){var hsl=/^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/,match=string.match(hsl);if(match){var alpha=parseFloat(match[4]);return[scale(parseInt(match[1]),0,360),scale(parseFloat(match[2]),0,100),scale(parseFloat(match[3]),0,100),scale(isNaN(alpha)?1:alpha,0,1)]}}}function getHwb(string){if(string){var hwb=/^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/,match=string.match(hwb);if(match){var alpha=parseFloat(match[4]);return[scale(parseInt(match[1]),0,360),scale(parseFloat(match[2]),0,100),scale(parseFloat(match[3]),0,100),scale(isNaN(alpha)?1:alpha,0,1)]}}}function getRgb(string){var rgba=getRgba(string);return rgba&&rgba.slice(0,3)}function getHsl(string){var hsla=getHsla(string);return hsla&&hsla.slice(0,3)}function getAlpha(string){var vals=getRgba(string);return vals?vals[3]:(vals=getHsla(string))?vals[3]:(vals=getHwb(string))?vals[3]:void 0}function hexString(rgba,a){var a=void 0!==a&&3===rgba.length?a:rgba[3];return"#"+hexDouble(rgba[0])+hexDouble(rgba[1])+hexDouble(rgba[2])+(a>=0&&a<1?hexDouble(Math.round(255*a)):"")}function rgbString(rgba,alpha){return alpha<1||rgba[3]&&rgba[3]<1?rgbaString(rgba,alpha):"rgb("+rgba[0]+", "+rgba[1]+", "+rgba[2]+")"}function rgbaString(rgba,alpha){return void 0===alpha&&(alpha=void 0!==rgba[3]?rgba[3]:1),"rgba("+rgba[0]+", "+rgba[1]+", "+rgba[2]+", "+alpha+")"}function percentString(rgba,alpha){return alpha<1||rgba[3]&&rgba[3]<1?percentaString(rgba,alpha):"rgb("+Math.round(rgba[0]/255*100)+"%, "+Math.round(rgba[1]/255*100)+"%, "+Math.round(rgba[2]/255*100)+"%)"}function percentaString(rgba,alpha){return"rgba("+Math.round(rgba[0]/255*100)+"%, "+Math.round(rgba[1]/255*100)+"%, "+Math.round(rgba[2]/255*100)+"%, "+(alpha||rgba[3]||1)+")"}function hslString(hsla,alpha){return alpha<1||hsla[3]&&hsla[3]<1?hslaString(hsla,alpha):"hsl("+hsla[0]+", "+hsla[1]+"%, "+hsla[2]+"%)"}function hslaString(hsla,alpha){return void 0===alpha&&(alpha=void 0!==hsla[3]?hsla[3]:1),"hsla("+hsla[0]+", "+hsla[1]+"%, "+hsla[2]+"%, "+alpha+")"}function hwbString(hwb,alpha){return void 0===alpha&&(alpha=void 0!==hwb[3]?hwb[3]:1),"hwb("+hwb[0]+", "+hwb[1]+"%, "+hwb[2]+"%"+(void 0!==alpha&&1!==alpha?", "+alpha:"")+")"}function keyword(rgb){return reverseNames[rgb.slice(0,3)]}function scale(num,min,max){return Math.min(Math.max(min,num),max)}function hexDouble(num){var str=num.toString(16).toUpperCase();return str.length<2?"0"+str:str}function toFontString(font){return!font||helpers_core.isNullOrUndef(font.size)||helpers_core.isNullOrUndef(font.family)?null:(font.style?font.style+" ":"")+(font.weight?font.weight+" ":"")+font.size+"px "+font.family}function interpolate(start,view,model,ease){var i,ilen,key,actual,origin,target,type,c0,c1,keys=Object.keys(model);for(i=0,ilen=keys.length;i<ilen;++i)if(key=keys[i],target=model[key],view.hasOwnProperty(key)||(view[key]=target),(actual=view[key])!==target&&"_"!==key[0]){if(start.hasOwnProperty(key)||(start[key]=actual),origin=start[key],(type=typeof target)===typeof origin)if("string"===type){if(c0=chartjsColor(origin),c0.valid&&(c1=chartjsColor(target),c1.valid)){view[key]=c1.mix(c0,ease).rgbString();continue}}else if(helpers$1.isFinite(origin)&&helpers$1.isFinite(target)){view[key]=origin+(target-origin)*ease;continue}view[key]=target}}function listenArrayEvents(array,listener){if(array._chartjs)return void array._chartjs.listeners.push(listener);Object.defineProperty(array,"_chartjs",{configurable:!0,enumerable:!1,value:{listeners:[listener]}}),arrayEvents.forEach(function(key){var method="onData"+key.charAt(0).toUpperCase()+key.slice(1),base=array[key];Object.defineProperty(array,key,{configurable:!0,enumerable:!1,value:function(){var args=Array.prototype.slice.call(arguments),res=base.apply(this,args);return helpers$1.each(array._chartjs.listeners,function(object){"function"==typeof object[method]&&object[method].apply(object,args)}),res}})})}function unlistenArrayEvents(array,listener){var stub=array._chartjs;if(stub){var listeners=stub.listeners,index=listeners.indexOf(listener);-1!==index&&listeners.splice(index,1),listeners.length>0||(arrayEvents.forEach(function(key){delete array[key]}),delete array._chartjs)}}function xRange(mouseX){var vm=this._view;return!!vm&&Math.abs(mouseX-vm.x)<vm.radius+vm.hitRadius}function yRange(mouseY){var vm=this._view;return!!vm&&Math.abs(mouseY-vm.y)<vm.radius+vm.hitRadius}function isVertical(vm){return vm&&void 0!==vm.width}function getBarBounds(vm){var x1,x2,y1,y2,half;return isVertical(vm)?(half=vm.width/2,x1=vm.x-half,x2=vm.x+half,y1=Math.min(vm.y,vm.base),y2=Math.max(vm.y,vm.base)):(half=vm.height/2,x1=Math.min(vm.x,vm.base),x2=Math.max(vm.x,vm.base),y1=vm.y-half,y2=vm.y+half),{left:x1,top:y1,right:x2,bottom:y2}}function swap(orig,v1,v2){return orig===v1?v2:orig===v2?v1:orig}function parseBorderSkipped(vm){var edge=vm.borderSkipped,res={};return edge?(vm.horizontal?vm.base>vm.x&&(edge=swap(edge,"left","right")):vm.base<vm.y&&(edge=swap(edge,"bottom","top")),res[edge]=!0,res):res}function parseBorderWidth(vm,maxW,maxH){var t,r,b,l,value=vm.borderWidth,skip=parseBorderSkipped(vm);return helpers$1.isObject(value)?(t=+value.top||0,r=+value.right||0,b=+value.bottom||0,l=+value.left||0):t=r=b=l=+value||0,{t:skip.top||t<0?0:t>maxH?maxH:t,r:skip.right||r<0?0:r>maxW?maxW:r,b:skip.bottom||b<0?0:b>maxH?maxH:b,l:skip.left||l<0?0:l>maxW?maxW:l}}function boundingRects(vm){var bounds=getBarBounds(vm),width=bounds.right-bounds.left,height=bounds.bottom-bounds.top,border=parseBorderWidth(vm,width/2,height/2);return{outer:{x:bounds.left,y:bounds.top,w:width,h:height},inner:{x:bounds.left+border.l,y:bounds.top+border.t,w:width-border.l-border.r,h:height-border.t-border.b}}}function inRange(vm,x,y){var skipX=null===x,skipY=null===y,bounds=!(!vm||skipX&&skipY)&&getBarBounds(vm);return bounds&&(skipX||x>=bounds.left&&x<=bounds.right)&&(skipY||y>=bounds.top&&y<=bounds.bottom)}function computeMinSampleSize(scale,pixels){var prev,curr,i,ilen,min=scale.isHorizontal()?scale.width:scale.height,ticks=scale.getTicks();for(i=1,ilen=pixels.length;i<ilen;++i)min=Math.min(min,Math.abs(pixels[i]-pixels[i-1]));for(i=0,ilen=ticks.length;i<ilen;++i)curr=scale.getPixelForTick(i),min=i>0?Math.min(min,curr-prev):min,prev=curr;return min}function computeFitCategoryTraits(index,ruler,options){var size,ratio,thickness=options.barThickness,count=ruler.stackCount,curr=ruler.pixels[index];return helpers$1.isNullOrUndef(thickness)?(size=ruler.min*options.categoryPercentage,ratio=options.barPercentage):(size=thickness*count,ratio=1),{chunk:size/count,ratio:ratio,start:curr-size/2}}function computeFlexCategoryTraits(index,ruler,options){var start,size,pixels=ruler.pixels,curr=pixels[index],prev=index>0?pixels[index-1]:null,next=index<pixels.length-1?pixels[index+1]:null,percent=options.categoryPercentage;return null===prev&&(prev=curr-(null===next?ruler.end-ruler.start:next-curr)),null===next&&(next=curr+curr-prev),start=curr-(curr-Math.min(prev,next))/2*percent,size=Math.abs(next-prev)/2*percent,{chunk:size/ruler.stackCount,ratio:options.barPercentage,start:start}}function lineEnabled(dataset,options){return valueOrDefault$5(dataset.showLine,options.showLines)}function getRelativePosition(e,chart){return e.native?{x:e.x,y:e.y}:helpers$1.getRelativePosition(e,chart)}function parseVisibleItems(chart,handler){var meta,i,j,ilen,jlen,datasets=chart.data.datasets;for(i=0,ilen=datasets.length;i<ilen;++i)if(chart.isDatasetVisible(i))for(meta=chart.getDatasetMeta(i),j=0,jlen=meta.data.length;j<jlen;++j){var element=meta.data[j];element._view.skip||handler(element)}}function getIntersectItems(chart,position){var elements=[];return parseVisibleItems(chart,function(element){element.inRange(position.x,position.y)&&elements.push(element)}),elements}function getNearestItems(chart,position,intersect,distanceMetric){var minDistance=Number.POSITIVE_INFINITY,nearestItems=[];return parseVisibleItems(chart,function(element){if(!intersect||element.inRange(position.x,position.y)){var center=element.getCenterPoint(),distance=distanceMetric(position,center);distance<minDistance?(nearestItems=[element],minDistance=distance):distance===minDistance&&nearestItems.push(element)}}),nearestItems}function getDistanceMetricForAxis(axis){var useX=-1!==axis.indexOf("x"),useY=-1!==axis.indexOf("y");return function(pt1,pt2){var deltaX=useX?Math.abs(pt1.x-pt2.x):0,deltaY=useY?Math.abs(pt1.y-pt2.y):0;return Math.sqrt(Math.pow(deltaX,2)+Math.pow(deltaY,2))}}function indexMode(chart,e,options){var position=getRelativePosition(e,chart);options.axis=options.axis||"x";var distanceMetric=getDistanceMetricForAxis(options.axis),items=options.intersect?getIntersectItems(chart,position):getNearestItems(chart,position,!1,distanceMetric),elements=[];return items.length?(chart.data.datasets.forEach(function(dataset,datasetIndex){if(chart.isDatasetVisible(datasetIndex)){var meta=chart.getDatasetMeta(datasetIndex),element=meta.data[items[0]._index];element&&!element._view.skip&&elements.push(element)}}),elements):[]}function filterByPosition(array,position){return helpers$1.where(array,function(v){return v.position===position})}function sortByWeight(array,reverse){array.forEach(function(v,i){return v._tmpIndex_=i,v}),array.sort(function(a,b){var v0=reverse?b:a,v1=reverse?a:b;return v0.weight===v1.weight?v0._tmpIndex_-v1._tmpIndex_:v0.weight-v1.weight}),array.forEach(function(v){delete v._tmpIndex_})}function findMaxPadding(boxes){var top=0,left=0,bottom=0,right=0;return helpers$1.each(boxes,function(box){if(box.getPadding){var boxPadding=box.getPadding();top=Math.max(top,boxPadding.top),left=Math.max(left,boxPadding.left),bottom=Math.max(bottom,boxPadding.bottom),right=Math.max(right,boxPadding.right)}}),{top:top,left:left,bottom:bottom,right:right}}function addSizeByPosition(boxes,size){helpers$1.each(boxes,function(box){size[box.position]+=box.isHorizontal()?box.height:box.width})}function readUsedSize(element,property){var value=helpers$1.getStyle(element,property),matches=value&&value.match(/^(\d+)(\.\d+)?px$/);return matches?Number(matches[1]):void 0}function initCanvas(canvas,config){var style=canvas.style,renderHeight=canvas.getAttribute("height"),renderWidth=canvas.getAttribute("width");if(canvas[EXPANDO_KEY]={initial:{height:renderHeight,width:renderWidth,style:{display:style.display,height:style.height,width:style.width}}},style.display=style.display||"block",null===renderWidth||""===renderWidth){var displayWidth=readUsedSize(canvas,"width");void 0!==displayWidth&&(canvas.width=displayWidth)}if(null===renderHeight||""===renderHeight)if(""===canvas.style.height)canvas.height=canvas.width/(config.options.aspectRatio||2);else{var displayHeight=readUsedSize(canvas,"height");void 0!==displayWidth&&(canvas.height=displayHeight)}return canvas}function addListener(node,type,listener){node.addEventListener(type,listener,eventListenerOptions)}function removeListener(node,type,listener){node.removeEventListener(type,listener,eventListenerOptions)}function createEvent(type,chart,x,y,nativeEvent){return{type:type,chart:chart,native:nativeEvent||null,x:void 0!==x?x:null,y:void 0!==y?y:null}}function fromNativeEvent(event,chart){var type=EVENT_TYPES[event.type]||event.type,pos=helpers$1.getRelativePosition(event,chart);return createEvent(type,chart,pos.x,pos.y,event)}function throttled(fn,thisArg){var ticking=!1,args=[];return function(){args=Array.prototype.slice.call(arguments),thisArg=thisArg||this,ticking||(ticking=!0,helpers$1.requestAnimFrame.call(window,function(){ticking=!1,fn.apply(thisArg,args)}))}}function createDiv(cls){var el=document.createElement("div");return el.className=cls||"",el}function createResizer(handler){var resizer=createDiv(CSS_SIZE_MONITOR),expand=createDiv(CSS_SIZE_MONITOR+"-expand"),shrink=createDiv(CSS_SIZE_MONITOR+"-shrink");expand.appendChild(createDiv()),shrink.appendChild(createDiv()),resizer.appendChild(expand),resizer.appendChild(shrink),resizer._reset=function(){expand.scrollLeft=1e6,expand.scrollTop=1e6,shrink.scrollLeft=1e6,shrink.scrollTop=1e6};var onScroll=function(){resizer._reset(),handler()};return addListener(expand,"scroll",onScroll.bind(expand,"expand")),addListener(shrink,"scroll",onScroll.bind(shrink,"shrink")),resizer}function watchForRender(node,handler){var expando=node[EXPANDO_KEY]||(node[EXPANDO_KEY]={}),proxy=expando.renderProxy=function(e){e.animationName===CSS_RENDER_ANIMATION&&handler()};helpers$1.each(ANIMATION_START_EVENTS,function(type){addListener(node,type,proxy)}),expando.reflow=!!node.offsetParent,node.classList.add(CSS_RENDER_MONITOR)}function unwatchForRender(node){var expando=node[EXPANDO_KEY]||{},proxy=expando.renderProxy;proxy&&(helpers$1.each(ANIMATION_START_EVENTS,function(type){removeListener(node,type,proxy)}),delete expando.renderProxy),node.classList.remove(CSS_RENDER_MONITOR)}function addResizeListener(node,listener,chart){var expando=node[EXPANDO_KEY]||(node[EXPANDO_KEY]={}),resizer=expando.resizer=createResizer(throttled(function(){if(expando.resizer){var container=chart.options.maintainAspectRatio&&node.parentNode,w=container?container.clientWidth:0;listener(createEvent("resize",chart)),container&&container.clientWidth<w&&chart.canvas&&listener(createEvent("resize",chart))}}));watchForRender(node,function(){if(expando.resizer){var container=node.parentNode;container&&container!==resizer.parentNode&&container.insertBefore(resizer,container.firstChild),resizer._reset()}})}function removeResizeListener(node){var expando=node[EXPANDO_KEY]||{},resizer=expando.resizer;delete expando.resizer,unwatchForRender(node),resizer&&resizer.parentNode&&resizer.parentNode.removeChild(resizer)}function injectCSS(platform,css){var style=platform._style||document.createElement("style");platform._style||(platform._style=style,css="/* Chart.js */\n"+css,style.setAttribute("type","text/css"),document.getElementsByTagName("head")[0].appendChild(style)),style.appendChild(document.createTextNode(css))}function pushOrConcat(base,toPush){return toPush&&(helpers$1.isArray(toPush)?Array.prototype.push.apply(base,toPush):base.push(toPush)),base}function splitNewlines(str){return("string"==typeof str||str instanceof String)&&str.indexOf("\n")>-1?str.split("\n"):str}function createTooltipItem(element){var xScale=element._xScale,yScale=element._yScale||element._scale,index=element._index,datasetIndex=element._datasetIndex,controller=element._chart.getDatasetMeta(datasetIndex).controller,indexScale=controller._getIndexScale(),valueScale=controller._getValueScale();return{xLabel:xScale?xScale.getLabelForIndex(index,datasetIndex):"",yLabel:yScale?yScale.getLabelForIndex(index,datasetIndex):"",label:indexScale?""+indexScale.getLabelForIndex(index,datasetIndex):"",value:valueScale?""+valueScale.getLabelForIndex(index,datasetIndex):"",index:index,datasetIndex:datasetIndex,x:element._model.x,y:element._model.y}}function getBaseModel(tooltipOpts){var globalDefaults=core_defaults.global;return{xPadding:tooltipOpts.xPadding,yPadding:tooltipOpts.yPadding,xAlign:tooltipOpts.xAlign,yAlign:tooltipOpts.yAlign,bodyFontColor:tooltipOpts.bodyFontColor,_bodyFontFamily:valueOrDefault$7(tooltipOpts.bodyFontFamily,globalDefaults.defaultFontFamily),_bodyFontStyle:valueOrDefault$7(tooltipOpts.bodyFontStyle,globalDefaults.defaultFontStyle),_bodyAlign:tooltipOpts.bodyAlign,bodyFontSize:valueOrDefault$7(tooltipOpts.bodyFontSize,globalDefaults.defaultFontSize),bodySpacing:tooltipOpts.bodySpacing,titleFontColor:tooltipOpts.titleFontColor,_titleFontFamily:valueOrDefault$7(tooltipOpts.titleFontFamily,globalDefaults.defaultFontFamily),_titleFontStyle:valueOrDefault$7(tooltipOpts.titleFontStyle,globalDefaults.defaultFontStyle),titleFontSize:valueOrDefault$7(tooltipOpts.titleFontSize,globalDefaults.defaultFontSize),_titleAlign:tooltipOpts.titleAlign,titleSpacing:tooltipOpts.titleSpacing,titleMarginBottom:tooltipOpts.titleMarginBottom,footerFontColor:tooltipOpts.footerFontColor,_footerFontFamily:valueOrDefault$7(tooltipOpts.footerFontFamily,globalDefaults.defaultFontFamily),_footerFontStyle:valueOrDefault$7(tooltipOpts.footerFontStyle,globalDefaults.defaultFontStyle),footerFontSize:valueOrDefault$7(tooltipOpts.footerFontSize,globalDefaults.defaultFontSize),_footerAlign:tooltipOpts.footerAlign,footerSpacing:tooltipOpts.footerSpacing,footerMarginTop:tooltipOpts.footerMarginTop,caretSize:tooltipOpts.caretSize,cornerRadius:tooltipOpts.cornerRadius,backgroundColor:tooltipOpts.backgroundColor,opacity:0,legendColorBackground:tooltipOpts.multiKeyBackground,displayColors:tooltipOpts.displayColors,borderColor:tooltipOpts.borderColor,borderWidth:tooltipOpts.borderWidth}}function getTooltipSize(tooltip,model){var ctx=tooltip._chart.ctx,height=2*model.yPadding,width=0,body=model.body,combinedBodyLength=body.reduce(function(count,bodyItem){return count+bodyItem.before.length+bodyItem.lines.length+bodyItem.after.length},0);combinedBodyLength+=model.beforeBody.length+model.afterBody.length;var titleLineCount=model.title.length,footerLineCount=model.footer.length,titleFontSize=model.titleFontSize,bodyFontSize=model.bodyFontSize,footerFontSize=model.footerFontSize;height+=titleLineCount*titleFontSize,height+=titleLineCount?(titleLineCount-1)*model.titleSpacing:0,height+=titleLineCount?model.titleMarginBottom:0,height+=combinedBodyLength*bodyFontSize,height+=combinedBodyLength?(combinedBodyLength-1)*model.bodySpacing:0,height+=footerLineCount?model.footerMarginTop:0,height+=footerLineCount*footerFontSize,height+=footerLineCount?(footerLineCount-1)*model.footerSpacing:0;var widthPadding=0,maxLineWidth=function(line){width=Math.max(width,ctx.measureText(line).width+widthPadding)};return ctx.font=helpers$1.fontString(titleFontSize,model._titleFontStyle,model._titleFontFamily),helpers$1.each(model.title,maxLineWidth),ctx.font=helpers$1.fontString(bodyFontSize,model._bodyFontStyle,model._bodyFontFamily),helpers$1.each(model.beforeBody.concat(model.afterBody),maxLineWidth),widthPadding=model.displayColors?bodyFontSize+2:0,helpers$1.each(body,function(bodyItem){helpers$1.each(bodyItem.before,maxLineWidth),helpers$1.each(bodyItem.lines,maxLineWidth),helpers$1.each(bodyItem.after,maxLineWidth)}),widthPadding=0,ctx.font=helpers$1.fontString(footerFontSize,model._footerFontStyle,model._footerFontFamily),helpers$1.each(model.footer,maxLineWidth),width+=2*model.xPadding,{width:width,height:height}}function determineAlignment(tooltip,size){var model=tooltip._model,chart=tooltip._chart,chartArea=tooltip._chart.chartArea,xAlign="center",yAlign="center";model.y<size.height?yAlign="top":model.y>chart.height-size.height&&(yAlign="bottom");var lf,rf,olf,orf,yf,midX=(chartArea.left+chartArea.right)/2,midY=(chartArea.top+chartArea.bottom)/2;"center"===yAlign?(lf=function(x){return x<=midX},rf=function(x){return x>midX}):(lf=function(x){return x<=size.width/2},rf=function(x){return x>=chart.width-size.width/2}),olf=function(x){return x+size.width+model.caretSize+model.caretPadding>chart.width},orf=function(x){return x-size.width-model.caretSize-model.caretPadding<0},yf=function(y){return y<=midY?"top":"bottom"},lf(model.x)?(xAlign="left",olf(model.x)&&(xAlign="center",yAlign=yf(model.y))):rf(model.x)&&(xAlign="right",orf(model.x)&&(xAlign="center",yAlign=yf(model.y)));var opts=tooltip._options;return{xAlign:opts.xAlign?opts.xAlign:xAlign,yAlign:opts.yAlign?opts.yAlign:yAlign}}function getBackgroundPoint(vm,size,alignment,chart){var x=vm.x,y=vm.y,caretSize=vm.caretSize,caretPadding=vm.caretPadding,cornerRadius=vm.cornerRadius,xAlign=alignment.xAlign,yAlign=alignment.yAlign,paddingAndSize=caretSize+caretPadding,radiusAndPadding=cornerRadius+caretPadding;return"right"===xAlign?x-=size.width:"center"===xAlign&&(x-=size.width/2,x+size.width>chart.width&&(x=chart.width-size.width),x<0&&(x=0)),"top"===yAlign?y+=paddingAndSize:y-="bottom"===yAlign?size.height+paddingAndSize:size.height/2,"center"===yAlign?"left"===xAlign?x+=paddingAndSize:"right"===xAlign&&(x-=paddingAndSize):"left"===xAlign?x-=radiusAndPadding:"right"===xAlign&&(x+=radiusAndPadding),{x:x,y:y}}function getAlignedX(vm,align){return"center"===align?vm.x+vm.width/2:"right"===align?vm.x+vm.width-vm.xPadding:vm.x+vm.xPadding}function getBeforeAfterBodyLines(callback){return pushOrConcat([],splitNewlines(callback))}function mergeScaleConfig(){return helpers$1.merge({},[].slice.call(arguments),{merger:function(key,target,source,options){if("xAxes"===key||"yAxes"===key){var i,type,scale,slen=source[key].length;for(target[key]||(target[key]=[]),i=0;i<slen;++i)scale=source[key][i],type=valueOrDefault$8(scale.type,"xAxes"===key?"category":"linear"),i>=target[key].length&&target[key].push({}),!target[key][i].type||scale.type&&scale.type!==target[key][i].type?helpers$1.merge(target[key][i],[core_scaleService.getScaleDefaults(type),scale]):helpers$1.merge(target[key][i],scale)}else helpers$1._merger(key,target,source,options)}})}function mergeConfig(){return helpers$1.merge({},[].slice.call(arguments),{merger:function(key,target,source,options){var tval=target[key]||{},sval=source[key];"scales"===key?target[key]=mergeScaleConfig(tval,sval):"scale"===key?target[key]=helpers$1.merge(tval,[core_scaleService.getScaleDefaults(sval.type),sval]):helpers$1._merger(key,target,source,options)}})}function initConfig(config){config=config||{};var data=config.data=config.data||{};return data.datasets=data.datasets||[],data.labels=data.labels||[],config.options=mergeConfig(core_defaults.global,core_defaults[config.type],config.options||{}),config}function updateConfig(chart){var newOptions=chart.options;helpers$1.each(chart.scales,function(scale){core_layouts.removeBox(chart,scale)}),newOptions=mergeConfig(core_defaults.global,core_defaults[chart.config.type],newOptions),chart.options=chart.config.options=newOptions,chart.ensureScalesHaveIDs(),chart.buildOrUpdateScales(),chart.tooltip._options=newOptions.tooltips,chart.tooltip.initialize()}function positionIsHorizontal(position){return"top"===position||"bottom"===position}function abstract(){throw new Error("This method is not implemented: either no adapter can be found or an incomplete integration was provided.")}function DateAdapter(options){this.options=options||{}}function labelsFromTicks(ticks){var i,ilen,labels=[];for(i=0,ilen=ticks.length;i<ilen;++i)labels.push(ticks[i].label);return labels}function getPixelForGridLine(scale,index,offsetGridLines){var lineValue=scale.getPixelForTick(index);return offsetGridLines&&(1===scale.getTicks().length?lineValue-=scale.isHorizontal()?Math.max(lineValue-scale.left,scale.right-lineValue):Math.max(lineValue-scale.top,scale.bottom-lineValue):lineValue-=0===index?(scale.getPixelForTick(1)-lineValue)/2:(lineValue-scale.getPixelForTick(index-1))/2),lineValue}function computeTextSize(context,tick,font){return helpers$1.isArray(tick)?helpers$1.longestText(context,font,tick):context.measureText(tick).width}function generateTicks(generationOptions,dataRange){var factor,niceMin,niceMax,numSpaces,ticks=[],stepSize=generationOptions.stepSize,unit=stepSize||1,maxNumSpaces=generationOptions.maxTicks-1,min=generationOptions.min,max=generationOptions.max,precision=generationOptions.precision,rmin=dataRange.min,rmax=dataRange.max,spacing=helpers$1.niceNum((rmax-rmin)/maxNumSpaces/unit)*unit;if(spacing<1e-14&&isNullOrUndef(min)&&isNullOrUndef(max))return[rmin,rmax];numSpaces=Math.ceil(rmax/spacing)-Math.floor(rmin/spacing),numSpaces>maxNumSpaces&&(spacing=helpers$1.niceNum(numSpaces*spacing/maxNumSpaces/unit)*unit),stepSize||isNullOrUndef(precision)?factor=Math.pow(10,helpers$1._decimalPlaces(spacing)):(factor=Math.pow(10,precision),spacing=Math.ceil(spacing*factor)/factor),niceMin=Math.floor(rmin/spacing)*spacing,niceMax=Math.ceil(rmax/spacing)*spacing,stepSize&&(!isNullOrUndef(min)&&helpers$1.almostWhole(min/spacing,spacing/1e3)&&(niceMin=min),!isNullOrUndef(max)&&helpers$1.almostWhole(max/spacing,spacing/1e3)&&(niceMax=max)),
numSpaces=(niceMax-niceMin)/spacing,numSpaces=helpers$1.almostEquals(numSpaces,Math.round(numSpaces),spacing/1e3)?Math.round(numSpaces):Math.ceil(numSpaces),niceMin=Math.round(niceMin*factor)/factor,niceMax=Math.round(niceMax*factor)/factor,ticks.push(isNullOrUndef(min)?niceMin:min);for(var j=1;j<numSpaces;++j)ticks.push(Math.round((niceMin+j*spacing)*factor)/factor);return ticks.push(isNullOrUndef(max)?niceMax:max),ticks}function generateTicks$1(generationOptions,dataRange){var exp,significand,ticks=[],tickVal=valueOrDefault$a(generationOptions.min,Math.pow(10,Math.floor(helpers$1.log10(dataRange.min)))),endExp=Math.floor(helpers$1.log10(dataRange.max)),endSignificand=Math.ceil(dataRange.max/Math.pow(10,endExp));0===tickVal?(exp=Math.floor(helpers$1.log10(dataRange.minNotZero)),significand=Math.floor(dataRange.minNotZero/Math.pow(10,exp)),ticks.push(tickVal),tickVal=significand*Math.pow(10,exp)):(exp=Math.floor(helpers$1.log10(tickVal)),significand=Math.floor(tickVal/Math.pow(10,exp)));var precision=exp<0?Math.pow(10,Math.abs(exp)):1;do{ticks.push(tickVal),++significand,10===significand&&(significand=1,++exp,precision=exp>=0?1:precision),tickVal=Math.round(significand*Math.pow(10,exp)*precision)/precision}while(exp<endExp||exp===endExp&&significand<endSignificand);var lastTick=valueOrDefault$a(generationOptions.max,tickVal);return ticks.push(lastTick),ticks}function nonNegativeOrDefault(value,defaultValue){return helpers$1.isFinite(value)&&value>=0?value:defaultValue}function getValueCount(scale){var opts=scale.options;return opts.angleLines.display||opts.pointLabels.display?scale.chart.data.labels.length:0}function getTickBackdropHeight(opts){var tickOpts=opts.ticks;return tickOpts.display&&opts.display?valueOrDefault$b(tickOpts.fontSize,core_defaults.global.defaultFontSize)+2*tickOpts.backdropPaddingY:0}function measureLabelSize(ctx,lineHeight,label){return helpers$1.isArray(label)?{w:helpers$1.longestText(ctx,ctx.font,label),h:label.length*lineHeight}:{w:ctx.measureText(label).width,h:lineHeight}}function determineLimits(angle,pos,size,min,max){return angle===min||angle===max?{start:pos-size/2,end:pos+size/2}:angle<min||angle>max?{start:pos-size,end:pos}:{start:pos,end:pos+size}}function fitWithPointLabels(scale){var i,textSize,pointPosition,plFont=helpers$1.options._parseFont(scale.options.pointLabels),furthestLimits={l:0,r:scale.width,t:0,b:scale.height-scale.paddingTop},furthestAngles={};scale.ctx.font=plFont.string,scale._pointLabelSizes=[];var valueCount=getValueCount(scale);for(i=0;i<valueCount;i++){pointPosition=scale.getPointPosition(i,scale.drawingArea+5),textSize=measureLabelSize(scale.ctx,plFont.lineHeight,scale.pointLabels[i]||""),scale._pointLabelSizes[i]=textSize;var angleRadians=scale.getIndexAngle(i),angle=helpers$1.toDegrees(angleRadians)%360,hLimits=determineLimits(angle,pointPosition.x,textSize.w,0,180),vLimits=determineLimits(angle,pointPosition.y,textSize.h,90,270);hLimits.start<furthestLimits.l&&(furthestLimits.l=hLimits.start,furthestAngles.l=angleRadians),hLimits.end>furthestLimits.r&&(furthestLimits.r=hLimits.end,furthestAngles.r=angleRadians),vLimits.start<furthestLimits.t&&(furthestLimits.t=vLimits.start,furthestAngles.t=angleRadians),vLimits.end>furthestLimits.b&&(furthestLimits.b=vLimits.end,furthestAngles.b=angleRadians)}scale.setReductions(scale.drawingArea,furthestLimits,furthestAngles)}function getTextAlignForAngle(angle){return 0===angle||180===angle?"center":angle<180?"left":"right"}function fillText(ctx,text,position,lineHeight){var i,ilen,y=position.y+lineHeight/2;if(helpers$1.isArray(text))for(i=0,ilen=text.length;i<ilen;++i)ctx.fillText(text[i],position.x,y),y+=lineHeight;else ctx.fillText(text,position.x,y)}function adjustPointPositionForLabelHeight(angle,textSize,position){90===angle||270===angle?position.y-=textSize.h/2:(angle>270||angle<90)&&(position.y-=textSize.h)}function drawPointLabels(scale){var ctx=scale.ctx,opts=scale.options,angleLineOpts=opts.angleLines,gridLineOpts=opts.gridLines,pointLabelOpts=opts.pointLabels,lineWidth=valueOrDefault$b(angleLineOpts.lineWidth,gridLineOpts.lineWidth),lineColor=valueOrDefault$b(angleLineOpts.color,gridLineOpts.color),tickBackdropHeight=getTickBackdropHeight(opts);ctx.save(),ctx.lineWidth=lineWidth,ctx.strokeStyle=lineColor,ctx.setLineDash&&(ctx.setLineDash(resolve$7([angleLineOpts.borderDash,gridLineOpts.borderDash,[]])),ctx.lineDashOffset=resolve$7([angleLineOpts.borderDashOffset,gridLineOpts.borderDashOffset,0]));var outerDistance=scale.getDistanceFromCenterForValue(opts.ticks.reverse?scale.min:scale.max),plFont=helpers$1.options._parseFont(pointLabelOpts);ctx.font=plFont.string,ctx.textBaseline="middle";for(var i=getValueCount(scale)-1;i>=0;i--){if(angleLineOpts.display&&lineWidth&&lineColor){var outerPosition=scale.getPointPosition(i,outerDistance);ctx.beginPath(),ctx.moveTo(scale.xCenter,scale.yCenter),ctx.lineTo(outerPosition.x,outerPosition.y),ctx.stroke()}if(pointLabelOpts.display){var extra=0===i?tickBackdropHeight/2:0,pointLabelPosition=scale.getPointPosition(i,outerDistance+extra+5),pointLabelFontColor=valueAtIndexOrDefault$1(pointLabelOpts.fontColor,i,core_defaults.global.defaultFontColor);ctx.fillStyle=pointLabelFontColor;var angleRadians=scale.getIndexAngle(i),angle=helpers$1.toDegrees(angleRadians);ctx.textAlign=getTextAlignForAngle(angle),adjustPointPositionForLabelHeight(angle,scale._pointLabelSizes[i],pointLabelPosition),fillText(ctx,scale.pointLabels[i]||"",pointLabelPosition,plFont.lineHeight)}}ctx.restore()}function drawRadiusLine(scale,gridLineOpts,radius,index){var pointPosition,ctx=scale.ctx,circular=gridLineOpts.circular,valueCount=getValueCount(scale),lineColor=valueAtIndexOrDefault$1(gridLineOpts.color,index-1),lineWidth=valueAtIndexOrDefault$1(gridLineOpts.lineWidth,index-1);if((circular||valueCount)&&lineColor&&lineWidth){if(ctx.save(),ctx.strokeStyle=lineColor,ctx.lineWidth=lineWidth,ctx.setLineDash&&(ctx.setLineDash(gridLineOpts.borderDash||[]),ctx.lineDashOffset=gridLineOpts.borderDashOffset||0),ctx.beginPath(),circular)ctx.arc(scale.xCenter,scale.yCenter,radius,0,2*Math.PI);else{pointPosition=scale.getPointPosition(0,radius),ctx.moveTo(pointPosition.x,pointPosition.y);for(var i=1;i<valueCount;i++)pointPosition=scale.getPointPosition(i,radius),ctx.lineTo(pointPosition.x,pointPosition.y)}ctx.closePath(),ctx.stroke(),ctx.restore()}}function numberOrZero(param){return helpers$1.isNumber(param)?param:0}function sorter(a,b){return a-b}function arrayUnique(items){var i,ilen,item,hash={},out=[];for(i=0,ilen=items.length;i<ilen;++i)item=items[i],hash[item]||(hash[item]=!0,out.push(item));return out}function buildLookupTable(timestamps,min,max,distribution){if("linear"===distribution||!timestamps.length)return[{time:min,pos:0},{time:max,pos:1}];var i,ilen,prev,curr,next,table=[],items=[min];for(i=0,ilen=timestamps.length;i<ilen;++i)(curr=timestamps[i])>min&&curr<max&&items.push(curr);for(items.push(max),i=0,ilen=items.length;i<ilen;++i)next=items[i+1],prev=items[i-1],curr=items[i],void 0!==prev&&void 0!==next&&Math.round((next+prev)/2)===curr||table.push({time:curr,pos:i/(ilen-1)});return table}function lookup(table,key,value){for(var mid,i0,i1,lo=0,hi=table.length-1;lo>=0&&lo<=hi;){if(mid=lo+hi>>1,i0=table[mid-1]||null,i1=table[mid],!i0)return{lo:null,hi:i1};if(i1[key]<value)lo=mid+1;else{if(!(i0[key]>value))return{lo:i0,hi:i1};hi=mid-1}}return{lo:i1,hi:null}}function interpolate$1(table,skey,sval,tkey){var range=lookup(table,skey,sval),prev=range.lo?range.hi?range.lo:table[table.length-2]:table[0],next=range.lo?range.hi?range.hi:table[table.length-1]:table[1],span=next[skey]-prev[skey],ratio=span?(sval-prev[skey])/span:0,offset=(next[tkey]-prev[tkey])*ratio;return prev[tkey]+offset}function toTimestamp(scale,input){var adapter=scale._adapter,options=scale.options.time,parser=options.parser,format=parser||options.format,value=input;return"function"==typeof parser&&(value=parser(value)),helpers$1.isFinite(value)||(value="string"==typeof format?adapter.parse(value,format):adapter.parse(value)),null!==value?+value:(parser||"function"!=typeof format||(value=format(input),helpers$1.isFinite(value)||(value=adapter.parse(value))),value)}function parse(scale,input){if(helpers$1.isNullOrUndef(input))return null;var options=scale.options.time,value=toTimestamp(scale,scale.getRightValue(input));return null===value?value:(options.round&&(value=+scale._adapter.startOf(value,options.round)),value)}function determineStepSize(min,max,unit,capacity){var i,ilen,factor,range=max-min,interval=INTERVALS[unit],milliseconds=interval.size,steps=interval.steps;if(!steps)return Math.ceil(range/(capacity*milliseconds));for(i=0,ilen=steps.length;i<ilen&&(factor=steps[i],!(Math.ceil(range/(milliseconds*factor))<=capacity));++i);return factor}function determineUnitForAutoTicks(minUnit,min,max,capacity){var i,interval,factor,ilen=UNITS.length;for(i=UNITS.indexOf(minUnit);i<ilen-1;++i)if(interval=INTERVALS[UNITS[i]],factor=interval.steps?interval.steps[interval.steps.length-1]:MAX_INTEGER,interval.common&&Math.ceil((max-min)/(factor*interval.size))<=capacity)return UNITS[i];return UNITS[ilen-1]}function determineUnitForFormatting(scale,ticks,minUnit,min,max){var i,unit,ilen=UNITS.length;for(i=ilen-1;i>=UNITS.indexOf(minUnit);i--)if(unit=UNITS[i],INTERVALS[unit].common&&scale._adapter.diff(max,min,unit)>=ticks.length)return unit;return UNITS[minUnit?UNITS.indexOf(minUnit):0]}function determineMajorUnit(unit){for(var i=UNITS.indexOf(unit)+1,ilen=UNITS.length;i<ilen;++i)if(INTERVALS[UNITS[i]].common)return UNITS[i]}function generate(scale,min,max,capacity){var time,adapter=scale._adapter,options=scale.options,timeOpts=options.time,minor=timeOpts.unit||determineUnitForAutoTicks(timeOpts.minUnit,min,max,capacity),major=determineMajorUnit(minor),stepSize=valueOrDefault$c(timeOpts.stepSize,timeOpts.unitStepSize),weekday="week"===minor&&timeOpts.isoWeekday,majorTicksEnabled=options.ticks.major.enabled,interval=INTERVALS[minor],first=min,last=max,ticks=[];for(stepSize||(stepSize=determineStepSize(min,max,minor,capacity)),weekday&&(first=+adapter.startOf(first,"isoWeek",weekday),last=+adapter.startOf(last,"isoWeek",weekday)),first=+adapter.startOf(first,weekday?"day":minor),last=+adapter.startOf(last,weekday?"day":minor),last<max&&(last=+adapter.add(last,1,minor)),time=first,majorTicksEnabled&&major&&!weekday&&!timeOpts.round&&(time=+adapter.startOf(time,major),time=+adapter.add(time,~~((first-time)/(interval.size*stepSize))*stepSize,minor));time<last;time=+adapter.add(time,stepSize,minor))ticks.push(+time);return ticks.push(+time),ticks}function computeOffsets(table,ticks,min,max,options){var first,last,start=0,end=0;return options.offset&&ticks.length&&(options.time.min||(first=interpolate$1(table,"time",ticks[0],"pos"),start=1===ticks.length?1-first:(interpolate$1(table,"time",ticks[1],"pos")-first)/2),options.time.max||(last=interpolate$1(table,"time",ticks[ticks.length-1],"pos"),end=1===ticks.length?last:(last-interpolate$1(table,"time",ticks[ticks.length-2],"pos"))/2)),{start:start,end:end}}function ticksFromTimestamps(scale,values,majorUnit){var i,ilen,value,major,ticks=[];for(i=0,ilen=values.length;i<ilen;++i)value=values[i],major=!!majorUnit&&value===+scale._adapter.startOf(value,majorUnit),ticks.push({value:value,major:major});return ticks}function decodeFill(el,index,count){var target,model=el._model||{},fill=model.fill;if(void 0===fill&&(fill=!!model.backgroundColor),!1===fill||null===fill)return!1;if(!0===fill)return"origin";if(target=parseFloat(fill,10),isFinite(target)&&Math.floor(target)===target)return"-"!==fill[0]&&"+"!==fill[0]||(target=index+target),!(target===index||target<0||target>=count)&&target;switch(fill){case"bottom":return"start";case"top":return"end";case"zero":return"origin";case"origin":case"start":case"end":return fill;default:return!1}}function computeBoundary(source){var horizontal,model=source.el._model||{},scale=source.el._scale||{},fill=source.fill,target=null;if(isFinite(fill))return null;if("start"===fill?target=void 0===model.scaleBottom?scale.bottom:model.scaleBottom:"end"===fill?target=void 0===model.scaleTop?scale.top:model.scaleTop:void 0!==model.scaleZero?target=model.scaleZero:scale.getBasePosition?target=scale.getBasePosition():scale.getBasePixel&&(target=scale.getBasePixel()),void 0!==target&&null!==target){if(void 0!==target.x&&void 0!==target.y)return target;if(helpers$1.isFinite(target))return horizontal=scale.isHorizontal(),{x:horizontal?target:null,y:horizontal?null:target}}return null}function resolveTarget(sources,index,propagate){var target,source=sources[index],fill=source.fill,visited=[index];if(!propagate)return fill;for(;!1!==fill&&-1===visited.indexOf(fill);){if(!isFinite(fill))return fill;if(!(target=sources[fill]))return!1;if(target.visible)return fill;visited.push(fill),fill=target.fill}return!1}function createMapper(source){var fill=source.fill,type="dataset";return!1===fill?null:(isFinite(fill)||(type="boundary"),mappers[type](source))}function isDrawable(point){return point&&!point.skip}function drawArea(ctx,curve0,curve1,len0,len1){var i;if(len0&&len1){for(ctx.moveTo(curve0[0].x,curve0[0].y),i=1;i<len0;++i)helpers$1.canvas.lineTo(ctx,curve0[i-1],curve0[i]);for(ctx.lineTo(curve1[len1-1].x,curve1[len1-1].y),i=len1-1;i>0;--i)helpers$1.canvas.lineTo(ctx,curve1[i],curve1[i-1],!0)}}function doFill(ctx,points,mapper,view,color,loop){var i,ilen,index,p0,p1,d0,d1,count=points.length,span=view.spanGaps,curve0=[],curve1=[],len0=0,len1=0;for(ctx.beginPath(),i=0,ilen=count+!!loop;i<ilen;++i)index=i%count,p0=points[index]._view,p1=mapper(p0,index,view),d0=isDrawable(p0),d1=isDrawable(p1),d0&&d1?(len0=curve0.push(p0),len1=curve1.push(p1)):len0&&len1&&(span?(d0&&curve0.push(p0),d1&&curve1.push(p1)):(drawArea(ctx,curve0,curve1,len0,len1),len0=len1=0,curve0=[],curve1=[]));drawArea(ctx,curve0,curve1,len0,len1),ctx.closePath(),ctx.fillStyle=color,ctx.fill()}function getBoxWidth(labelOpts,fontSize){return labelOpts.usePointStyle&&labelOpts.boxWidth>fontSize?fontSize:labelOpts.boxWidth}function createNewLegendAndAttach(chart,legendOpts){var legend=new Legend({ctx:chart.ctx,options:legendOpts,chart:chart});core_layouts.configure(chart,legend,legendOpts),core_layouts.addBox(chart,legend),chart.legend=legend}function createNewTitleBlockAndAttach(chart,titleOpts){var title=new Title({ctx:chart.ctx,options:titleOpts,chart:chart});core_layouts.configure(chart,title,titleOpts),core_layouts.addBox(chart,title),chart.titleBlock=title}moment=moment&&moment.hasOwnProperty("default")?moment.default:moment;var conversions={rgb2hsl:rgb2hsl,rgb2hsv:rgb2hsv,rgb2hwb:rgb2hwb,rgb2cmyk:rgb2cmyk,rgb2keyword:rgb2keyword,rgb2xyz:rgb2xyz,rgb2lab:rgb2lab,rgb2lch:rgb2lch,hsl2rgb:hsl2rgb,hsl2hsv:hsl2hsv,hsl2hwb:hsl2hwb,hsl2cmyk:hsl2cmyk,hsl2keyword:hsl2keyword,hsv2rgb:hsv2rgb,hsv2hsl:hsv2hsl,hsv2hwb:hsv2hwb,hsv2cmyk:hsv2cmyk,hsv2keyword:hsv2keyword,hwb2rgb:hwb2rgb,hwb2hsl:hwb2hsl,hwb2hsv:hwb2hsv,hwb2cmyk:hwb2cmyk,hwb2keyword:hwb2keyword,cmyk2rgb:cmyk2rgb,cmyk2hsl:cmyk2hsl,cmyk2hsv:cmyk2hsv,cmyk2hwb:cmyk2hwb,cmyk2keyword:cmyk2keyword,keyword2rgb:keyword2rgb,keyword2hsl:keyword2hsl,keyword2hsv:keyword2hsv,keyword2hwb:keyword2hwb,keyword2cmyk:keyword2cmyk,keyword2lab:keyword2lab,keyword2xyz:keyword2xyz,xyz2rgb:xyz2rgb,xyz2lab:xyz2lab,xyz2lch:xyz2lch,lab2xyz:lab2xyz,lab2rgb:lab2rgb,lab2lch:lab2lch,lch2lab:lch2lab,lch2xyz:lch2xyz,lch2rgb:lch2rgb},cssKeywords={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},reverseKeywords={};for(var key in cssKeywords)reverseKeywords[JSON.stringify(cssKeywords[key])]=key;var convert=function(){return new Converter};for(var func in conversions){convert[func+"Raw"]=function(func){return function(arg){return"number"==typeof arg&&(arg=Array.prototype.slice.call(arguments)),conversions[func](arg)}}(func);var pair=/(\w+)2(\w+)/.exec(func),from=pair[1],to=pair[2];convert[from]=convert[from]||{},convert[from][to]=convert[func]=function(func){return function(arg){"number"==typeof arg&&(arg=Array.prototype.slice.call(arguments));var val=conversions[func](arg);if("string"==typeof val||void 0===val)return val;for(var i=0;i<val.length;i++)val[i]=Math.round(val[i]);return val}}(func)}var Converter=function(){this.convs={}};Converter.prototype.routeSpace=function(space,args){var values=args[0];return void 0===values?this.getValues(space):("number"==typeof values&&(values=Array.prototype.slice.call(args)),this.setValues(space,values))},Converter.prototype.setValues=function(space,values){return this.space=space,this.convs={},this.convs[space]=values,this},Converter.prototype.getValues=function(space){var vals=this.convs[space];if(!vals){var fspace=this.space,from=this.convs[fspace];vals=convert[fspace][space](from),this.convs[space]=vals}return vals},["rgb","hsl","hsv","cmyk","keyword"].forEach(function(space){Converter.prototype[space]=function(vals){return this.routeSpace(space,arguments)}});var colorConvert=convert,colorName={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},colorString={getRgba:getRgba,getHsla:getHsla,getRgb:getRgb,getHsl:getHsl,getHwb:getHwb,getAlpha:getAlpha,hexString:hexString,rgbString:rgbString,rgbaString:rgbaString,percentString:percentString,percentaString:percentaString,hslString:hslString,hslaString:hslaString,hwbString:hwbString,keyword:keyword},reverseNames={};for(var name in colorName)reverseNames[colorName[name]]=name;var Color=function(obj){if(obj instanceof Color)return obj;if(!(this instanceof Color))return new Color(obj);this.valid=!1,this.values={rgb:[0,0,0],hsl:[0,0,0],hsv:[0,0,0],hwb:[0,0,0],cmyk:[0,0,0,0],alpha:1};var vals;"string"==typeof obj?(vals=colorString.getRgba(obj),vals?this.setValues("rgb",vals):(vals=colorString.getHsla(obj))?this.setValues("hsl",vals):(vals=colorString.getHwb(obj))&&this.setValues("hwb",vals)):"object"==typeof obj&&(vals=obj,void 0!==vals.r||void 0!==vals.red?this.setValues("rgb",vals):void 0!==vals.l||void 0!==vals.lightness?this.setValues("hsl",vals):void 0!==vals.v||void 0!==vals.value?this.setValues("hsv",vals):void 0!==vals.w||void 0!==vals.whiteness?this.setValues("hwb",vals):void 0===vals.c&&void 0===vals.cyan||this.setValues("cmyk",vals))};Color.prototype={isValid:function(){return this.valid},rgb:function(){return this.setSpace("rgb",arguments)},hsl:function(){return this.setSpace("hsl",arguments)},hsv:function(){return this.setSpace("hsv",arguments)},hwb:function(){return this.setSpace("hwb",arguments)},cmyk:function(){return this.setSpace("cmyk",arguments)},rgbArray:function(){return this.values.rgb},hslArray:function(){return this.values.hsl},hsvArray:function(){return this.values.hsv},hwbArray:function(){var values=this.values;return 1!==values.alpha?values.hwb.concat([values.alpha]):values.hwb},cmykArray:function(){return this.values.cmyk},rgbaArray:function(){var values=this.values;return values.rgb.concat([values.alpha])},hslaArray:function(){var values=this.values;return values.hsl.concat([values.alpha])},alpha:function(val){return void 0===val?this.values.alpha:(this.setValues("alpha",val),this)},red:function(val){return this.setChannel("rgb",0,val)},green:function(val){return this.setChannel("rgb",1,val)},blue:function(val){return this.setChannel("rgb",2,val)},hue:function(val){return val&&(val%=360,val=val<0?360+val:val),this.setChannel("hsl",0,val)},saturation:function(val){return this.setChannel("hsl",1,val)},lightness:function(val){return this.setChannel("hsl",2,val)},saturationv:function(val){return this.setChannel("hsv",1,val)},whiteness:function(val){return this.setChannel("hwb",1,val)},blackness:function(val){return this.setChannel("hwb",2,val)},value:function(val){return this.setChannel("hsv",2,val)},cyan:function(val){return this.setChannel("cmyk",0,val)},magenta:function(val){return this.setChannel("cmyk",1,val)},yellow:function(val){return this.setChannel("cmyk",2,val)},black:function(val){return this.setChannel("cmyk",3,val)},hexString:function(){return colorString.hexString(this.values.rgb)},rgbString:function(){return colorString.rgbString(this.values.rgb,this.values.alpha)},rgbaString:function(){return colorString.rgbaString(this.values.rgb,this.values.alpha)},percentString:function(){return colorString.percentString(this.values.rgb,this.values.alpha)},hslString:function(){return colorString.hslString(this.values.hsl,this.values.alpha)},hslaString:function(){return colorString.hslaString(this.values.hsl,this.values.alpha)},hwbString:function(){return colorString.hwbString(this.values.hwb,this.values.alpha)},keyword:function(){return colorString.keyword(this.values.rgb,this.values.alpha)},rgbNumber:function(){var rgb=this.values.rgb;return rgb[0]<<16|rgb[1]<<8|rgb[2]},luminosity:function(){for(var rgb=this.values.rgb,lum=[],i=0;i<rgb.length;i++){var chan=rgb[i]/255;lum[i]=chan<=.03928?chan/12.92:Math.pow((chan+.055)/1.055,2.4)}return.2126*lum[0]+.7152*lum[1]+.0722*lum[2]},contrast:function(color2){var lum1=this.luminosity(),lum2=color2.luminosity();return lum1>lum2?(lum1+.05)/(lum2+.05):(lum2+.05)/(lum1+.05)},level:function(color2){var contrastRatio=this.contrast(color2);return contrastRatio>=7.1?"AAA":contrastRatio>=4.5?"AA":""},dark:function(){var rgb=this.values.rgb;return(299*rgb[0]+587*rgb[1]+114*rgb[2])/1e3<128},light:function(){return!this.dark()},negate:function(){for(var rgb=[],i=0;i<3;i++)rgb[i]=255-this.values.rgb[i];return this.setValues("rgb",rgb),this},lighten:function(ratio){var hsl=this.values.hsl;return hsl[2]+=hsl[2]*ratio,this.setValues("hsl",hsl),this},darken:function(ratio){var hsl=this.values.hsl;return hsl[2]-=hsl[2]*ratio,this.setValues("hsl",hsl),this},saturate:function(ratio){var hsl=this.values.hsl;return hsl[1]+=hsl[1]*ratio,this.setValues("hsl",hsl),this},desaturate:function(ratio){var hsl=this.values.hsl;return hsl[1]-=hsl[1]*ratio,this.setValues("hsl",hsl),this},whiten:function(ratio){var hwb=this.values.hwb;return hwb[1]+=hwb[1]*ratio,this.setValues("hwb",hwb),this},blacken:function(ratio){var hwb=this.values.hwb;return hwb[2]+=hwb[2]*ratio,this.setValues("hwb",hwb),this},greyscale:function(){var rgb=this.values.rgb,val=.3*rgb[0]+.59*rgb[1]+.11*rgb[2];return this.setValues("rgb",[val,val,val]),this},clearer:function(ratio){var alpha=this.values.alpha;return this.setValues("alpha",alpha-alpha*ratio),this},opaquer:function(ratio){var alpha=this.values.alpha;return this.setValues("alpha",alpha+alpha*ratio),this},rotate:function(degrees){var hsl=this.values.hsl,hue=(hsl[0]+degrees)%360;return hsl[0]=hue<0?360+hue:hue,this.setValues("hsl",hsl),this},mix:function(mixinColor,weight){var color1=this,color2=mixinColor,p=void 0===weight?.5:weight,w=2*p-1,a=color1.alpha()-color2.alpha(),w1=((w*a==-1?w:(w+a)/(1+w*a))+1)/2,w2=1-w1;return this.rgb(w1*color1.red()+w2*color2.red(),w1*color1.green()+w2*color2.green(),w1*color1.blue()+w2*color2.blue()).alpha(color1.alpha()*p+color2.alpha()*(1-p))},toJSON:function(){return this.rgb()},clone:function(){var value,type,result=new Color,source=this.values,target=result.values;for(var prop in source)source.hasOwnProperty(prop)&&(value=source[prop],type={}.toString.call(value),"[object Array]"===type?target[prop]=value.slice(0):"[object Number]"===type?target[prop]=value:console.error("unexpected color value:",value));return result}},Color.prototype.spaces={rgb:["red","green","blue"],hsl:["hue","saturation","lightness"],hsv:["hue","saturation","value"],hwb:["hue","whiteness","blackness"],cmyk:["cyan","magenta","yellow","black"]},Color.prototype.maxes={rgb:[255,255,255],hsl:[360,100,100],hsv:[360,100,100],hwb:[360,100,100],cmyk:[100,100,100,100]},Color.prototype.getValues=function(space){for(var values=this.values,vals={},i=0;i<space.length;i++)vals[space.charAt(i)]=values[space][i];return 1!==values.alpha&&(vals.a=values.alpha),vals},Color.prototype.setValues=function(space,vals){var i,values=this.values,spaces=this.spaces,maxes=this.maxes,alpha=1;if(this.valid=!0,"alpha"===space)alpha=vals;else if(vals.length)values[space]=vals.slice(0,space.length),alpha=vals[space.length];else if(void 0!==vals[space.charAt(0)]){for(i=0;i<space.length;i++)values[space][i]=vals[space.charAt(i)];alpha=vals.a}else if(void 0!==vals[spaces[space][0]]){var chans=spaces[space];for(i=0;i<space.length;i++)values[space][i]=vals[chans[i]];alpha=vals.alpha}if(values.alpha=Math.max(0,Math.min(1,void 0===alpha?values.alpha:alpha)),"alpha"===space)return!1;var capped;for(i=0;i<space.length;i++)capped=Math.max(0,Math.min(maxes[space][i],values[space][i])),values[space][i]=Math.round(capped);for(var sname in spaces)sname!==space&&(values[sname]=colorConvert[space][sname](values[space]));return!0},Color.prototype.setSpace=function(space,args){var vals=args[0];return void 0===vals?this.getValues(space):("number"==typeof vals&&(vals=Array.prototype.slice.call(args)),this.setValues(space,vals),this)},Color.prototype.setChannel=function(space,index,val){var svalues=this.values[space];return void 0===val?svalues[index]:val===svalues[index]?this:(svalues[index]=val,this.setValues(space,svalues),this)},"undefined"!=typeof window&&(window.Color=Color);var chartjsColor=Color,helpers={noop:function(){},uid:function(){var id=0;return function(){return id++}}(),isNullOrUndef:function(value){return null===value||void 0===value},isArray:function(value){
if(Array.isArray&&Array.isArray(value))return!0;var type=Object.prototype.toString.call(value);return"[object"===type.substr(0,7)&&"Array]"===type.substr(-6)},isObject:function(value){return null!==value&&"[object Object]"===Object.prototype.toString.call(value)},isFinite:function(value){return("number"==typeof value||value instanceof Number)&&isFinite(value)},valueOrDefault:function(value,defaultValue){return void 0===value?defaultValue:value},valueAtIndexOrDefault:function(value,index,defaultValue){return helpers.valueOrDefault(helpers.isArray(value)?value[index]:value,defaultValue)},callback:function(fn,args,thisArg){if(fn&&"function"==typeof fn.call)return fn.apply(thisArg,args)},each:function(loopable,fn,thisArg,reverse){var i,len,keys;if(helpers.isArray(loopable))if(len=loopable.length,reverse)for(i=len-1;i>=0;i--)fn.call(thisArg,loopable[i],i);else for(i=0;i<len;i++)fn.call(thisArg,loopable[i],i);else if(helpers.isObject(loopable))for(keys=Object.keys(loopable),len=keys.length,i=0;i<len;i++)fn.call(thisArg,loopable[keys[i]],keys[i])},arrayEquals:function(a0,a1){var i,ilen,v0,v1;if(!a0||!a1||a0.length!==a1.length)return!1;for(i=0,ilen=a0.length;i<ilen;++i)if(v0=a0[i],v1=a1[i],v0 instanceof Array&&v1 instanceof Array){if(!helpers.arrayEquals(v0,v1))return!1}else if(v0!==v1)return!1;return!0},clone:function(source){if(helpers.isArray(source))return source.map(helpers.clone);if(helpers.isObject(source)){for(var target={},keys=Object.keys(source),klen=keys.length,k=0;k<klen;++k)target[keys[k]]=helpers.clone(source[keys[k]]);return target}return source},_merger:function(key,target,source,options){var tval=target[key],sval=source[key];helpers.isObject(tval)&&helpers.isObject(sval)?helpers.merge(tval,sval,options):target[key]=helpers.clone(sval)},_mergerIf:function(key,target,source){var tval=target[key],sval=source[key];helpers.isObject(tval)&&helpers.isObject(sval)?helpers.mergeIf(tval,sval):target.hasOwnProperty(key)||(target[key]=helpers.clone(sval))},merge:function(target,source,options){var merge,i,keys,klen,k,sources=helpers.isArray(source)?source:[source],ilen=sources.length;if(!helpers.isObject(target))return target;for(options=options||{},merge=options.merger||helpers._merger,i=0;i<ilen;++i)if(source=sources[i],helpers.isObject(source))for(keys=Object.keys(source),k=0,klen=keys.length;k<klen;++k)merge(keys[k],target,source,options);return target},mergeIf:function(target,source){return helpers.merge(target,source,{merger:helpers._mergerIf})},extend:function(target){for(var setFn=function(value,key){target[key]=value},i=1,ilen=arguments.length;i<ilen;++i)helpers.each(arguments[i],setFn);return target},inherits:function(extensions){var me=this,ChartElement=extensions&&extensions.hasOwnProperty("constructor")?extensions.constructor:function(){return me.apply(this,arguments)},Surrogate=function(){this.constructor=ChartElement};return Surrogate.prototype=me.prototype,ChartElement.prototype=new Surrogate,ChartElement.extend=helpers.inherits,extensions&&helpers.extend(ChartElement.prototype,extensions),ChartElement.__super__=me.prototype,ChartElement}},helpers_core=helpers;helpers.callCallback=helpers.callback,helpers.indexOf=function(array,item,fromIndex){return Array.prototype.indexOf.call(array,item,fromIndex)},helpers.getValueOrDefault=helpers.valueOrDefault,helpers.getValueAtIndexOrDefault=helpers.valueAtIndexOrDefault;var effects={linear:function(t){return t},easeInQuad:function(t){return t*t},easeOutQuad:function(t){return-t*(t-2)},easeInOutQuad:function(t){return(t/=.5)<1?.5*t*t:-.5*(--t*(t-2)-1)},easeInCubic:function(t){return t*t*t},easeOutCubic:function(t){return(t-=1)*t*t+1},easeInOutCubic:function(t){return(t/=.5)<1?.5*t*t*t:.5*((t-=2)*t*t+2)},easeInQuart:function(t){return t*t*t*t},easeOutQuart:function(t){return-((t-=1)*t*t*t-1)},easeInOutQuart:function(t){return(t/=.5)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2)},easeInQuint:function(t){return t*t*t*t*t},easeOutQuint:function(t){return(t-=1)*t*t*t*t+1},easeInOutQuint:function(t){return(t/=.5)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2)},easeInSine:function(t){return 1-Math.cos(t*(Math.PI/2))},easeOutSine:function(t){return Math.sin(t*(Math.PI/2))},easeInOutSine:function(t){return-.5*(Math.cos(Math.PI*t)-1)},easeInExpo:function(t){return 0===t?0:Math.pow(2,10*(t-1))},easeOutExpo:function(t){return 1===t?1:1-Math.pow(2,-10*t)},easeInOutExpo:function(t){return 0===t?0:1===t?1:(t/=.5)<1?.5*Math.pow(2,10*(t-1)):.5*(2-Math.pow(2,-10*--t))},easeInCirc:function(t){return t>=1?t:-(Math.sqrt(1-t*t)-1)},easeOutCirc:function(t){return Math.sqrt(1-(t-=1)*t)},easeInOutCirc:function(t){return(t/=.5)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)},easeInElastic:function(t){var s=1.70158,p=0,a=1;return 0===t?0:1===t?1:(p||(p=.3),a<1?(a=1,s=p/4):s=p/(2*Math.PI)*Math.asin(1/a),-a*Math.pow(2,10*(t-=1))*Math.sin((t-s)*(2*Math.PI)/p))},easeOutElastic:function(t){var s=1.70158,p=0,a=1;return 0===t?0:1===t?1:(p||(p=.3),a<1?(a=1,s=p/4):s=p/(2*Math.PI)*Math.asin(1/a),a*Math.pow(2,-10*t)*Math.sin((t-s)*(2*Math.PI)/p)+1)},easeInOutElastic:function(t){var s=1.70158,p=0,a=1;return 0===t?0:2==(t/=.5)?1:(p||(p=.45),a<1?(a=1,s=p/4):s=p/(2*Math.PI)*Math.asin(1/a),t<1?a*Math.pow(2,10*(t-=1))*Math.sin((t-s)*(2*Math.PI)/p)*-.5:a*Math.pow(2,-10*(t-=1))*Math.sin((t-s)*(2*Math.PI)/p)*.5+1)},easeInBack:function(t){var s=1.70158;return t*t*((s+1)*t-s)},easeOutBack:function(t){var s=1.70158;return(t-=1)*t*((s+1)*t+s)+1},easeInOutBack:function(t){var s=1.70158;return(t/=.5)<1?t*t*((1+(s*=1.525))*t-s)*.5:.5*((t-=2)*t*((1+(s*=1.525))*t+s)+2)},easeInBounce:function(t){return 1-effects.easeOutBounce(1-t)},easeOutBounce:function(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375},easeInOutBounce:function(t){return t<.5?.5*effects.easeInBounce(2*t):.5*effects.easeOutBounce(2*t-1)+.5}},helpers_easing={effects:effects};helpers_core.easingEffects=effects;var PI=Math.PI,RAD_PER_DEG=PI/180,DOUBLE_PI=2*PI,HALF_PI=PI/2,QUARTER_PI=PI/4,TWO_THIRDS_PI=2*PI/3,exports$1={clear:function(chart){chart.ctx.clearRect(0,0,chart.width,chart.height)},roundedRect:function(ctx,x,y,width,height,radius){if(radius){var r=Math.min(radius,height/2,width/2),left=x+r,top=y+r,right=x+width-r,bottom=y+height-r;ctx.moveTo(x,top),left<right&&top<bottom?(ctx.arc(left,top,r,-PI,-HALF_PI),ctx.arc(right,top,r,-HALF_PI,0),ctx.arc(right,bottom,r,0,HALF_PI),ctx.arc(left,bottom,r,HALF_PI,PI)):left<right?(ctx.moveTo(left,y),ctx.arc(right,top,r,-HALF_PI,HALF_PI),ctx.arc(left,top,r,HALF_PI,PI+HALF_PI)):top<bottom?(ctx.arc(left,top,r,-PI,0),ctx.arc(left,bottom,r,0,PI)):ctx.arc(left,top,r,-PI,PI),ctx.closePath(),ctx.moveTo(x,y)}else ctx.rect(x,y,width,height)},drawPoint:function(ctx,style,radius,x,y,rotation){var type,xOffset,yOffset,size,cornerRadius,rad=(rotation||0)*RAD_PER_DEG;if(style&&"object"==typeof style&&("[object HTMLImageElement]"===(type=style.toString())||"[object HTMLCanvasElement]"===type))return void ctx.drawImage(style,x-style.width/2,y-style.height/2,style.width,style.height);if(!(isNaN(radius)||radius<=0)){switch(ctx.beginPath(),style){default:ctx.arc(x,y,radius,0,DOUBLE_PI),ctx.closePath();break;case"triangle":ctx.moveTo(x+Math.sin(rad)*radius,y-Math.cos(rad)*radius),rad+=TWO_THIRDS_PI,ctx.lineTo(x+Math.sin(rad)*radius,y-Math.cos(rad)*radius),rad+=TWO_THIRDS_PI,ctx.lineTo(x+Math.sin(rad)*radius,y-Math.cos(rad)*radius),ctx.closePath();break;case"rectRounded":cornerRadius=.516*radius,size=radius-cornerRadius,xOffset=Math.cos(rad+QUARTER_PI)*size,yOffset=Math.sin(rad+QUARTER_PI)*size,ctx.arc(x-xOffset,y-yOffset,cornerRadius,rad-PI,rad-HALF_PI),ctx.arc(x+yOffset,y-xOffset,cornerRadius,rad-HALF_PI,rad),ctx.arc(x+xOffset,y+yOffset,cornerRadius,rad,rad+HALF_PI),ctx.arc(x-yOffset,y+xOffset,cornerRadius,rad+HALF_PI,rad+PI),ctx.closePath();break;case"rect":if(!rotation){size=Math.SQRT1_2*radius,ctx.rect(x-size,y-size,2*size,2*size);break}rad+=QUARTER_PI;case"rectRot":xOffset=Math.cos(rad)*radius,yOffset=Math.sin(rad)*radius,ctx.moveTo(x-xOffset,y-yOffset),ctx.lineTo(x+yOffset,y-xOffset),ctx.lineTo(x+xOffset,y+yOffset),ctx.lineTo(x-yOffset,y+xOffset),ctx.closePath();break;case"crossRot":rad+=QUARTER_PI;case"cross":xOffset=Math.cos(rad)*radius,yOffset=Math.sin(rad)*radius,ctx.moveTo(x-xOffset,y-yOffset),ctx.lineTo(x+xOffset,y+yOffset),ctx.moveTo(x+yOffset,y-xOffset),ctx.lineTo(x-yOffset,y+xOffset);break;case"star":xOffset=Math.cos(rad)*radius,yOffset=Math.sin(rad)*radius,ctx.moveTo(x-xOffset,y-yOffset),ctx.lineTo(x+xOffset,y+yOffset),ctx.moveTo(x+yOffset,y-xOffset),ctx.lineTo(x-yOffset,y+xOffset),rad+=QUARTER_PI,xOffset=Math.cos(rad)*radius,yOffset=Math.sin(rad)*radius,ctx.moveTo(x-xOffset,y-yOffset),ctx.lineTo(x+xOffset,y+yOffset),ctx.moveTo(x+yOffset,y-xOffset),ctx.lineTo(x-yOffset,y+xOffset);break;case"line":xOffset=Math.cos(rad)*radius,yOffset=Math.sin(rad)*radius,ctx.moveTo(x-xOffset,y-yOffset),ctx.lineTo(x+xOffset,y+yOffset);break;case"dash":ctx.moveTo(x,y),ctx.lineTo(x+Math.cos(rad)*radius,y+Math.sin(rad)*radius)}ctx.fill(),ctx.stroke()}},_isPointInArea:function(point,area){return point.x>area.left-1e-6&&point.x<area.right+1e-6&&point.y>area.top-1e-6&&point.y<area.bottom+1e-6},clipArea:function(ctx,area){ctx.save(),ctx.beginPath(),ctx.rect(area.left,area.top,area.right-area.left,area.bottom-area.top),ctx.clip()},unclipArea:function(ctx){ctx.restore()},lineTo:function(ctx,previous,target,flip){var stepped=target.steppedLine;if(stepped){if("middle"===stepped){var midpoint=(previous.x+target.x)/2;ctx.lineTo(midpoint,flip?target.y:previous.y),ctx.lineTo(midpoint,flip?previous.y:target.y)}else"after"===stepped&&!flip||"after"!==stepped&&flip?ctx.lineTo(previous.x,target.y):ctx.lineTo(target.x,previous.y);return void ctx.lineTo(target.x,target.y)}if(!target.tension)return void ctx.lineTo(target.x,target.y);ctx.bezierCurveTo(flip?previous.controlPointPreviousX:previous.controlPointNextX,flip?previous.controlPointPreviousY:previous.controlPointNextY,flip?target.controlPointNextX:target.controlPointPreviousX,flip?target.controlPointNextY:target.controlPointPreviousY,target.x,target.y)}},helpers_canvas=exports$1;helpers_core.clear=exports$1.clear,helpers_core.drawRoundedRectangle=function(ctx){ctx.beginPath(),exports$1.roundedRect.apply(exports$1,arguments)};var defaults={_set:function(scope,values){return helpers_core.merge(this[scope]||(this[scope]={}),values)}};defaults._set("global",{defaultColor:"rgba(0,0,0,0.1)",defaultFontColor:"#666",defaultFontFamily:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",defaultFontSize:12,defaultFontStyle:"normal",defaultLineHeight:1.2,showLines:!0});var core_defaults=defaults,valueOrDefault=helpers_core.valueOrDefault,helpers_options={toLineHeight:function(value,size){var matches=(""+value).match(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/);if(!matches||"normal"===matches[1])return 1.2*size;switch(value=+matches[2],matches[3]){case"px":return value;case"%":value/=100}return size*value},toPadding:function(value){var t,r,b,l;return helpers_core.isObject(value)?(t=+value.top||0,r=+value.right||0,b=+value.bottom||0,l=+value.left||0):t=r=b=l=+value||0,{top:t,right:r,bottom:b,left:l,height:t+b,width:l+r}},_parseFont:function(options){var globalDefaults=core_defaults.global,size=valueOrDefault(options.fontSize,globalDefaults.defaultFontSize),font={family:valueOrDefault(options.fontFamily,globalDefaults.defaultFontFamily),lineHeight:helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight,globalDefaults.defaultLineHeight),size),size:size,style:valueOrDefault(options.fontStyle,globalDefaults.defaultFontStyle),weight:null,string:""};return font.string=toFontString(font),font},resolve:function(inputs,context,index){var i,ilen,value;for(i=0,ilen=inputs.length;i<ilen;++i)if(void 0!==(value=inputs[i])&&(void 0!==context&&"function"==typeof value&&(value=value(context)),void 0!==index&&helpers_core.isArray(value)&&(value=value[index]),void 0!==value))return value}},helpers$1=helpers_core,easing=helpers_easing,canvas=helpers_canvas,options=helpers_options;helpers$1.easing=easing,helpers$1.canvas=canvas,helpers$1.options=options;var Element=function(configuration){helpers$1.extend(this,configuration),this.initialize.apply(this,arguments)};helpers$1.extend(Element.prototype,{initialize:function(){this.hidden=!1},pivot:function(){var me=this;return me._view||(me._view=helpers$1.clone(me._model)),me._start={},me},transition:function(ease){var me=this,model=me._model,start=me._start,view=me._view;return model&&1!==ease?(view||(view=me._view={}),start||(start=me._start={}),interpolate(start,view,model,ease),me):(me._view=model,me._start=null,me)},tooltipPosition:function(){return{x:this._model.x,y:this._model.y}},hasValue:function(){return helpers$1.isNumber(this._model.x)&&helpers$1.isNumber(this._model.y)}}),Element.extend=helpers$1.inherits;var core_element=Element,exports$2=core_element.extend({chart:null,currentStep:0,numSteps:60,easing:"",render:null,onAnimationProgress:null,onAnimationComplete:null}),core_animation=exports$2;Object.defineProperty(exports$2.prototype,"animationObject",{get:function(){return this}}),Object.defineProperty(exports$2.prototype,"chartInstance",{get:function(){return this.chart},set:function(value){this.chart=value}}),core_defaults._set("global",{animation:{duration:1e3,easing:"easeOutQuart",onProgress:helpers$1.noop,onComplete:helpers$1.noop}});var core_animations={animations:[],request:null,addAnimation:function(chart,animation,duration,lazy){var i,ilen,animations=this.animations;for(animation.chart=chart,animation.startTime=Date.now(),animation.duration=duration,lazy||(chart.animating=!0),i=0,ilen=animations.length;i<ilen;++i)if(animations[i].chart===chart)return void(animations[i]=animation);animations.push(animation),1===animations.length&&this.requestAnimationFrame()},cancelAnimation:function(chart){var index=helpers$1.findIndex(this.animations,function(animation){return animation.chart===chart});-1!==index&&(this.animations.splice(index,1),chart.animating=!1)},requestAnimationFrame:function(){var me=this;null===me.request&&(me.request=helpers$1.requestAnimFrame.call(window,function(){me.request=null,me.startDigest()}))},startDigest:function(){var me=this;me.advance(),me.animations.length>0&&me.requestAnimationFrame()},advance:function(){for(var animation,chart,numSteps,nextStep,animations=this.animations,i=0;i<animations.length;)animation=animations[i],chart=animation.chart,numSteps=animation.numSteps,nextStep=Math.floor((Date.now()-animation.startTime)/animation.duration*numSteps)+1,animation.currentStep=Math.min(nextStep,numSteps),helpers$1.callback(animation.render,[chart,animation],chart),helpers$1.callback(animation.onAnimationProgress,[animation],chart),animation.currentStep>=numSteps?(helpers$1.callback(animation.onAnimationComplete,[animation],chart),chart.animating=!1,animations.splice(i,1)):++i}},resolve=helpers$1.options.resolve,arrayEvents=["push","pop","shift","splice","unshift"],DatasetController=function(chart,datasetIndex){this.initialize(chart,datasetIndex)};helpers$1.extend(DatasetController.prototype,{datasetElementType:null,dataElementType:null,initialize:function(chart,datasetIndex){var me=this;me.chart=chart,me.index=datasetIndex,me.linkScales(),me.addElements()},updateIndex:function(datasetIndex){this.index=datasetIndex},linkScales:function(){var me=this,meta=me.getMeta(),dataset=me.getDataset();null!==meta.xAxisID&&meta.xAxisID in me.chart.scales||(meta.xAxisID=dataset.xAxisID||me.chart.options.scales.xAxes[0].id),null!==meta.yAxisID&&meta.yAxisID in me.chart.scales||(meta.yAxisID=dataset.yAxisID||me.chart.options.scales.yAxes[0].id)},getDataset:function(){return this.chart.data.datasets[this.index]},getMeta:function(){return this.chart.getDatasetMeta(this.index)},getScaleForId:function(scaleID){return this.chart.scales[scaleID]},_getValueScaleId:function(){return this.getMeta().yAxisID},_getIndexScaleId:function(){return this.getMeta().xAxisID},_getValueScale:function(){return this.getScaleForId(this._getValueScaleId())},_getIndexScale:function(){return this.getScaleForId(this._getIndexScaleId())},reset:function(){this.update(!0)},destroy:function(){this._data&&unlistenArrayEvents(this._data,this)},createMetaDataset:function(){var me=this,type=me.datasetElementType;return type&&new type({_chart:me.chart,_datasetIndex:me.index})},createMetaData:function(index){var me=this,type=me.dataElementType;return type&&new type({_chart:me.chart,_datasetIndex:me.index,_index:index})},addElements:function(){var i,ilen,me=this,meta=me.getMeta(),data=me.getDataset().data||[],metaData=meta.data;for(i=0,ilen=data.length;i<ilen;++i)metaData[i]=metaData[i]||me.createMetaData(i);meta.dataset=meta.dataset||me.createMetaDataset()},addElementAndReset:function(index){var element=this.createMetaData(index);this.getMeta().data.splice(index,0,element),this.updateElement(element,index,!0)},buildOrUpdateElements:function(){var me=this,dataset=me.getDataset(),data=dataset.data||(dataset.data=[]);me._data!==data&&(me._data&&unlistenArrayEvents(me._data,me),data&&Object.isExtensible(data)&&listenArrayEvents(data,me),me._data=data),me.resyncElements()},update:helpers$1.noop,transition:function(easingValue){for(var meta=this.getMeta(),elements=meta.data||[],ilen=elements.length,i=0;i<ilen;++i)elements[i].transition(easingValue);meta.dataset&&meta.dataset.transition(easingValue)},draw:function(){var meta=this.getMeta(),elements=meta.data||[],ilen=elements.length,i=0;for(meta.dataset&&meta.dataset.draw();i<ilen;++i)elements[i].draw()},removeHoverStyle:function(element){helpers$1.merge(element._model,element.$previousStyle||{}),delete element.$previousStyle},setHoverStyle:function(element){var dataset=this.chart.data.datasets[element._datasetIndex],index=element._index,custom=element.custom||{},model=element._model,getHoverColor=helpers$1.getHoverColor;element.$previousStyle={backgroundColor:model.backgroundColor,borderColor:model.borderColor,borderWidth:model.borderWidth},model.backgroundColor=resolve([custom.hoverBackgroundColor,dataset.hoverBackgroundColor,getHoverColor(model.backgroundColor)],void 0,index),model.borderColor=resolve([custom.hoverBorderColor,dataset.hoverBorderColor,getHoverColor(model.borderColor)],void 0,index),model.borderWidth=resolve([custom.hoverBorderWidth,dataset.hoverBorderWidth,model.borderWidth],void 0,index)},resyncElements:function(){var me=this,meta=me.getMeta(),data=me.getDataset().data,numMeta=meta.data.length,numData=data.length;numData<numMeta?meta.data.splice(numData,numMeta-numData):numData>numMeta&&me.insertElements(numMeta,numData-numMeta)},insertElements:function(start,count){for(var i=0;i<count;++i)this.addElementAndReset(start+i)},onDataPush:function(){var count=arguments.length;this.insertElements(this.getDataset().data.length-count,count)},onDataPop:function(){this.getMeta().data.pop()},onDataShift:function(){this.getMeta().data.shift()},onDataSplice:function(start,count){this.getMeta().data.splice(start,count),this.insertElements(start,arguments.length-2)},onDataUnshift:function(){this.insertElements(0,arguments.length)}}),DatasetController.extend=helpers$1.inherits;var core_datasetController=DatasetController;core_defaults._set("global",{elements:{arc:{backgroundColor:core_defaults.global.defaultColor,borderColor:"#fff",borderWidth:2,borderAlign:"center"}}});var element_arc=core_element.extend({inLabelRange:function(mouseX){var vm=this._view;return!!vm&&Math.pow(mouseX-vm.x,2)<Math.pow(vm.radius+vm.hoverRadius,2)},inRange:function(chartX,chartY){var vm=this._view;if(vm){for(var pointRelativePosition=helpers$1.getAngleFromPoint(vm,{x:chartX,y:chartY}),angle=pointRelativePosition.angle,distance=pointRelativePosition.distance,startAngle=vm.startAngle,endAngle=vm.endAngle;endAngle<startAngle;)endAngle+=2*Math.PI;for(;angle>endAngle;)angle-=2*Math.PI;for(;angle<startAngle;)angle+=2*Math.PI;var betweenAngles=angle>=startAngle&&angle<=endAngle,withinRadius=distance>=vm.innerRadius&&distance<=vm.outerRadius;return betweenAngles&&withinRadius}return!1},getCenterPoint:function(){var vm=this._view,halfAngle=(vm.startAngle+vm.endAngle)/2,halfRadius=(vm.innerRadius+vm.outerRadius)/2;return{x:vm.x+Math.cos(halfAngle)*halfRadius,y:vm.y+Math.sin(halfAngle)*halfRadius}},getArea:function(){var vm=this._view;return Math.PI*((vm.endAngle-vm.startAngle)/(2*Math.PI))*(Math.pow(vm.outerRadius,2)-Math.pow(vm.innerRadius,2))},tooltipPosition:function(){var vm=this._view,centreAngle=vm.startAngle+(vm.endAngle-vm.startAngle)/2,rangeFromCentre=(vm.outerRadius-vm.innerRadius)/2+vm.innerRadius;return{x:vm.x+Math.cos(centreAngle)*rangeFromCentre,y:vm.y+Math.sin(centreAngle)*rangeFromCentre}},draw:function(){var angleMargin,ctx=this._chart.ctx,vm=this._view,sA=vm.startAngle,eA=vm.endAngle,pixelMargin="inner"===vm.borderAlign?.33:0;ctx.save(),ctx.beginPath(),ctx.arc(vm.x,vm.y,Math.max(vm.outerRadius-pixelMargin,0),sA,eA),ctx.arc(vm.x,vm.y,vm.innerRadius,eA,sA,!0),ctx.closePath(),ctx.fillStyle=vm.backgroundColor,ctx.fill(),vm.borderWidth&&("inner"===vm.borderAlign?(ctx.beginPath(),angleMargin=pixelMargin/vm.outerRadius,ctx.arc(vm.x,vm.y,vm.outerRadius,sA-angleMargin,eA+angleMargin),vm.innerRadius>pixelMargin?(angleMargin=pixelMargin/vm.innerRadius,ctx.arc(vm.x,vm.y,vm.innerRadius-pixelMargin,eA+angleMargin,sA-angleMargin,!0)):ctx.arc(vm.x,vm.y,pixelMargin,eA+Math.PI/2,sA-Math.PI/2),ctx.closePath(),ctx.clip(),ctx.beginPath(),ctx.arc(vm.x,vm.y,vm.outerRadius,sA,eA),ctx.arc(vm.x,vm.y,vm.innerRadius,eA,sA,!0),ctx.closePath(),ctx.lineWidth=2*vm.borderWidth,ctx.lineJoin="round"):(ctx.lineWidth=vm.borderWidth,ctx.lineJoin="bevel"),ctx.strokeStyle=vm.borderColor,ctx.stroke()),ctx.restore()}}),valueOrDefault$1=helpers$1.valueOrDefault,defaultColor=core_defaults.global.defaultColor;core_defaults._set("global",{elements:{line:{tension:.4,backgroundColor:defaultColor,borderWidth:3,borderColor:defaultColor,borderCapStyle:"butt",borderDash:[],borderDashOffset:0,borderJoinStyle:"miter",capBezierPoints:!0,fill:!0}}});var element_line=core_element.extend({draw:function(){var index,current,previous,currentVM,me=this,vm=me._view,ctx=me._chart.ctx,spanGaps=vm.spanGaps,points=me._children.slice(),globalDefaults=core_defaults.global,globalOptionLineElements=globalDefaults.elements.line,lastDrawnIndex=-1;for(me._loop&&points.length&&points.push(points[0]),ctx.save(),ctx.lineCap=vm.borderCapStyle||globalOptionLineElements.borderCapStyle,ctx.setLineDash&&ctx.setLineDash(vm.borderDash||globalOptionLineElements.borderDash),ctx.lineDashOffset=valueOrDefault$1(vm.borderDashOffset,globalOptionLineElements.borderDashOffset),ctx.lineJoin=vm.borderJoinStyle||globalOptionLineElements.borderJoinStyle,ctx.lineWidth=valueOrDefault$1(vm.borderWidth,globalOptionLineElements.borderWidth),ctx.strokeStyle=vm.borderColor||globalDefaults.defaultColor,ctx.beginPath(),lastDrawnIndex=-1,index=0;index<points.length;++index)current=points[index],previous=helpers$1.previousItem(points,index),currentVM=current._view,0===index?currentVM.skip||(ctx.moveTo(currentVM.x,currentVM.y),lastDrawnIndex=index):(previous=-1===lastDrawnIndex?previous:points[lastDrawnIndex],currentVM.skip||(lastDrawnIndex!==index-1&&!spanGaps||-1===lastDrawnIndex?ctx.moveTo(currentVM.x,currentVM.y):helpers$1.canvas.lineTo(ctx,previous._view,current._view),lastDrawnIndex=index));ctx.stroke(),ctx.restore()}}),valueOrDefault$2=helpers$1.valueOrDefault,defaultColor$1=core_defaults.global.defaultColor;core_defaults._set("global",{elements:{point:{radius:3,pointStyle:"circle",backgroundColor:defaultColor$1,borderColor:defaultColor$1,borderWidth:1,hitRadius:1,hoverRadius:4,hoverBorderWidth:1}}});var element_point=core_element.extend({inRange:function(mouseX,mouseY){var vm=this._view;return!!vm&&Math.pow(mouseX-vm.x,2)+Math.pow(mouseY-vm.y,2)<Math.pow(vm.hitRadius+vm.radius,2)},inLabelRange:xRange,inXRange:xRange,inYRange:yRange,getCenterPoint:function(){var vm=this._view;return{x:vm.x,y:vm.y}},getArea:function(){return Math.PI*Math.pow(this._view.radius,2)},tooltipPosition:function(){var vm=this._view;return{x:vm.x,y:vm.y,padding:vm.radius+vm.borderWidth}},draw:function(chartArea){var vm=this._view,ctx=this._chart.ctx,pointStyle=vm.pointStyle,rotation=vm.rotation,radius=vm.radius,x=vm.x,y=vm.y,globalDefaults=core_defaults.global,defaultColor=globalDefaults.defaultColor;vm.skip||(void 0===chartArea||helpers$1.canvas._isPointInArea(vm,chartArea))&&(ctx.strokeStyle=vm.borderColor||defaultColor,ctx.lineWidth=valueOrDefault$2(vm.borderWidth,globalDefaults.elements.point.borderWidth),ctx.fillStyle=vm.backgroundColor||defaultColor,helpers$1.canvas.drawPoint(ctx,pointStyle,radius,x,y,rotation))}}),defaultColor$2=core_defaults.global.defaultColor;core_defaults._set("global",{elements:{rectangle:{backgroundColor:defaultColor$2,borderColor:defaultColor$2,borderSkipped:"bottom",borderWidth:0}}});var element_rectangle=core_element.extend({draw:function(){var ctx=this._chart.ctx,vm=this._view,rects=boundingRects(vm),outer=rects.outer,inner=rects.inner;ctx.fillStyle=vm.backgroundColor,ctx.fillRect(outer.x,outer.y,outer.w,outer.h),outer.w===inner.w&&outer.h===inner.h||(ctx.save(),ctx.beginPath(),ctx.rect(outer.x,outer.y,outer.w,outer.h),ctx.clip(),ctx.fillStyle=vm.borderColor,ctx.rect(inner.x,inner.y,inner.w,inner.h),ctx.fill("evenodd"),ctx.restore())},height:function(){var vm=this._view;return vm.base-vm.y},inRange:function(mouseX,mouseY){return inRange(this._view,mouseX,mouseY)},inLabelRange:function(mouseX,mouseY){var vm=this._view;return isVertical(vm)?inRange(vm,mouseX,null):inRange(vm,null,mouseY)},inXRange:function(mouseX){return inRange(this._view,mouseX,null)},inYRange:function(mouseY){return inRange(this._view,null,mouseY)},getCenterPoint:function(){var x,y,vm=this._view;return isVertical(vm)?(x=vm.x,y=(vm.y+vm.base)/2):(x=(vm.x+vm.base)/2,y=vm.y),{x:x,y:y}},getArea:function(){var vm=this._view;return isVertical(vm)?vm.width*Math.abs(vm.y-vm.base):vm.height*Math.abs(vm.x-vm.base)},tooltipPosition:function(){var vm=this._view;return{x:vm.x,y:vm.y}}}),elements={},Arc=element_arc,Line=element_line,Point=element_point,Rectangle=element_rectangle;elements.Arc=Arc,elements.Line=Line,elements.Point=Point,elements.Rectangle=Rectangle;var resolve$1=helpers$1.options.resolve;core_defaults._set("bar",{hover:{mode:"label"},scales:{xAxes:[{type:"category",categoryPercentage:.8,barPercentage:.9,offset:!0,gridLines:{offsetGridLines:!0}}],yAxes:[{type:"linear"}]}});var controller_bar=core_datasetController.extend({dataElementType:elements.Rectangle,initialize:function(){var meta,me=this;core_datasetController.prototype.initialize.apply(me,arguments),meta=me.getMeta(),meta.stack=me.getDataset().stack,meta.bar=!0},update:function(reset){var i,ilen,me=this,rects=me.getMeta().data;for(me._ruler=me.getRuler(),i=0,ilen=rects.length;i<ilen;++i)me.updateElement(rects[i],i,reset)},updateElement:function(rectangle,index,reset){var me=this,meta=me.getMeta(),dataset=me.getDataset(),options=me._resolveElementOptions(rectangle,index);rectangle._xScale=me.getScaleForId(meta.xAxisID),rectangle._yScale=me.getScaleForId(meta.yAxisID),rectangle._datasetIndex=me.index,rectangle._index=index,rectangle._model={backgroundColor:options.backgroundColor,borderColor:options.borderColor,borderSkipped:options.borderSkipped,borderWidth:options.borderWidth,datasetLabel:dataset.label,label:me.chart.data.labels[index]},me._updateElementGeometry(rectangle,index,reset),rectangle.pivot()},_updateElementGeometry:function(rectangle,index,reset){var me=this,model=rectangle._model,vscale=me._getValueScale(),base=vscale.getBasePixel(),horizontal=vscale.isHorizontal(),ruler=me._ruler||me.getRuler(),vpixels=me.calculateBarValuePixels(me.index,index),ipixels=me.calculateBarIndexPixels(me.index,index,ruler);model.horizontal=horizontal,model.base=reset?base:vpixels.base,model.x=horizontal?reset?base:vpixels.head:ipixels.center,model.y=horizontal?ipixels.center:reset?base:vpixels.head,model.height=horizontal?ipixels.size:void 0,model.width=horizontal?void 0:ipixels.size},_getStacks:function(last){var i,meta,me=this,chart=me.chart,scale=me._getIndexScale(),stacked=scale.options.stacked,ilen=void 0===last?chart.data.datasets.length:last+1,stacks=[];for(i=0;i<ilen;++i)meta=chart.getDatasetMeta(i),meta.bar&&chart.isDatasetVisible(i)&&(!1===stacked||!0===stacked&&-1===stacks.indexOf(meta.stack)||void 0===stacked&&(void 0===meta.stack||-1===stacks.indexOf(meta.stack)))&&stacks.push(meta.stack);return stacks},getStackCount:function(){return this._getStacks().length},getStackIndex:function(datasetIndex,name){var stacks=this._getStacks(datasetIndex),index=void 0!==name?stacks.indexOf(name):-1;return-1===index?stacks.length-1:index},getRuler:function(){var i,ilen,min,me=this,scale=me._getIndexScale(),stackCount=me.getStackCount(),datasetIndex=me.index,isHorizontal=scale.isHorizontal(),start=isHorizontal?scale.left:scale.top,end=start+(isHorizontal?scale.width:scale.height),pixels=[];for(i=0,ilen=me.getMeta().data.length;i<ilen;++i)pixels.push(scale.getPixelForValue(null,i,datasetIndex));return min=helpers$1.isNullOrUndef(scale.options.barThickness)?computeMinSampleSize(scale,pixels):-1,{min:min,pixels:pixels,start:start,end:end,stackCount:stackCount,scale:scale}},calculateBarValuePixels:function(datasetIndex,index){var i,imeta,ivalue,base,head,size,me=this,chart=me.chart,meta=me.getMeta(),scale=me._getValueScale(),isHorizontal=scale.isHorizontal(),datasets=chart.data.datasets,value=+scale.getRightValue(datasets[datasetIndex].data[index]),minBarLength=scale.options.minBarLength,stacked=scale.options.stacked,stack=meta.stack,start=0;if(stacked||void 0===stacked&&void 0!==stack)for(i=0;i<datasetIndex;++i)imeta=chart.getDatasetMeta(i),imeta.bar&&imeta.stack===stack&&imeta.controller._getValueScaleId()===scale.id&&chart.isDatasetVisible(i)&&(ivalue=+scale.getRightValue(datasets[i].data[index]),(value<0&&ivalue<0||value>=0&&ivalue>0)&&(start+=ivalue));return base=scale.getPixelForValue(start),head=scale.getPixelForValue(start+value),size=head-base,void 0!==minBarLength&&Math.abs(size)<minBarLength&&(size=minBarLength,head=value>=0&&!isHorizontal||value<0&&isHorizontal?base-minBarLength:base+minBarLength),{size:size,base:base,head:head,center:head+size/2}},calculateBarIndexPixels:function(datasetIndex,index,ruler){var me=this,options=ruler.scale.options,range="flex"===options.barThickness?computeFlexCategoryTraits(index,ruler,options):computeFitCategoryTraits(index,ruler,options),stackIndex=me.getStackIndex(datasetIndex,me.getMeta().stack),center=range.start+range.chunk*stackIndex+range.chunk/2,size=Math.min(helpers$1.valueOrDefault(options.maxBarThickness,1/0),range.chunk*range.ratio);return{base:center-size/2,head:center+size/2,center:center,size:size}},draw:function(){var me=this,chart=me.chart,scale=me._getValueScale(),rects=me.getMeta().data,dataset=me.getDataset(),ilen=rects.length,i=0;for(helpers$1.canvas.clipArea(chart.ctx,chart.chartArea);i<ilen;++i)isNaN(scale.getRightValue(dataset.data[i]))||rects[i].draw();helpers$1.canvas.unclipArea(chart.ctx)},_resolveElementOptions:function(rectangle,index){var i,ilen,key,me=this,chart=me.chart,datasets=chart.data.datasets,dataset=datasets[me.index],custom=rectangle.custom||{},options=chart.options.elements.rectangle,values={},context={chart:chart,dataIndex:index,dataset:dataset,datasetIndex:me.index},keys=["backgroundColor","borderColor","borderSkipped","borderWidth"];for(i=0,ilen=keys.length;i<ilen;++i)key=keys[i],values[key]=resolve$1([custom[key],dataset[key],options[key]],context,index);return values}}),valueOrDefault$3=helpers$1.valueOrDefault,resolve$2=helpers$1.options.resolve;core_defaults._set("bubble",{hover:{mode:"single"},scales:{xAxes:[{type:"linear",position:"bottom",id:"x-axis-0"}],yAxes:[{type:"linear",position:"left",id:"y-axis-0"}]},tooltips:{callbacks:{title:function(){return""},label:function(item,data){
var datasetLabel=data.datasets[item.datasetIndex].label||"",dataPoint=data.datasets[item.datasetIndex].data[item.index];return datasetLabel+": ("+item.xLabel+", "+item.yLabel+", "+dataPoint.r+")"}}}});var controller_bubble=core_datasetController.extend({dataElementType:elements.Point,update:function(reset){var me=this,meta=me.getMeta(),points=meta.data;helpers$1.each(points,function(point,index){me.updateElement(point,index,reset)})},updateElement:function(point,index,reset){var me=this,meta=me.getMeta(),custom=point.custom||{},xScale=me.getScaleForId(meta.xAxisID),yScale=me.getScaleForId(meta.yAxisID),options=me._resolveElementOptions(point,index),data=me.getDataset().data[index],dsIndex=me.index,x=reset?xScale.getPixelForDecimal(.5):xScale.getPixelForValue("object"==typeof data?data:NaN,index,dsIndex),y=reset?yScale.getBasePixel():yScale.getPixelForValue(data,index,dsIndex);point._xScale=xScale,point._yScale=yScale,point._options=options,point._datasetIndex=dsIndex,point._index=index,point._model={backgroundColor:options.backgroundColor,borderColor:options.borderColor,borderWidth:options.borderWidth,hitRadius:options.hitRadius,pointStyle:options.pointStyle,rotation:options.rotation,radius:reset?0:options.radius,skip:custom.skip||isNaN(x)||isNaN(y),x:x,y:y},point.pivot()},setHoverStyle:function(point){var model=point._model,options=point._options,getHoverColor=helpers$1.getHoverColor;point.$previousStyle={backgroundColor:model.backgroundColor,borderColor:model.borderColor,borderWidth:model.borderWidth,radius:model.radius},model.backgroundColor=valueOrDefault$3(options.hoverBackgroundColor,getHoverColor(options.backgroundColor)),model.borderColor=valueOrDefault$3(options.hoverBorderColor,getHoverColor(options.borderColor)),model.borderWidth=valueOrDefault$3(options.hoverBorderWidth,options.borderWidth),model.radius=options.radius+options.hoverRadius},_resolveElementOptions:function(point,index){var i,ilen,key,me=this,chart=me.chart,datasets=chart.data.datasets,dataset=datasets[me.index],custom=point.custom||{},options=chart.options.elements.point,data=dataset.data[index],values={},context={chart:chart,dataIndex:index,dataset:dataset,datasetIndex:me.index},keys=["backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","hoverRadius","hitRadius","pointStyle","rotation"];for(i=0,ilen=keys.length;i<ilen;++i)key=keys[i],values[key]=resolve$2([custom[key],dataset[key],options[key]],context,index);return values.radius=resolve$2([custom.radius,data?data.r:void 0,dataset.radius,options.radius],context,index),values}}),resolve$3=helpers$1.options.resolve,valueOrDefault$4=helpers$1.valueOrDefault;core_defaults._set("doughnut",{animation:{animateRotate:!0,animateScale:!1},hover:{mode:"single"},legendCallback:function(chart){var text=[];text.push('<ul class="'+chart.id+'-legend">');var data=chart.data,datasets=data.datasets,labels=data.labels;if(datasets.length)for(var i=0;i<datasets[0].data.length;++i)text.push('<li><span style="background-color:'+datasets[0].backgroundColor[i]+'"></span>'),labels[i]&&text.push(labels[i]),text.push("</li>");return text.push("</ul>"),text.join("")},legend:{labels:{generateLabels:function(chart){var data=chart.data;return data.labels.length&&data.datasets.length?data.labels.map(function(label,i){var meta=chart.getDatasetMeta(0),ds=data.datasets[0],arc=meta.data[i],custom=arc&&arc.custom||{},arcOpts=chart.options.elements.arc;return{text:label,fillStyle:resolve$3([custom.backgroundColor,ds.backgroundColor,arcOpts.backgroundColor],void 0,i),strokeStyle:resolve$3([custom.borderColor,ds.borderColor,arcOpts.borderColor],void 0,i),lineWidth:resolve$3([custom.borderWidth,ds.borderWidth,arcOpts.borderWidth],void 0,i),hidden:isNaN(ds.data[i])||meta.data[i].hidden,index:i}}):[]}},onClick:function(e,legendItem){var i,ilen,meta,index=legendItem.index,chart=this.chart;for(i=0,ilen=(chart.data.datasets||[]).length;i<ilen;++i)meta=chart.getDatasetMeta(i),meta.data[index]&&(meta.data[index].hidden=!meta.data[index].hidden);chart.update()}},cutoutPercentage:50,rotation:-.5*Math.PI,circumference:2*Math.PI,tooltips:{callbacks:{title:function(){return""},label:function(tooltipItem,data){var dataLabel=data.labels[tooltipItem.index],value=": "+data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];return helpers$1.isArray(dataLabel)?(dataLabel=dataLabel.slice(),dataLabel[0]+=value):dataLabel+=value,dataLabel}}}});var controller_doughnut=core_datasetController.extend({dataElementType:elements.Arc,linkScales:helpers$1.noop,getRingIndex:function(datasetIndex){for(var ringIndex=0,j=0;j<datasetIndex;++j)this.chart.isDatasetVisible(j)&&++ringIndex;return ringIndex},update:function(reset){var i,ilen,me=this,chart=me.chart,chartArea=chart.chartArea,opts=chart.options,availableWidth=chartArea.right-chartArea.left,availableHeight=chartArea.bottom-chartArea.top,minSize=Math.min(availableWidth,availableHeight),offset={x:0,y:0},meta=me.getMeta(),arcs=meta.data,cutoutPercentage=opts.cutoutPercentage,circumference=opts.circumference,chartWeight=me._getRingWeight(me.index);if(circumference<2*Math.PI){var startAngle=opts.rotation%(2*Math.PI);startAngle+=2*Math.PI*(startAngle>=Math.PI?-1:startAngle<-Math.PI?1:0);var endAngle=startAngle+circumference,start={x:Math.cos(startAngle),y:Math.sin(startAngle)},end={x:Math.cos(endAngle),y:Math.sin(endAngle)},contains0=startAngle<=0&&endAngle>=0||startAngle<=2*Math.PI&&2*Math.PI<=endAngle,contains90=startAngle<=.5*Math.PI&&.5*Math.PI<=endAngle||startAngle<=2.5*Math.PI&&2.5*Math.PI<=endAngle,contains180=startAngle<=-Math.PI&&-Math.PI<=endAngle||startAngle<=Math.PI&&Math.PI<=endAngle,contains270=startAngle<=.5*-Math.PI&&.5*-Math.PI<=endAngle||startAngle<=1.5*Math.PI&&1.5*Math.PI<=endAngle,cutout=cutoutPercentage/100,min={x:contains180?-1:Math.min(start.x*(start.x<0?1:cutout),end.x*(end.x<0?1:cutout)),y:contains270?-1:Math.min(start.y*(start.y<0?1:cutout),end.y*(end.y<0?1:cutout))},max={x:contains0?1:Math.max(start.x*(start.x>0?1:cutout),end.x*(end.x>0?1:cutout)),y:contains90?1:Math.max(start.y*(start.y>0?1:cutout),end.y*(end.y>0?1:cutout))},size={width:.5*(max.x-min.x),height:.5*(max.y-min.y)};minSize=Math.min(availableWidth/size.width,availableHeight/size.height),offset={x:-.5*(max.x+min.x),y:-.5*(max.y+min.y)}}for(i=0,ilen=arcs.length;i<ilen;++i)arcs[i]._options=me._resolveElementOptions(arcs[i],i);for(chart.borderWidth=me.getMaxBorderWidth(),chart.outerRadius=Math.max((minSize-chart.borderWidth)/2,0),chart.innerRadius=Math.max(cutoutPercentage?chart.outerRadius/100*cutoutPercentage:0,0),chart.radiusLength=(chart.outerRadius-chart.innerRadius)/(me._getVisibleDatasetWeightTotal()||1),chart.offsetX=offset.x*chart.outerRadius,chart.offsetY=offset.y*chart.outerRadius,meta.total=me.calculateTotal(),me.outerRadius=chart.outerRadius-chart.radiusLength*me._getRingWeightOffset(me.index),me.innerRadius=Math.max(me.outerRadius-chart.radiusLength*chartWeight,0),i=0,ilen=arcs.length;i<ilen;++i)me.updateElement(arcs[i],i,reset)},updateElement:function(arc,index,reset){var me=this,chart=me.chart,chartArea=chart.chartArea,opts=chart.options,animationOpts=opts.animation,centerX=(chartArea.left+chartArea.right)/2,centerY=(chartArea.top+chartArea.bottom)/2,startAngle=opts.rotation,endAngle=opts.rotation,dataset=me.getDataset(),circumference=reset&&animationOpts.animateRotate?0:arc.hidden?0:me.calculateCircumference(dataset.data[index])*(opts.circumference/(2*Math.PI)),innerRadius=reset&&animationOpts.animateScale?0:me.innerRadius,outerRadius=reset&&animationOpts.animateScale?0:me.outerRadius,options=arc._options||{};helpers$1.extend(arc,{_datasetIndex:me.index,_index:index,_model:{backgroundColor:options.backgroundColor,borderColor:options.borderColor,borderWidth:options.borderWidth,borderAlign:options.borderAlign,x:centerX+chart.offsetX,y:centerY+chart.offsetY,startAngle:startAngle,endAngle:endAngle,circumference:circumference,outerRadius:outerRadius,innerRadius:innerRadius,label:helpers$1.valueAtIndexOrDefault(dataset.label,index,chart.data.labels[index])}});var model=arc._model;reset&&animationOpts.animateRotate||(model.startAngle=0===index?opts.rotation:me.getMeta().data[index-1]._model.endAngle,model.endAngle=model.startAngle+model.circumference),arc.pivot()},calculateTotal:function(){var value,dataset=this.getDataset(),meta=this.getMeta(),total=0;return helpers$1.each(meta.data,function(element,index){value=dataset.data[index],isNaN(value)||element.hidden||(total+=Math.abs(value))}),total},calculateCircumference:function(value){var total=this.getMeta().total;return total>0&&!isNaN(value)?2*Math.PI*(Math.abs(value)/total):0},getMaxBorderWidth:function(arcs){var i,ilen,meta,arc,controller,options,borderWidth,hoverWidth,me=this,max=0,chart=me.chart;if(!arcs)for(i=0,ilen=chart.data.datasets.length;i<ilen;++i)if(chart.isDatasetVisible(i)){meta=chart.getDatasetMeta(i),arcs=meta.data,i!==me.index&&(controller=meta.controller);break}if(!arcs)return 0;for(i=0,ilen=arcs.length;i<ilen;++i)arc=arcs[i],options=controller?controller._resolveElementOptions(arc,i):arc._options,"inner"!==options.borderAlign&&(borderWidth=options.borderWidth,hoverWidth=options.hoverBorderWidth,max=borderWidth>max?borderWidth:max,max=hoverWidth>max?hoverWidth:max);return max},setHoverStyle:function(arc){var model=arc._model,options=arc._options,getHoverColor=helpers$1.getHoverColor;arc.$previousStyle={backgroundColor:model.backgroundColor,borderColor:model.borderColor,borderWidth:model.borderWidth},model.backgroundColor=valueOrDefault$4(options.hoverBackgroundColor,getHoverColor(options.backgroundColor)),model.borderColor=valueOrDefault$4(options.hoverBorderColor,getHoverColor(options.borderColor)),model.borderWidth=valueOrDefault$4(options.hoverBorderWidth,options.borderWidth)},_resolveElementOptions:function(arc,index){var i,ilen,key,me=this,chart=me.chart,dataset=me.getDataset(),custom=arc.custom||{},options=chart.options.elements.arc,values={},context={chart:chart,dataIndex:index,dataset:dataset,datasetIndex:me.index},keys=["backgroundColor","borderColor","borderWidth","borderAlign","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth"];for(i=0,ilen=keys.length;i<ilen;++i)key=keys[i],values[key]=resolve$3([custom[key],dataset[key],options[key]],context,index);return values},_getRingWeightOffset:function(datasetIndex){for(var ringWeightOffset=0,i=0;i<datasetIndex;++i)this.chart.isDatasetVisible(i)&&(ringWeightOffset+=this._getRingWeight(i));return ringWeightOffset},_getRingWeight:function(dataSetIndex){return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight,1),0)},_getVisibleDatasetWeightTotal:function(){return this._getRingWeightOffset(this.chart.data.datasets.length)}});core_defaults._set("horizontalBar",{hover:{mode:"index",axis:"y"},scales:{xAxes:[{type:"linear",position:"bottom"}],yAxes:[{type:"category",position:"left",categoryPercentage:.8,barPercentage:.9,offset:!0,gridLines:{offsetGridLines:!0}}]},elements:{rectangle:{borderSkipped:"left"}},tooltips:{mode:"index",axis:"y"}});var controller_horizontalBar=controller_bar.extend({_getValueScaleId:function(){return this.getMeta().xAxisID},_getIndexScaleId:function(){return this.getMeta().yAxisID}}),valueOrDefault$5=helpers$1.valueOrDefault,resolve$4=helpers$1.options.resolve,isPointInArea=helpers$1.canvas._isPointInArea;core_defaults._set("line",{showLines:!0,spanGaps:!1,hover:{mode:"label"},scales:{xAxes:[{type:"category",id:"x-axis-0"}],yAxes:[{type:"linear",id:"y-axis-0"}]}});var controller_line=core_datasetController.extend({datasetElementType:elements.Line,dataElementType:elements.Point,update:function(reset){var i,ilen,me=this,meta=me.getMeta(),line=meta.dataset,points=meta.data||[],scale=me.getScaleForId(meta.yAxisID),dataset=me.getDataset(),showLine=lineEnabled(dataset,me.chart.options);for(showLine&&(void 0!==dataset.tension&&void 0===dataset.lineTension&&(dataset.lineTension=dataset.tension),line._scale=scale,line._datasetIndex=me.index,line._children=points,line._model=me._resolveLineOptions(line),line.pivot()),i=0,ilen=points.length;i<ilen;++i)me.updateElement(points[i],i,reset);for(showLine&&0!==line._model.tension&&me.updateBezierControlPoints(),i=0,ilen=points.length;i<ilen;++i)points[i].pivot()},updateElement:function(point,index,reset){var x,y,me=this,meta=me.getMeta(),custom=point.custom||{},dataset=me.getDataset(),datasetIndex=me.index,value=dataset.data[index],yScale=me.getScaleForId(meta.yAxisID),xScale=me.getScaleForId(meta.xAxisID),lineModel=meta.dataset._model,options=me._resolvePointOptions(point,index);x=xScale.getPixelForValue("object"==typeof value?value:NaN,index,datasetIndex),y=reset?yScale.getBasePixel():me.calculatePointY(value,index,datasetIndex),point._xScale=xScale,point._yScale=yScale,point._options=options,point._datasetIndex=datasetIndex,point._index=index,point._model={x:x,y:y,skip:custom.skip||isNaN(x)||isNaN(y),radius:options.radius,pointStyle:options.pointStyle,rotation:options.rotation,backgroundColor:options.backgroundColor,borderColor:options.borderColor,borderWidth:options.borderWidth,tension:valueOrDefault$5(custom.tension,lineModel?lineModel.tension:0),steppedLine:!!lineModel&&lineModel.steppedLine,hitRadius:options.hitRadius}},_resolvePointOptions:function(element,index){var i,ilen,key,me=this,chart=me.chart,dataset=chart.data.datasets[me.index],custom=element.custom||{},options=chart.options.elements.point,values={},context={chart:chart,dataIndex:index,dataset:dataset,datasetIndex:me.index},ELEMENT_OPTIONS={backgroundColor:"pointBackgroundColor",borderColor:"pointBorderColor",borderWidth:"pointBorderWidth",hitRadius:"pointHitRadius",hoverBackgroundColor:"pointHoverBackgroundColor",hoverBorderColor:"pointHoverBorderColor",hoverBorderWidth:"pointHoverBorderWidth",hoverRadius:"pointHoverRadius",pointStyle:"pointStyle",radius:"pointRadius",rotation:"pointRotation"},keys=Object.keys(ELEMENT_OPTIONS);for(i=0,ilen=keys.length;i<ilen;++i)key=keys[i],values[key]=resolve$4([custom[key],dataset[ELEMENT_OPTIONS[key]],dataset[key],options[key]],context,index);return values},_resolveLineOptions:function(element){var i,ilen,key,me=this,chart=me.chart,dataset=chart.data.datasets[me.index],custom=element.custom||{},options=chart.options,elementOptions=options.elements.line,values={},keys=["backgroundColor","borderWidth","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill","cubicInterpolationMode"];for(i=0,ilen=keys.length;i<ilen;++i)key=keys[i],values[key]=resolve$4([custom[key],dataset[key],elementOptions[key]]);return values.spanGaps=valueOrDefault$5(dataset.spanGaps,options.spanGaps),values.tension=valueOrDefault$5(dataset.lineTension,elementOptions.tension),values.steppedLine=resolve$4([custom.steppedLine,dataset.steppedLine,elementOptions.stepped]),values},calculatePointY:function(value,index,datasetIndex){var i,ds,dsMeta,me=this,chart=me.chart,meta=me.getMeta(),yScale=me.getScaleForId(meta.yAxisID),sumPos=0,sumNeg=0;if(yScale.options.stacked){for(i=0;i<datasetIndex;i++)if(ds=chart.data.datasets[i],dsMeta=chart.getDatasetMeta(i),"line"===dsMeta.type&&dsMeta.yAxisID===yScale.id&&chart.isDatasetVisible(i)){var stackedRightValue=Number(yScale.getRightValue(ds.data[index]));stackedRightValue<0?sumNeg+=stackedRightValue||0:sumPos+=stackedRightValue||0}var rightValue=Number(yScale.getRightValue(value));return rightValue<0?yScale.getPixelForValue(sumNeg+rightValue):yScale.getPixelForValue(sumPos+rightValue)}return yScale.getPixelForValue(value)},updateBezierControlPoints:function(){function capControlPoint(pt,min,max){return Math.max(Math.min(pt,max),min)}var i,ilen,model,controlPoints,me=this,chart=me.chart,meta=me.getMeta(),lineModel=meta.dataset._model,area=chart.chartArea,points=meta.data||[];if(lineModel.spanGaps&&(points=points.filter(function(pt){return!pt._model.skip})),"monotone"===lineModel.cubicInterpolationMode)helpers$1.splineCurveMonotone(points);else for(i=0,ilen=points.length;i<ilen;++i)model=points[i]._model,controlPoints=helpers$1.splineCurve(helpers$1.previousItem(points,i)._model,model,helpers$1.nextItem(points,i)._model,lineModel.tension),model.controlPointPreviousX=controlPoints.previous.x,model.controlPointPreviousY=controlPoints.previous.y,model.controlPointNextX=controlPoints.next.x,model.controlPointNextY=controlPoints.next.y;if(chart.options.elements.line.capBezierPoints)for(i=0,ilen=points.length;i<ilen;++i)model=points[i]._model,isPointInArea(model,area)&&(i>0&&isPointInArea(points[i-1]._model,area)&&(model.controlPointPreviousX=capControlPoint(model.controlPointPreviousX,area.left,area.right),model.controlPointPreviousY=capControlPoint(model.controlPointPreviousY,area.top,area.bottom)),i<points.length-1&&isPointInArea(points[i+1]._model,area)&&(model.controlPointNextX=capControlPoint(model.controlPointNextX,area.left,area.right),model.controlPointNextY=capControlPoint(model.controlPointNextY,area.top,area.bottom)))},draw:function(){var halfBorderWidth,me=this,chart=me.chart,meta=me.getMeta(),points=meta.data||[],area=chart.chartArea,ilen=points.length,i=0;for(lineEnabled(me.getDataset(),chart.options)&&(halfBorderWidth=(meta.dataset._model.borderWidth||0)/2,helpers$1.canvas.clipArea(chart.ctx,{left:area.left,right:area.right,top:area.top-halfBorderWidth,bottom:area.bottom+halfBorderWidth}),meta.dataset.draw(),helpers$1.canvas.unclipArea(chart.ctx));i<ilen;++i)points[i].draw(area)},setHoverStyle:function(point){var model=point._model,options=point._options,getHoverColor=helpers$1.getHoverColor;point.$previousStyle={backgroundColor:model.backgroundColor,borderColor:model.borderColor,borderWidth:model.borderWidth,radius:model.radius},model.backgroundColor=valueOrDefault$5(options.hoverBackgroundColor,getHoverColor(options.backgroundColor)),model.borderColor=valueOrDefault$5(options.hoverBorderColor,getHoverColor(options.borderColor)),model.borderWidth=valueOrDefault$5(options.hoverBorderWidth,options.borderWidth),model.radius=valueOrDefault$5(options.hoverRadius,options.radius)}}),resolve$5=helpers$1.options.resolve;core_defaults._set("polarArea",{scale:{type:"radialLinear",angleLines:{display:!1},gridLines:{circular:!0},pointLabels:{display:!1},ticks:{beginAtZero:!0}},animation:{animateRotate:!0,animateScale:!0},startAngle:-.5*Math.PI,legendCallback:function(chart){var text=[];text.push('<ul class="'+chart.id+'-legend">');var data=chart.data,datasets=data.datasets,labels=data.labels;if(datasets.length)for(var i=0;i<datasets[0].data.length;++i)text.push('<li><span style="background-color:'+datasets[0].backgroundColor[i]+'"></span>'),labels[i]&&text.push(labels[i]),text.push("</li>");return text.push("</ul>"),text.join("")},legend:{labels:{generateLabels:function(chart){var data=chart.data;return data.labels.length&&data.datasets.length?data.labels.map(function(label,i){var meta=chart.getDatasetMeta(0),ds=data.datasets[0],arc=meta.data[i],custom=arc.custom||{},arcOpts=chart.options.elements.arc;return{text:label,fillStyle:resolve$5([custom.backgroundColor,ds.backgroundColor,arcOpts.backgroundColor],void 0,i),strokeStyle:resolve$5([custom.borderColor,ds.borderColor,arcOpts.borderColor],void 0,i),lineWidth:resolve$5([custom.borderWidth,ds.borderWidth,arcOpts.borderWidth],void 0,i),hidden:isNaN(ds.data[i])||meta.data[i].hidden,index:i}}):[]}},onClick:function(e,legendItem){var i,ilen,meta,index=legendItem.index,chart=this.chart;for(i=0,ilen=(chart.data.datasets||[]).length;i<ilen;++i)meta=chart.getDatasetMeta(i),meta.data[index].hidden=!meta.data[index].hidden;chart.update()}},tooltips:{callbacks:{title:function(){return""},label:function(item,data){return data.labels[item.index]+": "+item.yLabel}}}});var controller_polarArea=core_datasetController.extend({dataElementType:elements.Arc,linkScales:helpers$1.noop,update:function(reset){var i,ilen,angle,me=this,dataset=me.getDataset(),meta=me.getMeta(),start=me.chart.options.startAngle||0,starts=me._starts=[],angles=me._angles=[],arcs=meta.data;for(me._updateRadius(),meta.count=me.countVisibleElements(),i=0,ilen=dataset.data.length;i<ilen;i++)starts[i]=start,angle=me._computeAngle(i),angles[i]=angle,start+=angle;for(i=0,ilen=arcs.length;i<ilen;++i)arcs[i]._options=me._resolveElementOptions(arcs[i],i),me.updateElement(arcs[i],i,reset)},_updateRadius:function(){var me=this,chart=me.chart,chartArea=chart.chartArea,opts=chart.options,minSize=Math.min(chartArea.right-chartArea.left,chartArea.bottom-chartArea.top);chart.outerRadius=Math.max(minSize/2,0),chart.innerRadius=Math.max(opts.cutoutPercentage?chart.outerRadius/100*opts.cutoutPercentage:1,0),chart.radiusLength=(chart.outerRadius-chart.innerRadius)/chart.getVisibleDatasetCount(),me.outerRadius=chart.outerRadius-chart.radiusLength*me.index,me.innerRadius=me.outerRadius-chart.radiusLength},updateElement:function(arc,index,reset){var me=this,chart=me.chart,dataset=me.getDataset(),opts=chart.options,animationOpts=opts.animation,scale=chart.scale,labels=chart.data.labels,centerX=scale.xCenter,centerY=scale.yCenter,datasetStartAngle=opts.startAngle,distance=arc.hidden?0:scale.getDistanceFromCenterForValue(dataset.data[index]),startAngle=me._starts[index],endAngle=startAngle+(arc.hidden?0:me._angles[index]),resetRadius=animationOpts.animateScale?0:scale.getDistanceFromCenterForValue(dataset.data[index]),options=arc._options||{};helpers$1.extend(arc,{_datasetIndex:me.index,_index:index,_scale:scale,_model:{backgroundColor:options.backgroundColor,borderColor:options.borderColor,borderWidth:options.borderWidth,borderAlign:options.borderAlign,x:centerX,y:centerY,innerRadius:0,outerRadius:reset?resetRadius:distance,startAngle:reset&&animationOpts.animateRotate?datasetStartAngle:startAngle,endAngle:reset&&animationOpts.animateRotate?datasetStartAngle:endAngle,label:helpers$1.valueAtIndexOrDefault(labels,index,labels[index])}}),arc.pivot()},countVisibleElements:function(){var dataset=this.getDataset(),meta=this.getMeta(),count=0;return helpers$1.each(meta.data,function(element,index){isNaN(dataset.data[index])||element.hidden||count++}),count},setHoverStyle:function(arc){var model=arc._model,options=arc._options,getHoverColor=helpers$1.getHoverColor,valueOrDefault=helpers$1.valueOrDefault;arc.$previousStyle={backgroundColor:model.backgroundColor,borderColor:model.borderColor,borderWidth:model.borderWidth},model.backgroundColor=valueOrDefault(options.hoverBackgroundColor,getHoverColor(options.backgroundColor)),model.borderColor=valueOrDefault(options.hoverBorderColor,getHoverColor(options.borderColor)),model.borderWidth=valueOrDefault(options.hoverBorderWidth,options.borderWidth)},_resolveElementOptions:function(arc,index){var i,ilen,key,me=this,chart=me.chart,dataset=me.getDataset(),custom=arc.custom||{},options=chart.options.elements.arc,values={},context={chart:chart,dataIndex:index,dataset:dataset,datasetIndex:me.index},keys=["backgroundColor","borderColor","borderWidth","borderAlign","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth"];for(i=0,ilen=keys.length;i<ilen;++i)key=keys[i],values[key]=resolve$5([custom[key],dataset[key],options[key]],context,index);return values},_computeAngle:function(index){var me=this,count=this.getMeta().count,dataset=me.getDataset(),meta=me.getMeta();if(isNaN(dataset.data[index])||meta.data[index].hidden)return 0;var context={chart:me.chart,dataIndex:index,dataset:dataset,datasetIndex:me.index};return resolve$5([me.chart.options.elements.arc.angle,2*Math.PI/count],context,index)}});core_defaults._set("pie",helpers$1.clone(core_defaults.doughnut)),core_defaults._set("pie",{cutoutPercentage:0});var controller_pie=controller_doughnut,valueOrDefault$6=helpers$1.valueOrDefault,resolve$6=helpers$1.options.resolve;core_defaults._set("radar",{scale:{type:"radialLinear"},elements:{line:{tension:0}}});var controller_radar=core_datasetController.extend({datasetElementType:elements.Line,dataElementType:elements.Point,linkScales:helpers$1.noop,update:function(reset){var i,ilen,me=this,meta=me.getMeta(),line=meta.dataset,points=meta.data||[],scale=me.chart.scale,dataset=me.getDataset();for(void 0!==dataset.tension&&void 0===dataset.lineTension&&(dataset.lineTension=dataset.tension),line._scale=scale,line._datasetIndex=me.index,line._children=points,line._loop=!0,line._model=me._resolveLineOptions(line),line.pivot(),i=0,ilen=points.length;i<ilen;++i)me.updateElement(points[i],i,reset);for(me.updateBezierControlPoints(),i=0,ilen=points.length;i<ilen;++i)points[i].pivot()},updateElement:function(point,index,reset){var me=this,custom=point.custom||{},dataset=me.getDataset(),scale=me.chart.scale,pointPosition=scale.getPointPositionForValue(index,dataset.data[index]),options=me._resolvePointOptions(point,index),lineModel=me.getMeta().dataset._model,x=reset?scale.xCenter:pointPosition.x,y=reset?scale.yCenter:pointPosition.y;point._scale=scale,point._options=options,point._datasetIndex=me.index,point._index=index,point._model={x:x,y:y,skip:custom.skip||isNaN(x)||isNaN(y),radius:options.radius,pointStyle:options.pointStyle,rotation:options.rotation,backgroundColor:options.backgroundColor,borderColor:options.borderColor,borderWidth:options.borderWidth,tension:valueOrDefault$6(custom.tension,lineModel?lineModel.tension:0),hitRadius:options.hitRadius}},_resolvePointOptions:function(element,index){var i,ilen,key,me=this,chart=me.chart,dataset=chart.data.datasets[me.index],custom=element.custom||{},options=chart.options.elements.point,values={},context={chart:chart,dataIndex:index,dataset:dataset,datasetIndex:me.index},ELEMENT_OPTIONS={backgroundColor:"pointBackgroundColor",borderColor:"pointBorderColor",borderWidth:"pointBorderWidth",hitRadius:"pointHitRadius",hoverBackgroundColor:"pointHoverBackgroundColor",hoverBorderColor:"pointHoverBorderColor",hoverBorderWidth:"pointHoverBorderWidth",hoverRadius:"pointHoverRadius",pointStyle:"pointStyle",radius:"pointRadius",rotation:"pointRotation"},keys=Object.keys(ELEMENT_OPTIONS);for(i=0,ilen=keys.length;i<ilen;++i)key=keys[i],values[key]=resolve$6([custom[key],dataset[ELEMENT_OPTIONS[key]],dataset[key],options[key]],context,index);return values},_resolveLineOptions:function(element){var i,ilen,key,me=this,chart=me.chart,dataset=chart.data.datasets[me.index],custom=element.custom||{},options=chart.options.elements.line,values={},keys=["backgroundColor","borderWidth","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","fill"];for(i=0,ilen=keys.length;i<ilen;++i)key=keys[i],values[key]=resolve$6([custom[key],dataset[key],options[key]]);return values.tension=valueOrDefault$6(dataset.lineTension,options.tension),values},updateBezierControlPoints:function(){function capControlPoint(pt,min,max){return Math.max(Math.min(pt,max),min)}var i,ilen,model,controlPoints,me=this,meta=me.getMeta(),area=me.chart.chartArea,points=meta.data||[];for(i=0,ilen=points.length;i<ilen;++i)model=points[i]._model,controlPoints=helpers$1.splineCurve(helpers$1.previousItem(points,i,!0)._model,model,helpers$1.nextItem(points,i,!0)._model,model.tension),model.controlPointPreviousX=capControlPoint(controlPoints.previous.x,area.left,area.right),model.controlPointPreviousY=capControlPoint(controlPoints.previous.y,area.top,area.bottom),model.controlPointNextX=capControlPoint(controlPoints.next.x,area.left,area.right),model.controlPointNextY=capControlPoint(controlPoints.next.y,area.top,area.bottom)},setHoverStyle:function(point){var model=point._model,options=point._options,getHoverColor=helpers$1.getHoverColor;point.$previousStyle={backgroundColor:model.backgroundColor,borderColor:model.borderColor,borderWidth:model.borderWidth,radius:model.radius},model.backgroundColor=valueOrDefault$6(options.hoverBackgroundColor,getHoverColor(options.backgroundColor)),model.borderColor=valueOrDefault$6(options.hoverBorderColor,getHoverColor(options.borderColor)),model.borderWidth=valueOrDefault$6(options.hoverBorderWidth,options.borderWidth),model.radius=valueOrDefault$6(options.hoverRadius,options.radius)}});core_defaults._set("scatter",{hover:{mode:"single"},scales:{xAxes:[{id:"x-axis-1",type:"linear",position:"bottom"}],yAxes:[{id:"y-axis-1",type:"linear",position:"left"}]},showLines:!1,tooltips:{callbacks:{title:function(){return""},label:function(item){return"("+item.xLabel+", "+item.yLabel+")"}}}});var controller_scatter=controller_line,controllers={bar:controller_bar,bubble:controller_bubble,doughnut:controller_doughnut,horizontalBar:controller_horizontalBar,line:controller_line,polarArea:controller_polarArea,pie:controller_pie,radar:controller_radar,scatter:controller_scatter},core_interaction={modes:{single:function(chart,e){var position=getRelativePosition(e,chart),elements=[];return parseVisibleItems(chart,function(element){if(element.inRange(position.x,position.y))return elements.push(element),elements}),elements.slice(0,1)},label:indexMode,index:indexMode,dataset:function(chart,e,options){var position=getRelativePosition(e,chart);options.axis=options.axis||"xy";var distanceMetric=getDistanceMetricForAxis(options.axis),items=options.intersect?getIntersectItems(chart,position):getNearestItems(chart,position,!1,distanceMetric);return items.length>0&&(items=chart.getDatasetMeta(items[0]._datasetIndex).data),items},"x-axis":function(chart,e){return indexMode(chart,e,{intersect:!1})},point:function(chart,e){return getIntersectItems(chart,getRelativePosition(e,chart))},nearest:function(chart,e,options){var position=getRelativePosition(e,chart);options.axis=options.axis||"xy";var distanceMetric=getDistanceMetricForAxis(options.axis);return getNearestItems(chart,position,options.intersect,distanceMetric)},x:function(chart,e,options){var position=getRelativePosition(e,chart),items=[],intersectsItem=!1;return parseVisibleItems(chart,function(element){element.inXRange(position.x)&&items.push(element),element.inRange(position.x,position.y)&&(intersectsItem=!0)}),options.intersect&&!intersectsItem&&(items=[]),items},y:function(chart,e,options){var position=getRelativePosition(e,chart),items=[],intersectsItem=!1;return parseVisibleItems(chart,function(element){element.inYRange(position.y)&&items.push(element),element.inRange(position.x,position.y)&&(intersectsItem=!0)}),options.intersect&&!intersectsItem&&(items=[]),items}}};core_defaults._set("global",{layout:{padding:{top:0,right:0,bottom:0,left:0}}});var core_layouts={defaults:{},addBox:function(chart,item){chart.boxes||(chart.boxes=[]),item.fullWidth=item.fullWidth||!1,item.position=item.position||"top",item.weight=item.weight||0,chart.boxes.push(item)},removeBox:function(chart,layoutItem){var index=chart.boxes?chart.boxes.indexOf(layoutItem):-1;-1!==index&&chart.boxes.splice(index,1)},configure:function(chart,item,options){for(var prop,props=["fullWidth","position","weight"],ilen=props.length,i=0;i<ilen;++i)prop=props[i],options.hasOwnProperty(prop)&&(item[prop]=options[prop])},update:function(chart,width,height){function getMinimumBoxSize(box){var minSize,isHorizontal=box.isHorizontal();isHorizontal?(minSize=box.update(box.fullWidth?chartWidth:maxChartAreaWidth,chartHeight/2),maxChartAreaHeight-=minSize.height):(minSize=box.update(verticalBoxWidth,maxChartAreaHeight),maxChartAreaWidth-=minSize.width),minBoxSizes.push({horizontal:isHorizontal,width:minSize.width,box:box})}function fitBox(box){var minBoxSize=helpers$1.findNextWhere(minBoxSizes,function(minBox){return minBox.box===box});if(minBoxSize)if(minBoxSize.horizontal){var scaleMargin={left:Math.max(outerBoxSizes.left,maxPadding.left),right:Math.max(outerBoxSizes.right,maxPadding.right),top:0,bottom:0};box.update(box.fullWidth?chartWidth:maxChartAreaWidth,chartHeight/2,scaleMargin)}else box.update(minBoxSize.width,maxChartAreaHeight)}function finalFitVerticalBox(box){var minBoxSize=helpers$1.findNextWhere(minBoxSizes,function(minSize){return minSize.box===box}),scaleMargin={left:0,right:0,top:outerBoxSizes.top,bottom:outerBoxSizes.bottom};minBoxSize&&box.update(minBoxSize.width,maxChartAreaHeight,scaleMargin)}function placeBox(box){
box.isHorizontal()?(box.left=box.fullWidth?leftPadding:outerBoxSizes.left,box.right=box.fullWidth?width-rightPadding:outerBoxSizes.left+maxChartAreaWidth,box.top=top,box.bottom=top+box.height,top=box.bottom):(box.left=left,box.right=left+box.width,box.top=outerBoxSizes.top,box.bottom=outerBoxSizes.top+maxChartAreaHeight,left=box.right)}if(chart){var layoutOptions=chart.options.layout||{},padding=helpers$1.options.toPadding(layoutOptions.padding),leftPadding=padding.left,rightPadding=padding.right,topPadding=padding.top,bottomPadding=padding.bottom,leftBoxes=filterByPosition(chart.boxes,"left"),rightBoxes=filterByPosition(chart.boxes,"right"),topBoxes=filterByPosition(chart.boxes,"top"),bottomBoxes=filterByPosition(chart.boxes,"bottom"),chartAreaBoxes=filterByPosition(chart.boxes,"chartArea");sortByWeight(leftBoxes,!0),sortByWeight(rightBoxes,!1),sortByWeight(topBoxes,!0),sortByWeight(bottomBoxes,!1);var maxPadding,verticalBoxes=leftBoxes.concat(rightBoxes),horizontalBoxes=topBoxes.concat(bottomBoxes),outerBoxes=verticalBoxes.concat(horizontalBoxes),chartWidth=width-leftPadding-rightPadding,chartHeight=height-topPadding-bottomPadding,chartAreaWidth=chartWidth/2,verticalBoxWidth=(width-chartAreaWidth)/verticalBoxes.length,maxChartAreaWidth=chartWidth,maxChartAreaHeight=chartHeight,outerBoxSizes={top:topPadding,left:leftPadding,bottom:bottomPadding,right:rightPadding},minBoxSizes=[];helpers$1.each(outerBoxes,getMinimumBoxSize),maxPadding=findMaxPadding(outerBoxes),helpers$1.each(verticalBoxes,fitBox),addSizeByPosition(verticalBoxes,outerBoxSizes),helpers$1.each(horizontalBoxes,fitBox),addSizeByPosition(horizontalBoxes,outerBoxSizes),helpers$1.each(verticalBoxes,finalFitVerticalBox),outerBoxSizes={top:topPadding,left:leftPadding,bottom:bottomPadding,right:rightPadding},addSizeByPosition(outerBoxes,outerBoxSizes);var leftPaddingAddition=Math.max(maxPadding.left-outerBoxSizes.left,0);outerBoxSizes.left+=leftPaddingAddition,outerBoxSizes.right+=Math.max(maxPadding.right-outerBoxSizes.right,0);var topPaddingAddition=Math.max(maxPadding.top-outerBoxSizes.top,0);outerBoxSizes.top+=topPaddingAddition,outerBoxSizes.bottom+=Math.max(maxPadding.bottom-outerBoxSizes.bottom,0);var newMaxChartAreaHeight=height-outerBoxSizes.top-outerBoxSizes.bottom,newMaxChartAreaWidth=width-outerBoxSizes.left-outerBoxSizes.right;newMaxChartAreaWidth===maxChartAreaWidth&&newMaxChartAreaHeight===maxChartAreaHeight||(helpers$1.each(verticalBoxes,function(box){box.height=newMaxChartAreaHeight}),helpers$1.each(horizontalBoxes,function(box){box.fullWidth||(box.width=newMaxChartAreaWidth)}),maxChartAreaHeight=newMaxChartAreaHeight,maxChartAreaWidth=newMaxChartAreaWidth);var left=leftPadding+leftPaddingAddition,top=topPadding+topPaddingAddition;helpers$1.each(leftBoxes.concat(topBoxes),placeBox),left+=maxChartAreaWidth,top+=maxChartAreaHeight,helpers$1.each(rightBoxes,placeBox),helpers$1.each(bottomBoxes,placeBox),chart.chartArea={left:outerBoxSizes.left,top:outerBoxSizes.top,right:outerBoxSizes.left+maxChartAreaWidth,bottom:outerBoxSizes.top+maxChartAreaHeight},helpers$1.each(chartAreaBoxes,function(box){box.left=chart.chartArea.left,box.top=chart.chartArea.top,box.right=chart.chartArea.right,box.bottom=chart.chartArea.bottom,box.update(maxChartAreaWidth,maxChartAreaHeight)})}}},platform_basic={acquireContext:function(item){return item&&item.canvas&&(item=item.canvas),item&&item.getContext("2d")||null}},platform_dom$1=Object.freeze({default:"/*\n * DOM element rendering detection\n * https://davidwalsh.name/detect-node-insertion\n */\n@keyframes chartjs-render-animation {\n\tfrom { opacity: 0.99; }\n\tto { opacity: 1; }\n}\n\n.chartjs-render-monitor {\n\tanimation: chartjs-render-animation 0.001s;\n}\n\n/*\n * DOM element resizing detection\n * https://github.com/marcj/css-element-queries\n */\n.chartjs-size-monitor,\n.chartjs-size-monitor-expand,\n.chartjs-size-monitor-shrink {\n\tposition: absolute;\n\tdirection: ltr;\n\tleft: 0;\n\ttop: 0;\n\tright: 0;\n\tbottom: 0;\n\toverflow: hidden;\n\tpointer-events: none;\n\tvisibility: hidden;\n\tz-index: -1;\n}\n\n.chartjs-size-monitor-expand > div {\n\tposition: absolute;\n\twidth: 1000000px;\n\theight: 1000000px;\n\tleft: 0;\n\ttop: 0;\n}\n\n.chartjs-size-monitor-shrink > div {\n\tposition: absolute;\n\twidth: 200%;\n\theight: 200%;\n\tleft: 0;\n\ttop: 0;\n}\n"}),stylesheet=function(n){return n&&n.default||n}(platform_dom$1),EXPANDO_KEY="$chartjs",CSS_SIZE_MONITOR="chartjs-size-monitor",CSS_RENDER_MONITOR="chartjs-render-monitor",CSS_RENDER_ANIMATION="chartjs-render-animation",ANIMATION_START_EVENTS=["animationstart","webkitAnimationStart"],EVENT_TYPES={touchstart:"mousedown",touchmove:"mousemove",touchend:"mouseup",pointerenter:"mouseenter",pointerdown:"mousedown",pointermove:"mousemove",pointerup:"mouseup",pointerleave:"mouseout",pointerout:"mouseout"},supportsEventListenerOptions=function(){var supports=!1;try{var options=Object.defineProperty({},"passive",{get:function(){supports=!0}});window.addEventListener("e",null,options)}catch(e){}return supports}(),eventListenerOptions=!!supportsEventListenerOptions&&{passive:!0},platform_dom$2={disableCSSInjection:!1,_enabled:"undefined"!=typeof window&&"undefined"!=typeof document,_ensureLoaded:function(){this._loaded||(this._loaded=!0,this.disableCSSInjection||injectCSS(this,stylesheet))},acquireContext:function(item,config){"string"==typeof item?item=document.getElementById(item):item.length&&(item=item[0]),item&&item.canvas&&(item=item.canvas);var context=item&&item.getContext&&item.getContext("2d");return this._ensureLoaded(),context&&context.canvas===item?(initCanvas(item,config),context):null},releaseContext:function(context){var canvas=context.canvas;if(canvas[EXPANDO_KEY]){var initial=canvas[EXPANDO_KEY].initial;["height","width"].forEach(function(prop){var value=initial[prop];helpers$1.isNullOrUndef(value)?canvas.removeAttribute(prop):canvas.setAttribute(prop,value)}),helpers$1.each(initial.style||{},function(value,key){canvas.style[key]=value}),canvas.width=canvas.width,delete canvas[EXPANDO_KEY]}},addEventListener:function(chart,type,listener){var canvas=chart.canvas;if("resize"===type)return void addResizeListener(canvas,listener,chart);var expando=listener[EXPANDO_KEY]||(listener[EXPANDO_KEY]={});addListener(canvas,type,(expando.proxies||(expando.proxies={}))[chart.id+"_"+type]=function(event){listener(fromNativeEvent(event,chart))})},removeEventListener:function(chart,type,listener){var canvas=chart.canvas;if("resize"===type)return void removeResizeListener(canvas);var expando=listener[EXPANDO_KEY]||{},proxies=expando.proxies||{},proxy=proxies[chart.id+"_"+type];proxy&&removeListener(canvas,type,proxy)}};helpers$1.addEvent=addListener,helpers$1.removeEvent=removeListener;var implementation=platform_dom$2._enabled?platform_dom$2:platform_basic,platform=helpers$1.extend({initialize:function(){},acquireContext:function(){},releaseContext:function(){},addEventListener:function(){},removeEventListener:function(){}},implementation);core_defaults._set("global",{plugins:{}});var core_plugins={_plugins:[],_cacheId:0,register:function(plugins){var p=this._plugins;[].concat(plugins).forEach(function(plugin){-1===p.indexOf(plugin)&&p.push(plugin)}),this._cacheId++},unregister:function(plugins){var p=this._plugins;[].concat(plugins).forEach(function(plugin){var idx=p.indexOf(plugin);-1!==idx&&p.splice(idx,1)}),this._cacheId++},clear:function(){this._plugins=[],this._cacheId++},count:function(){return this._plugins.length},getAll:function(){return this._plugins},notify:function(chart,hook,args){var i,descriptor,plugin,params,method,descriptors=this.descriptors(chart),ilen=descriptors.length;for(i=0;i<ilen;++i)if(descriptor=descriptors[i],plugin=descriptor.plugin,"function"==typeof(method=plugin[hook])&&(params=[chart].concat(args||[]),params.push(descriptor.options),!1===method.apply(plugin,params)))return!1;return!0},descriptors:function(chart){var cache=chart.$plugins||(chart.$plugins={});if(cache.id===this._cacheId)return cache.descriptors;var plugins=[],descriptors=[],config=chart&&chart.config||{},options=config.options&&config.options.plugins||{};return this._plugins.concat(config.plugins||[]).forEach(function(plugin){if(-1===plugins.indexOf(plugin)){var id=plugin.id,opts=options[id];!1!==opts&&(!0===opts&&(opts=helpers$1.clone(core_defaults.global.plugins[id])),plugins.push(plugin),descriptors.push({plugin:plugin,options:opts||{}}))}}),cache.descriptors=descriptors,cache.id=this._cacheId,descriptors},_invalidate:function(chart){delete chart.$plugins}},core_scaleService={constructors:{},defaults:{},registerScaleType:function(type,scaleConstructor,scaleDefaults){this.constructors[type]=scaleConstructor,this.defaults[type]=helpers$1.clone(scaleDefaults)},getScaleConstructor:function(type){return this.constructors.hasOwnProperty(type)?this.constructors[type]:void 0},getScaleDefaults:function(type){return this.defaults.hasOwnProperty(type)?helpers$1.merge({},[core_defaults.scale,this.defaults[type]]):{}},updateScaleDefaults:function(type,additions){var me=this;me.defaults.hasOwnProperty(type)&&(me.defaults[type]=helpers$1.extend(me.defaults[type],additions))},addScalesToLayout:function(chart){helpers$1.each(chart.scales,function(scale){scale.fullWidth=scale.options.fullWidth,scale.position=scale.options.position,scale.weight=scale.options.weight,core_layouts.addBox(chart,scale)})}},valueOrDefault$7=helpers$1.valueOrDefault;core_defaults._set("global",{tooltips:{enabled:!0,custom:null,mode:"nearest",position:"average",intersect:!0,backgroundColor:"rgba(0,0,0,0.8)",titleFontStyle:"bold",titleSpacing:2,titleMarginBottom:6,titleFontColor:"#fff",titleAlign:"left",bodySpacing:2,bodyFontColor:"#fff",bodyAlign:"left",footerFontStyle:"bold",footerSpacing:2,footerMarginTop:6,footerFontColor:"#fff",footerAlign:"left",yPadding:6,xPadding:6,caretPadding:2,caretSize:5,cornerRadius:6,multiKeyBackground:"#fff",displayColors:!0,borderColor:"rgba(0,0,0,0)",borderWidth:0,callbacks:{beforeTitle:helpers$1.noop,title:function(tooltipItems,data){var title="",labels=data.labels,labelCount=labels?labels.length:0;if(tooltipItems.length>0){var item=tooltipItems[0];item.label?title=item.label:item.xLabel?title=item.xLabel:labelCount>0&&item.index<labelCount&&(title=labels[item.index])}return title},afterTitle:helpers$1.noop,beforeBody:helpers$1.noop,beforeLabel:helpers$1.noop,label:function(tooltipItem,data){var label=data.datasets[tooltipItem.datasetIndex].label||"";return label&&(label+=": "),helpers$1.isNullOrUndef(tooltipItem.value)?label+=tooltipItem.yLabel:label+=tooltipItem.value,label},labelColor:function(tooltipItem,chart){var meta=chart.getDatasetMeta(tooltipItem.datasetIndex),activeElement=meta.data[tooltipItem.index],view=activeElement._view;return{borderColor:view.borderColor,backgroundColor:view.backgroundColor}},labelTextColor:function(){return this._options.bodyFontColor},afterLabel:helpers$1.noop,afterBody:helpers$1.noop,beforeFooter:helpers$1.noop,footer:helpers$1.noop,afterFooter:helpers$1.noop}}});var positioners={average:function(elements){if(!elements.length)return!1;var i,len,x=0,y=0,count=0;for(i=0,len=elements.length;i<len;++i){var el=elements[i];if(el&&el.hasValue()){var pos=el.tooltipPosition();x+=pos.x,y+=pos.y,++count}}return{x:x/count,y:y/count}},nearest:function(elements,eventPosition){var i,len,nearestElement,x=eventPosition.x,y=eventPosition.y,minDistance=Number.POSITIVE_INFINITY;for(i=0,len=elements.length;i<len;++i){var el=elements[i];if(el&&el.hasValue()){var center=el.getCenterPoint(),d=helpers$1.distanceBetweenPoints(eventPosition,center);d<minDistance&&(minDistance=d,nearestElement=el)}}if(nearestElement){var tp=nearestElement.tooltipPosition();x=tp.x,y=tp.y}return{x:x,y:y}}},exports$3=core_element.extend({initialize:function(){this._model=getBaseModel(this._options),this._lastActive=[]},getTitle:function(){var me=this,opts=me._options,callbacks=opts.callbacks,beforeTitle=callbacks.beforeTitle.apply(me,arguments),title=callbacks.title.apply(me,arguments),afterTitle=callbacks.afterTitle.apply(me,arguments),lines=[];return lines=pushOrConcat(lines,splitNewlines(beforeTitle)),lines=pushOrConcat(lines,splitNewlines(title)),lines=pushOrConcat(lines,splitNewlines(afterTitle))},getBeforeBody:function(){return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this,arguments))},getBody:function(tooltipItems,data){var me=this,callbacks=me._options.callbacks,bodyItems=[];return helpers$1.each(tooltipItems,function(tooltipItem){var bodyItem={before:[],lines:[],after:[]};pushOrConcat(bodyItem.before,splitNewlines(callbacks.beforeLabel.call(me,tooltipItem,data))),pushOrConcat(bodyItem.lines,callbacks.label.call(me,tooltipItem,data)),pushOrConcat(bodyItem.after,splitNewlines(callbacks.afterLabel.call(me,tooltipItem,data))),bodyItems.push(bodyItem)}),bodyItems},getAfterBody:function(){return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this,arguments))},getFooter:function(){var me=this,callbacks=me._options.callbacks,beforeFooter=callbacks.beforeFooter.apply(me,arguments),footer=callbacks.footer.apply(me,arguments),afterFooter=callbacks.afterFooter.apply(me,arguments),lines=[];return lines=pushOrConcat(lines,splitNewlines(beforeFooter)),lines=pushOrConcat(lines,splitNewlines(footer)),lines=pushOrConcat(lines,splitNewlines(afterFooter))},update:function(changed){var i,len,me=this,opts=me._options,existingModel=me._model,model=me._model=getBaseModel(opts),active=me._active,data=me._data,alignment={xAlign:existingModel.xAlign,yAlign:existingModel.yAlign},backgroundPoint={x:existingModel.x,y:existingModel.y},tooltipSize={width:existingModel.width,height:existingModel.height},tooltipPosition={x:existingModel.caretX,y:existingModel.caretY};if(active.length){model.opacity=1;var labelColors=[],labelTextColors=[];tooltipPosition=positioners[opts.position].call(me,active,me._eventPosition);var tooltipItems=[];for(i=0,len=active.length;i<len;++i)tooltipItems.push(createTooltipItem(active[i]));opts.filter&&(tooltipItems=tooltipItems.filter(function(a){return opts.filter(a,data)})),opts.itemSort&&(tooltipItems=tooltipItems.sort(function(a,b){return opts.itemSort(a,b,data)})),helpers$1.each(tooltipItems,function(tooltipItem){labelColors.push(opts.callbacks.labelColor.call(me,tooltipItem,me._chart)),labelTextColors.push(opts.callbacks.labelTextColor.call(me,tooltipItem,me._chart))}),model.title=me.getTitle(tooltipItems,data),model.beforeBody=me.getBeforeBody(tooltipItems,data),model.body=me.getBody(tooltipItems,data),model.afterBody=me.getAfterBody(tooltipItems,data),model.footer=me.getFooter(tooltipItems,data),model.x=tooltipPosition.x,model.y=tooltipPosition.y,model.caretPadding=opts.caretPadding,model.labelColors=labelColors,model.labelTextColors=labelTextColors,model.dataPoints=tooltipItems,tooltipSize=getTooltipSize(this,model),alignment=determineAlignment(this,tooltipSize),backgroundPoint=getBackgroundPoint(model,tooltipSize,alignment,me._chart)}else model.opacity=0;return model.xAlign=alignment.xAlign,model.yAlign=alignment.yAlign,model.x=backgroundPoint.x,model.y=backgroundPoint.y,model.width=tooltipSize.width,model.height=tooltipSize.height,model.caretX=tooltipPosition.x,model.caretY=tooltipPosition.y,me._model=model,changed&&opts.custom&&opts.custom.call(me,model),me},drawCaret:function(tooltipPoint,size){var ctx=this._chart.ctx,vm=this._view,caretPosition=this.getCaretPosition(tooltipPoint,size,vm);ctx.lineTo(caretPosition.x1,caretPosition.y1),ctx.lineTo(caretPosition.x2,caretPosition.y2),ctx.lineTo(caretPosition.x3,caretPosition.y3)},getCaretPosition:function(tooltipPoint,size,vm){var x1,x2,x3,y1,y2,y3,caretSize=vm.caretSize,cornerRadius=vm.cornerRadius,xAlign=vm.xAlign,yAlign=vm.yAlign,ptX=tooltipPoint.x,ptY=tooltipPoint.y,width=size.width,height=size.height;if("center"===yAlign)y2=ptY+height/2,"left"===xAlign?(x1=ptX,x2=x1-caretSize,x3=x1,y1=y2+caretSize,y3=y2-caretSize):(x1=ptX+width,x2=x1+caretSize,x3=x1,y1=y2-caretSize,y3=y2+caretSize);else if("left"===xAlign?(x2=ptX+cornerRadius+caretSize,x1=x2-caretSize,x3=x2+caretSize):"right"===xAlign?(x2=ptX+width-cornerRadius-caretSize,x1=x2-caretSize,x3=x2+caretSize):(x2=vm.caretX,x1=x2-caretSize,x3=x2+caretSize),"top"===yAlign)y1=ptY,y2=y1-caretSize,y3=y1;else{y1=ptY+height,y2=y1+caretSize,y3=y1;var tmp=x3;x3=x1,x1=tmp}return{x1:x1,x2:x2,x3:x3,y1:y1,y2:y2,y3:y3}},drawTitle:function(pt,vm,ctx){var title=vm.title;if(title.length){pt.x=getAlignedX(vm,vm._titleAlign),ctx.textAlign=vm._titleAlign,ctx.textBaseline="top";var titleFontSize=vm.titleFontSize,titleSpacing=vm.titleSpacing;ctx.fillStyle=vm.titleFontColor,ctx.font=helpers$1.fontString(titleFontSize,vm._titleFontStyle,vm._titleFontFamily);var i,len;for(i=0,len=title.length;i<len;++i)ctx.fillText(title[i],pt.x,pt.y),pt.y+=titleFontSize+titleSpacing,i+1===title.length&&(pt.y+=vm.titleMarginBottom-titleSpacing)}},drawBody:function(pt,vm,ctx){var textColor,bodyFontSize=vm.bodyFontSize,bodySpacing=vm.bodySpacing,bodyAlign=vm._bodyAlign,body=vm.body,drawColorBoxes=vm.displayColors,labelColors=vm.labelColors,xLinePadding=0,colorX=drawColorBoxes?getAlignedX(vm,"left"):0;ctx.textAlign=bodyAlign,ctx.textBaseline="top",ctx.font=helpers$1.fontString(bodyFontSize,vm._bodyFontStyle,vm._bodyFontFamily),pt.x=getAlignedX(vm,bodyAlign);var fillLineOfText=function(line){ctx.fillText(line,pt.x+xLinePadding,pt.y),pt.y+=bodyFontSize+bodySpacing};ctx.fillStyle=vm.bodyFontColor,helpers$1.each(vm.beforeBody,fillLineOfText),xLinePadding=drawColorBoxes&&"right"!==bodyAlign?"center"===bodyAlign?bodyFontSize/2+1:bodyFontSize+2:0,helpers$1.each(body,function(bodyItem,i){textColor=vm.labelTextColors[i],ctx.fillStyle=textColor,helpers$1.each(bodyItem.before,fillLineOfText),helpers$1.each(bodyItem.lines,function(line){drawColorBoxes&&(ctx.fillStyle=vm.legendColorBackground,ctx.fillRect(colorX,pt.y,bodyFontSize,bodyFontSize),ctx.lineWidth=1,ctx.strokeStyle=labelColors[i].borderColor,ctx.strokeRect(colorX,pt.y,bodyFontSize,bodyFontSize),ctx.fillStyle=labelColors[i].backgroundColor,ctx.fillRect(colorX+1,pt.y+1,bodyFontSize-2,bodyFontSize-2),ctx.fillStyle=textColor),fillLineOfText(line)}),helpers$1.each(bodyItem.after,fillLineOfText)}),xLinePadding=0,helpers$1.each(vm.afterBody,fillLineOfText),pt.y-=bodySpacing},drawFooter:function(pt,vm,ctx){var footer=vm.footer;footer.length&&(pt.x=getAlignedX(vm,vm._footerAlign),pt.y+=vm.footerMarginTop,ctx.textAlign=vm._footerAlign,ctx.textBaseline="top",ctx.fillStyle=vm.footerFontColor,ctx.font=helpers$1.fontString(vm.footerFontSize,vm._footerFontStyle,vm._footerFontFamily),helpers$1.each(footer,function(line){ctx.fillText(line,pt.x,pt.y),pt.y+=vm.footerFontSize+vm.footerSpacing}))},drawBackground:function(pt,vm,ctx,tooltipSize){ctx.fillStyle=vm.backgroundColor,ctx.strokeStyle=vm.borderColor,ctx.lineWidth=vm.borderWidth;var xAlign=vm.xAlign,yAlign=vm.yAlign,x=pt.x,y=pt.y,width=tooltipSize.width,height=tooltipSize.height,radius=vm.cornerRadius;ctx.beginPath(),ctx.moveTo(x+radius,y),"top"===yAlign&&this.drawCaret(pt,tooltipSize),ctx.lineTo(x+width-radius,y),ctx.quadraticCurveTo(x+width,y,x+width,y+radius),"center"===yAlign&&"right"===xAlign&&this.drawCaret(pt,tooltipSize),ctx.lineTo(x+width,y+height-radius),ctx.quadraticCurveTo(x+width,y+height,x+width-radius,y+height),"bottom"===yAlign&&this.drawCaret(pt,tooltipSize),ctx.lineTo(x+radius,y+height),ctx.quadraticCurveTo(x,y+height,x,y+height-radius),"center"===yAlign&&"left"===xAlign&&this.drawCaret(pt,tooltipSize),ctx.lineTo(x,y+radius),ctx.quadraticCurveTo(x,y,x+radius,y),ctx.closePath(),ctx.fill(),vm.borderWidth>0&&ctx.stroke()},draw:function(){var ctx=this._chart.ctx,vm=this._view;if(0!==vm.opacity){var tooltipSize={width:vm.width,height:vm.height},pt={x:vm.x,y:vm.y},opacity=Math.abs(vm.opacity<.001)?0:vm.opacity,hasTooltipContent=vm.title.length||vm.beforeBody.length||vm.body.length||vm.afterBody.length||vm.footer.length;this._options.enabled&&hasTooltipContent&&(ctx.save(),ctx.globalAlpha=opacity,this.drawBackground(pt,vm,ctx,tooltipSize),pt.y+=vm.yPadding,this.drawTitle(pt,vm,ctx),this.drawBody(pt,vm,ctx),this.drawFooter(pt,vm,ctx),ctx.restore())}},handleEvent:function(e){var me=this,options=me._options,changed=!1;return me._lastActive=me._lastActive||[],"mouseout"===e.type?me._active=[]:me._active=me._chart.getElementsAtEventForMode(e,options.mode,options),changed=!helpers$1.arrayEquals(me._active,me._lastActive),changed&&(me._lastActive=me._active,(options.enabled||options.custom)&&(me._eventPosition={x:e.x,y:e.y},me.update(!0),me.pivot())),changed}}),positioners_1=positioners,core_tooltip=exports$3;core_tooltip.positioners=positioners_1;var valueOrDefault$8=helpers$1.valueOrDefault;core_defaults._set("global",{elements:{},events:["mousemove","mouseout","click","touchstart","touchmove"],hover:{onHover:null,mode:"nearest",intersect:!0,animationDuration:400},onClick:null,maintainAspectRatio:!0,responsive:!0,responsiveAnimationDuration:0});var Chart=function(item,config){return this.construct(item,config),this};helpers$1.extend(Chart.prototype,{construct:function(item,config){var me=this;config=initConfig(config);var context=platform.acquireContext(item,config),canvas=context&&context.canvas,height=canvas&&canvas.height,width=canvas&&canvas.width;if(me.id=helpers$1.uid(),me.ctx=context,me.canvas=canvas,me.config=config,me.width=width,me.height=height,me.aspectRatio=height?width/height:null,me.options=config.options,me._bufferedRender=!1,me.chart=me,me.controller=me,Chart.instances[me.id]=me,Object.defineProperty(me,"data",{get:function(){return me.config.data},set:function(value){me.config.data=value}}),!context||!canvas)return void console.error("Failed to create chart: can't acquire context from the given item");me.initialize(),me.update()},initialize:function(){var me=this;return core_plugins.notify(me,"beforeInit"),helpers$1.retinaScale(me,me.options.devicePixelRatio),me.bindEvents(),me.options.responsive&&me.resize(!0),me.ensureScalesHaveIDs(),me.buildOrUpdateScales(),me.initToolTip(),core_plugins.notify(me,"afterInit"),me},clear:function(){return helpers$1.canvas.clear(this),this},stop:function(){return core_animations.cancelAnimation(this),this},resize:function(silent){var me=this,options=me.options,canvas=me.canvas,aspectRatio=options.maintainAspectRatio&&me.aspectRatio||null,newWidth=Math.max(0,Math.floor(helpers$1.getMaximumWidth(canvas))),newHeight=Math.max(0,Math.floor(aspectRatio?newWidth/aspectRatio:helpers$1.getMaximumHeight(canvas)));if((me.width!==newWidth||me.height!==newHeight)&&(canvas.width=me.width=newWidth,canvas.height=me.height=newHeight,canvas.style.width=newWidth+"px",canvas.style.height=newHeight+"px",helpers$1.retinaScale(me,options.devicePixelRatio),!silent)){var newSize={width:newWidth,height:newHeight};core_plugins.notify(me,"resize",[newSize]),options.onResize&&options.onResize(me,newSize),me.stop(),me.update({duration:options.responsiveAnimationDuration})}},ensureScalesHaveIDs:function(){var options=this.options,scalesOptions=options.scales||{},scaleOptions=options.scale;helpers$1.each(scalesOptions.xAxes,function(xAxisOptions,index){xAxisOptions.id=xAxisOptions.id||"x-axis-"+index}),helpers$1.each(scalesOptions.yAxes,function(yAxisOptions,index){yAxisOptions.id=yAxisOptions.id||"y-axis-"+index}),scaleOptions&&(scaleOptions.id=scaleOptions.id||"scale")},buildOrUpdateScales:function(){var me=this,options=me.options,scales=me.scales||{},items=[],updated=Object.keys(scales).reduce(function(obj,id){return obj[id]=!1,obj},{});options.scales&&(items=items.concat((options.scales.xAxes||[]).map(function(xAxisOptions){return{options:xAxisOptions,dtype:"category",dposition:"bottom"}}),(options.scales.yAxes||[]).map(function(yAxisOptions){return{options:yAxisOptions,dtype:"linear",dposition:"left"}}))),options.scale&&items.push({options:options.scale,dtype:"radialLinear",isDefault:!0,dposition:"chartArea"}),helpers$1.each(items,function(item){var scaleOptions=item.options,id=scaleOptions.id,scaleType=valueOrDefault$8(scaleOptions.type,item.dtype);positionIsHorizontal(scaleOptions.position)!==positionIsHorizontal(item.dposition)&&(scaleOptions.position=item.dposition),updated[id]=!0;var scale=null;if(id in scales&&scales[id].type===scaleType)scale=scales[id],scale.options=scaleOptions,scale.ctx=me.ctx,scale.chart=me;else{var scaleClass=core_scaleService.getScaleConstructor(scaleType);if(!scaleClass)return;scale=new scaleClass({id:id,type:scaleType,options:scaleOptions,ctx:me.ctx,chart:me}),scales[scale.id]=scale}scale.mergeTicksOptions(),item.isDefault&&(me.scale=scale)}),helpers$1.each(updated,function(hasUpdated,id){hasUpdated||delete scales[id]}),me.scales=scales,core_scaleService.addScalesToLayout(this)},buildOrUpdateControllers:function(){var me=this,newControllers=[];return helpers$1.each(me.data.datasets,function(dataset,datasetIndex){var meta=me.getDatasetMeta(datasetIndex),type=dataset.type||me.config.type;if(meta.type&&meta.type!==type&&(me.destroyDatasetMeta(datasetIndex),meta=me.getDatasetMeta(datasetIndex)),meta.type=type,meta.controller)meta.controller.updateIndex(datasetIndex),meta.controller.linkScales();else{var ControllerClass=controllers[meta.type];if(void 0===ControllerClass)throw new Error('"'+meta.type+'" is not a chart type.');meta.controller=new ControllerClass(me,datasetIndex),newControllers.push(meta.controller)}},me),newControllers},resetElements:function(){var me=this;helpers$1.each(me.data.datasets,function(dataset,datasetIndex){me.getDatasetMeta(datasetIndex).controller.reset()},me)},reset:function(){this.resetElements(),this.tooltip.initialize()},update:function(config){var me=this;if(config&&"object"==typeof config||(config={duration:config,lazy:arguments[1]}),updateConfig(me),core_plugins._invalidate(me),!1!==core_plugins.notify(me,"beforeUpdate")){me.tooltip._data=me.data;var newControllers=me.buildOrUpdateControllers();helpers$1.each(me.data.datasets,function(dataset,datasetIndex){me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements()},me),me.updateLayout(),me.options.animation&&me.options.animation.duration&&helpers$1.each(newControllers,function(controller){controller.reset()}),me.updateDatasets(),me.tooltip.initialize(),me.lastActive=[],core_plugins.notify(me,"afterUpdate"),me._bufferedRender?me._bufferedRequest={duration:config.duration,easing:config.easing,lazy:config.lazy}:me.render(config)}},updateLayout:function(){var me=this;!1!==core_plugins.notify(me,"beforeLayout")&&(core_layouts.update(this,this.width,this.height),core_plugins.notify(me,"afterScaleUpdate"),core_plugins.notify(me,"afterLayout"))},updateDatasets:function(){var me=this;if(!1!==core_plugins.notify(me,"beforeDatasetsUpdate")){for(var i=0,ilen=me.data.datasets.length;i<ilen;++i)me.updateDataset(i);core_plugins.notify(me,"afterDatasetsUpdate")}},updateDataset:function(index){var me=this,meta=me.getDatasetMeta(index),args={meta:meta,index:index};!1!==core_plugins.notify(me,"beforeDatasetUpdate",[args])&&(meta.controller.update(),core_plugins.notify(me,"afterDatasetUpdate",[args]))},render:function(config){var me=this;config&&"object"==typeof config||(config={duration:config,lazy:arguments[1]});var animationOptions=me.options.animation,duration=valueOrDefault$8(config.duration,animationOptions&&animationOptions.duration),lazy=config.lazy;if(!1!==core_plugins.notify(me,"beforeRender")){var onComplete=function(animation){core_plugins.notify(me,"afterRender"),helpers$1.callback(animationOptions&&animationOptions.onComplete,[animation],me)};if(animationOptions&&duration){var animation=new core_animation({numSteps:duration/16.66,easing:config.easing||animationOptions.easing,render:function(chart,animationObject){var easingFunction=helpers$1.easing.effects[animationObject.easing],currentStep=animationObject.currentStep,stepDecimal=currentStep/animationObject.numSteps;chart.draw(easingFunction(stepDecimal),stepDecimal,currentStep)},onAnimationProgress:animationOptions.onProgress,onAnimationComplete:onComplete});core_animations.addAnimation(me,animation,duration,lazy)}else me.draw(),onComplete(new core_animation({numSteps:0,chart:me}));return me}},draw:function(easingValue){var me=this;me.clear(),helpers$1.isNullOrUndef(easingValue)&&(easingValue=1),me.transition(easingValue),me.width<=0||me.height<=0||!1!==core_plugins.notify(me,"beforeDraw",[easingValue])&&(helpers$1.each(me.boxes,function(box){box.draw(me.chartArea)},me),me.drawDatasets(easingValue),me._drawTooltip(easingValue),core_plugins.notify(me,"afterDraw",[easingValue]))},transition:function(easingValue){for(var me=this,i=0,ilen=(me.data.datasets||[]).length;i<ilen;++i)me.isDatasetVisible(i)&&me.getDatasetMeta(i).controller.transition(easingValue);me.tooltip.transition(easingValue)},drawDatasets:function(easingValue){var me=this;if(!1!==core_plugins.notify(me,"beforeDatasetsDraw",[easingValue])){for(var i=(me.data.datasets||[]).length-1;i>=0;--i)me.isDatasetVisible(i)&&me.drawDataset(i,easingValue);core_plugins.notify(me,"afterDatasetsDraw",[easingValue])}},drawDataset:function(index,easingValue){var me=this,meta=me.getDatasetMeta(index),args={meta:meta,index:index,easingValue:easingValue};!1!==core_plugins.notify(me,"beforeDatasetDraw",[args])&&(meta.controller.draw(easingValue),core_plugins.notify(me,"afterDatasetDraw",[args]))},_drawTooltip:function(easingValue){var me=this,tooltip=me.tooltip,args={tooltip:tooltip,easingValue:easingValue};!1!==core_plugins.notify(me,"beforeTooltipDraw",[args])&&(tooltip.draw(),core_plugins.notify(me,"afterTooltipDraw",[args]))},getElementAtEvent:function(e){return core_interaction.modes.single(this,e)},getElementsAtEvent:function(e){return core_interaction.modes.label(this,e,{intersect:!0})},getElementsAtXAxis:function(e){return core_interaction.modes["x-axis"](this,e,{intersect:!0})},getElementsAtEventForMode:function(e,mode,options){var method=core_interaction.modes[mode];return"function"==typeof method?method(this,e,options):[]},getDatasetAtEvent:function(e){return core_interaction.modes.dataset(this,e,{intersect:!0})},getDatasetMeta:function(datasetIndex){var me=this,dataset=me.data.datasets[datasetIndex];dataset._meta||(dataset._meta={});var meta=dataset._meta[me.id];return meta||(meta=dataset._meta[me.id]={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null}),meta},getVisibleDatasetCount:function(){for(var count=0,i=0,ilen=this.data.datasets.length;i<ilen;++i)this.isDatasetVisible(i)&&count++;return count},isDatasetVisible:function(datasetIndex){var meta=this.getDatasetMeta(datasetIndex);return"boolean"==typeof meta.hidden?!meta.hidden:!this.data.datasets[datasetIndex].hidden},generateLegend:function(){return this.options.legendCallback(this)},destroyDatasetMeta:function(datasetIndex){var id=this.id,dataset=this.data.datasets[datasetIndex],meta=dataset._meta&&dataset._meta[id];meta&&(meta.controller.destroy(),delete dataset._meta[id])},destroy:function(){var i,ilen,me=this,canvas=me.canvas;for(me.stop(),i=0,ilen=me.data.datasets.length;i<ilen;++i)me.destroyDatasetMeta(i);canvas&&(me.unbindEvents(),helpers$1.canvas.clear(me),platform.releaseContext(me.ctx),me.canvas=null,me.ctx=null),core_plugins.notify(me,"destroy"),delete Chart.instances[me.id]},toBase64Image:function(){return this.canvas.toDataURL.apply(this.canvas,arguments)},initToolTip:function(){var me=this;me.tooltip=new core_tooltip({_chart:me,_chartInstance:me,_data:me.data,_options:me.options.tooltips},me)},bindEvents:function(){var me=this,listeners=me._listeners={},listener=function(){me.eventHandler.apply(me,arguments)};helpers$1.each(me.options.events,function(type){platform.addEventListener(me,type,listener),listeners[type]=listener}),me.options.responsive&&(listener=function(){me.resize()},platform.addEventListener(me,"resize",listener),listeners.resize=listener)},unbindEvents:function(){var me=this,listeners=me._listeners;listeners&&(delete me._listeners,helpers$1.each(listeners,function(listener,type){
platform.removeEventListener(me,type,listener)}))},updateHoverStyle:function(elements,mode,enabled){var element,i,ilen,method=enabled?"setHoverStyle":"removeHoverStyle";for(i=0,ilen=elements.length;i<ilen;++i)(element=elements[i])&&this.getDatasetMeta(element._datasetIndex).controller[method](element)},eventHandler:function(e){var me=this,tooltip=me.tooltip;if(!1!==core_plugins.notify(me,"beforeEvent",[e])){me._bufferedRender=!0,me._bufferedRequest=null;var changed=me.handleEvent(e);tooltip&&(changed=tooltip._start?tooltip.handleEvent(e):changed|tooltip.handleEvent(e)),core_plugins.notify(me,"afterEvent",[e]);var bufferedRequest=me._bufferedRequest;return bufferedRequest?me.render(bufferedRequest):changed&&!me.animating&&(me.stop(),me.render({duration:me.options.hover.animationDuration,lazy:!0})),me._bufferedRender=!1,me._bufferedRequest=null,me}},handleEvent:function(e){var me=this,options=me.options||{},hoverOptions=options.hover,changed=!1;return me.lastActive=me.lastActive||[],"mouseout"===e.type?me.active=[]:me.active=me.getElementsAtEventForMode(e,hoverOptions.mode,hoverOptions),helpers$1.callback(options.onHover||options.hover.onHover,[e.native,me.active],me),"mouseup"!==e.type&&"click"!==e.type||options.onClick&&options.onClick.call(me,e.native,me.active),me.lastActive.length&&me.updateHoverStyle(me.lastActive,hoverOptions.mode,!1),me.active.length&&hoverOptions.mode&&me.updateHoverStyle(me.active,hoverOptions.mode,!0),changed=!helpers$1.arrayEquals(me.active,me.lastActive),me.lastActive=me.active,changed}}),Chart.instances={};var core_controller=Chart;Chart.Controller=Chart,Chart.types={},helpers$1.configMerge=mergeConfig,helpers$1.scaleMerge=mergeScaleConfig;helpers$1.extend(DateAdapter.prototype,{formats:abstract,parse:abstract,format:abstract,add:abstract,diff:abstract,startOf:abstract,endOf:abstract,_create:function(value){return value}}),DateAdapter.override=function(members){helpers$1.extend(DateAdapter.prototype,members)};var _date=DateAdapter,core_adapters={_date:_date},core_ticks={formatters:{values:function(value){return helpers$1.isArray(value)?value:""+value},linear:function(tickValue,index,ticks){var delta=ticks.length>3?ticks[2]-ticks[1]:ticks[1]-ticks[0];Math.abs(delta)>1&&tickValue!==Math.floor(tickValue)&&(delta=tickValue-Math.floor(tickValue));var logDelta=helpers$1.log10(Math.abs(delta)),tickString="";if(0!==tickValue){if(Math.max(Math.abs(ticks[0]),Math.abs(ticks[ticks.length-1]))<1e-4){var logTick=helpers$1.log10(Math.abs(tickValue));tickString=tickValue.toExponential(Math.floor(logTick)-Math.floor(logDelta))}else{var numDecimal=-1*Math.floor(logDelta);numDecimal=Math.max(Math.min(numDecimal,20),0),tickString=tickValue.toFixed(numDecimal)}}else tickString="0";return tickString},logarithmic:function(tickValue,index,ticks){var remain=tickValue/Math.pow(10,Math.floor(helpers$1.log10(tickValue)));return 0===tickValue?"0":1===remain||2===remain||5===remain||0===index||index===ticks.length-1?tickValue.toExponential():""}}},valueOrDefault$9=helpers$1.valueOrDefault,valueAtIndexOrDefault=helpers$1.valueAtIndexOrDefault;core_defaults._set("scale",{display:!0,position:"left",offset:!1,gridLines:{display:!0,color:"rgba(0, 0, 0, 0.1)",lineWidth:1,drawBorder:!0,drawOnChartArea:!0,drawTicks:!0,tickMarkLength:10,zeroLineWidth:1,zeroLineColor:"rgba(0,0,0,0.25)",zeroLineBorderDash:[],zeroLineBorderDashOffset:0,offsetGridLines:!1,borderDash:[],borderDashOffset:0},scaleLabel:{display:!1,labelString:"",padding:{top:4,bottom:4}},ticks:{beginAtZero:!1,minRotation:0,maxRotation:50,mirror:!1,padding:0,reverse:!1,display:!0,autoSkip:!0,autoSkipPadding:0,labelOffset:0,callback:core_ticks.formatters.values,minor:{},major:{}}});var core_scale=core_element.extend({getPadding:function(){var me=this;return{left:me.paddingLeft||0,top:me.paddingTop||0,right:me.paddingRight||0,bottom:me.paddingBottom||0}},getTicks:function(){return this._ticks},mergeTicksOptions:function(){var ticks=this.options.ticks;!1===ticks.minor&&(ticks.minor={display:!1}),!1===ticks.major&&(ticks.major={display:!1});for(var key in ticks)"major"!==key&&"minor"!==key&&(void 0===ticks.minor[key]&&(ticks.minor[key]=ticks[key]),void 0===ticks.major[key]&&(ticks.major[key]=ticks[key]))},beforeUpdate:function(){helpers$1.callback(this.options.beforeUpdate,[this])},update:function(maxWidth,maxHeight,margins){var i,ilen,labels,label,ticks,tick,me=this;for(me.beforeUpdate(),me.maxWidth=maxWidth,me.maxHeight=maxHeight,me.margins=helpers$1.extend({left:0,right:0,top:0,bottom:0},margins),me._maxLabelLines=0,me.longestLabelWidth=0,me.longestTextCache=me.longestTextCache||{},me.beforeSetDimensions(),me.setDimensions(),me.afterSetDimensions(),me.beforeDataLimits(),me.determineDataLimits(),me.afterDataLimits(),me.beforeBuildTicks(),ticks=me.buildTicks()||[],ticks=me.afterBuildTicks(ticks)||ticks,me.beforeTickToLabelConversion(),labels=me.convertTicksToLabels(ticks)||me.ticks,me.afterTickToLabelConversion(),me.ticks=labels,i=0,ilen=labels.length;i<ilen;++i)label=labels[i],tick=ticks[i],tick?tick.label=label:ticks.push(tick={label:label,major:!1});return me._ticks=ticks,me.beforeCalculateTickRotation(),me.calculateTickRotation(),me.afterCalculateTickRotation(),me.beforeFit(),me.fit(),me.afterFit(),me.afterUpdate(),me.minSize},afterUpdate:function(){helpers$1.callback(this.options.afterUpdate,[this])},beforeSetDimensions:function(){helpers$1.callback(this.options.beforeSetDimensions,[this])},setDimensions:function(){var me=this;me.isHorizontal()?(me.width=me.maxWidth,me.left=0,me.right=me.width):(me.height=me.maxHeight,me.top=0,me.bottom=me.height),me.paddingLeft=0,me.paddingTop=0,me.paddingRight=0,me.paddingBottom=0},afterSetDimensions:function(){helpers$1.callback(this.options.afterSetDimensions,[this])},beforeDataLimits:function(){helpers$1.callback(this.options.beforeDataLimits,[this])},determineDataLimits:helpers$1.noop,afterDataLimits:function(){helpers$1.callback(this.options.afterDataLimits,[this])},beforeBuildTicks:function(){helpers$1.callback(this.options.beforeBuildTicks,[this])},buildTicks:helpers$1.noop,afterBuildTicks:function(ticks){var me=this;return helpers$1.isArray(ticks)&&ticks.length?helpers$1.callback(me.options.afterBuildTicks,[me,ticks]):(me.ticks=helpers$1.callback(me.options.afterBuildTicks,[me,me.ticks])||me.ticks,ticks)},beforeTickToLabelConversion:function(){helpers$1.callback(this.options.beforeTickToLabelConversion,[this])},convertTicksToLabels:function(){var me=this,tickOpts=me.options.ticks;me.ticks=me.ticks.map(tickOpts.userCallback||tickOpts.callback,this)},afterTickToLabelConversion:function(){helpers$1.callback(this.options.afterTickToLabelConversion,[this])},beforeCalculateTickRotation:function(){helpers$1.callback(this.options.beforeCalculateTickRotation,[this])},calculateTickRotation:function(){var me=this,context=me.ctx,tickOpts=me.options.ticks,labels=labelsFromTicks(me._ticks),tickFont=helpers$1.options._parseFont(tickOpts);context.font=tickFont.string;var labelRotation=tickOpts.minRotation||0;if(labels.length&&me.options.display&&me.isHorizontal())for(var cosRotation,originalLabelWidth=helpers$1.longestText(context,tickFont.string,labels,me.longestTextCache),labelWidth=originalLabelWidth,tickWidth=me.getPixelForTick(1)-me.getPixelForTick(0)-6;labelWidth>tickWidth&&labelRotation<tickOpts.maxRotation;){var angleRadians=helpers$1.toRadians(labelRotation);if(cosRotation=Math.cos(angleRadians),Math.sin(angleRadians)*originalLabelWidth>me.maxHeight){labelRotation--;break}labelRotation++,labelWidth=cosRotation*originalLabelWidth}me.labelRotation=labelRotation},afterCalculateTickRotation:function(){helpers$1.callback(this.options.afterCalculateTickRotation,[this])},beforeFit:function(){helpers$1.callback(this.options.beforeFit,[this])},fit:function(){var me=this,minSize=me.minSize={width:0,height:0},labels=labelsFromTicks(me._ticks),opts=me.options,tickOpts=opts.ticks,scaleLabelOpts=opts.scaleLabel,gridLineOpts=opts.gridLines,display=me._isVisible(),position=opts.position,isHorizontal=me.isHorizontal(),parseFont=helpers$1.options._parseFont,tickFont=parseFont(tickOpts),tickMarkLength=opts.gridLines.tickMarkLength;if(minSize.width=isHorizontal?me.isFullWidth()?me.maxWidth-me.margins.left-me.margins.right:me.maxWidth:display&&gridLineOpts.drawTicks?tickMarkLength:0,minSize.height=isHorizontal?display&&gridLineOpts.drawTicks?tickMarkLength:0:me.maxHeight,scaleLabelOpts.display&&display){var scaleLabelFont=parseFont(scaleLabelOpts),scaleLabelPadding=helpers$1.options.toPadding(scaleLabelOpts.padding),deltaHeight=scaleLabelFont.lineHeight+scaleLabelPadding.height;isHorizontal?minSize.height+=deltaHeight:minSize.width+=deltaHeight}if(tickOpts.display&&display){var largestTextWidth=helpers$1.longestText(me.ctx,tickFont.string,labels,me.longestTextCache),tallestLabelHeightInLines=helpers$1.numberOfLabelLines(labels),lineSpace=.5*tickFont.size,tickPadding=me.options.ticks.padding;if(me._maxLabelLines=tallestLabelHeightInLines,me.longestLabelWidth=largestTextWidth,isHorizontal){var angleRadians=helpers$1.toRadians(me.labelRotation),cosRotation=Math.cos(angleRadians),sinRotation=Math.sin(angleRadians),labelHeight=sinRotation*largestTextWidth+tickFont.lineHeight*tallestLabelHeightInLines+lineSpace;minSize.height=Math.min(me.maxHeight,minSize.height+labelHeight+tickPadding),me.ctx.font=tickFont.string;var paddingLeft,paddingRight,firstLabelWidth=computeTextSize(me.ctx,labels[0],tickFont.string),lastLabelWidth=computeTextSize(me.ctx,labels[labels.length-1],tickFont.string),offsetLeft=me.getPixelForTick(0)-me.left,offsetRight=me.right-me.getPixelForTick(labels.length-1);0!==me.labelRotation?(paddingLeft="bottom"===position?cosRotation*firstLabelWidth:cosRotation*lineSpace,paddingRight="bottom"===position?cosRotation*lineSpace:cosRotation*lastLabelWidth):(paddingLeft=firstLabelWidth/2,paddingRight=lastLabelWidth/2),me.paddingLeft=Math.max(paddingLeft-offsetLeft,0)+3,me.paddingRight=Math.max(paddingRight-offsetRight,0)+3}else tickOpts.mirror?largestTextWidth=0:largestTextWidth+=tickPadding+lineSpace,minSize.width=Math.min(me.maxWidth,minSize.width+largestTextWidth),me.paddingTop=tickFont.size/2,me.paddingBottom=tickFont.size/2}me.handleMargins(),me.width=minSize.width,me.height=minSize.height},handleMargins:function(){var me=this;me.margins&&(me.paddingLeft=Math.max(me.paddingLeft-me.margins.left,0),me.paddingTop=Math.max(me.paddingTop-me.margins.top,0),me.paddingRight=Math.max(me.paddingRight-me.margins.right,0),me.paddingBottom=Math.max(me.paddingBottom-me.margins.bottom,0))},afterFit:function(){helpers$1.callback(this.options.afterFit,[this])},isHorizontal:function(){return"top"===this.options.position||"bottom"===this.options.position},isFullWidth:function(){return this.options.fullWidth},getRightValue:function(rawValue){if(helpers$1.isNullOrUndef(rawValue))return NaN;if(("number"==typeof rawValue||rawValue instanceof Number)&&!isFinite(rawValue))return NaN;if(rawValue)if(this.isHorizontal()){if(void 0!==rawValue.x)return this.getRightValue(rawValue.x)}else if(void 0!==rawValue.y)return this.getRightValue(rawValue.y);return rawValue},getLabelForIndex:helpers$1.noop,getPixelForValue:helpers$1.noop,getValueForPixel:helpers$1.noop,getPixelForTick:function(index){var me=this,offset=me.options.offset;if(me.isHorizontal()){var innerWidth=me.width-(me.paddingLeft+me.paddingRight),tickWidth=innerWidth/Math.max(me._ticks.length-(offset?0:1),1),pixel=tickWidth*index+me.paddingLeft;offset&&(pixel+=tickWidth/2);var finalVal=me.left+pixel;return finalVal+=me.isFullWidth()?me.margins.left:0}var innerHeight=me.height-(me.paddingTop+me.paddingBottom);return me.top+index*(innerHeight/(me._ticks.length-1))},getPixelForDecimal:function(decimal){var me=this;if(me.isHorizontal()){var innerWidth=me.width-(me.paddingLeft+me.paddingRight),valueOffset=innerWidth*decimal+me.paddingLeft,finalVal=me.left+valueOffset;return finalVal+=me.isFullWidth()?me.margins.left:0}return me.top+decimal*me.height},getBasePixel:function(){return this.getPixelForValue(this.getBaseValue())},getBaseValue:function(){var me=this,min=me.min,max=me.max;return me.beginAtZero?0:min<0&&max<0?max:min>0&&max>0?min:0},_autoSkip:function(ticks){var i,tick,me=this,isHorizontal=me.isHorizontal(),optionTicks=me.options.ticks.minor,tickCount=ticks.length,skipRatio=!1,maxTicks=optionTicks.maxTicksLimit,ticksLength=me._tickSize()*(tickCount-1),axisLength=isHorizontal?me.width-(me.paddingLeft+me.paddingRight):me.height-(me.paddingTop+me.PaddingBottom),result=[];for(ticksLength>axisLength&&(skipRatio=1+Math.floor(ticksLength/axisLength)),tickCount>maxTicks&&(skipRatio=Math.max(skipRatio,1+Math.floor(tickCount/maxTicks))),i=0;i<tickCount;i++)tick=ticks[i],skipRatio>1&&i%skipRatio>0&&delete tick.label,result.push(tick);return result},_tickSize:function(){var me=this,isHorizontal=me.isHorizontal(),optionTicks=me.options.ticks.minor,rot=helpers$1.toRadians(me.labelRotation),cos=Math.abs(Math.cos(rot)),sin=Math.abs(Math.sin(rot)),padding=optionTicks.autoSkipPadding||0,w=me.longestLabelWidth+padding||0,tickFont=helpers$1.options._parseFont(optionTicks),h=me._maxLabelLines*tickFont.lineHeight+padding||0;return isHorizontal?h*cos>w*sin?w/cos:h/sin:h*sin<w*cos?h/cos:w/sin},_isVisible:function(){var i,ilen,meta,me=this,chart=me.chart,display=me.options.display;if("auto"!==display)return!!display;for(i=0,ilen=chart.data.datasets.length;i<ilen;++i)if(chart.isDatasetVisible(i)&&(meta=chart.getDatasetMeta(i),meta.xAxisID===me.id||meta.yAxisID===me.id))return!0;return!1},draw:function(chartArea){var me=this,options=me.options;if(me._isVisible()){var borderValue,tickStart,tickEnd,chart=me.chart,context=me.ctx,globalDefaults=core_defaults.global,defaultFontColor=globalDefaults.defaultFontColor,optionTicks=options.ticks.minor,optionMajorTicks=options.ticks.major||optionTicks,gridLines=options.gridLines,scaleLabel=options.scaleLabel,position=options.position,isRotated=0!==me.labelRotation,isMirrored=optionTicks.mirror,isHorizontal=me.isHorizontal(),parseFont=helpers$1.options._parseFont,ticks=optionTicks.display&&optionTicks.autoSkip?me._autoSkip(me.getTicks()):me.getTicks(),tickFontColor=valueOrDefault$9(optionTicks.fontColor,defaultFontColor),tickFont=parseFont(optionTicks),lineHeight=tickFont.lineHeight,majorTickFontColor=valueOrDefault$9(optionMajorTicks.fontColor,defaultFontColor),majorTickFont=parseFont(optionMajorTicks),tickPadding=optionTicks.padding,labelOffset=optionTicks.labelOffset,tl=gridLines.drawTicks?gridLines.tickMarkLength:0,scaleLabelFontColor=valueOrDefault$9(scaleLabel.fontColor,defaultFontColor),scaleLabelFont=parseFont(scaleLabel),scaleLabelPadding=helpers$1.options.toPadding(scaleLabel.padding),labelRotationRadians=helpers$1.toRadians(me.labelRotation),itemsToDraw=[],axisWidth=gridLines.drawBorder?valueAtIndexOrDefault(gridLines.lineWidth,0,0):0,alignPixel=helpers$1._alignPixel;"top"===position?(borderValue=alignPixel(chart,me.bottom,axisWidth),tickStart=me.bottom-tl,tickEnd=borderValue-axisWidth/2):"bottom"===position?(borderValue=alignPixel(chart,me.top,axisWidth),tickStart=borderValue+axisWidth/2,tickEnd=me.top+tl):"left"===position?(borderValue=alignPixel(chart,me.right,axisWidth),tickStart=me.right-tl,tickEnd=borderValue-axisWidth/2):(borderValue=alignPixel(chart,me.left,axisWidth),tickStart=borderValue+axisWidth/2,tickEnd=me.left+tl);if(helpers$1.each(ticks,function(tick,index){if(!helpers$1.isNullOrUndef(tick.label)){var lineWidth,lineColor,borderDash,borderDashOffset,label=tick.label;index===me.zeroLineIndex&&options.offset===gridLines.offsetGridLines?(lineWidth=gridLines.zeroLineWidth,lineColor=gridLines.zeroLineColor,borderDash=gridLines.zeroLineBorderDash||[],borderDashOffset=gridLines.zeroLineBorderDashOffset||0):(lineWidth=valueAtIndexOrDefault(gridLines.lineWidth,index),lineColor=valueAtIndexOrDefault(gridLines.color,index),borderDash=gridLines.borderDash||[],borderDashOffset=gridLines.borderDashOffset||0);var tx1,ty1,tx2,ty2,x1,y1,x2,y2,labelX,labelY,textOffset,textAlign,labelCount=helpers$1.isArray(label)?label.length:1,lineValue=getPixelForGridLine(me,index,gridLines.offsetGridLines);if(isHorizontal){var labelYOffset=tl+tickPadding;lineValue<me.left-1e-7&&(lineColor="rgba(0,0,0,0)"),tx1=tx2=x1=x2=alignPixel(chart,lineValue,lineWidth),ty1=tickStart,ty2=tickEnd,labelX=me.getPixelForTick(index)+labelOffset,"top"===position?(y1=alignPixel(chart,chartArea.top,axisWidth)+axisWidth/2,y2=chartArea.bottom,textOffset=((isRotated?1:.5)-labelCount)*lineHeight,textAlign=isRotated?"left":"center",labelY=me.bottom-labelYOffset):(y1=chartArea.top,y2=alignPixel(chart,chartArea.bottom,axisWidth)-axisWidth/2,textOffset=(isRotated?0:.5)*lineHeight,textAlign=isRotated?"right":"center",labelY=me.top+labelYOffset)}else{var labelXOffset=(isMirrored?0:tl)+tickPadding;lineValue<me.top-1e-7&&(lineColor="rgba(0,0,0,0)"),tx1=tickStart,tx2=tickEnd,ty1=ty2=y1=y2=alignPixel(chart,lineValue,lineWidth),labelY=me.getPixelForTick(index)+labelOffset,textOffset=(1-labelCount)*lineHeight/2,"left"===position?(x1=alignPixel(chart,chartArea.left,axisWidth)+axisWidth/2,x2=chartArea.right,textAlign=isMirrored?"left":"right",labelX=me.right-labelXOffset):(x1=chartArea.left,x2=alignPixel(chart,chartArea.right,axisWidth)-axisWidth/2,textAlign=isMirrored?"right":"left",labelX=me.left+labelXOffset)}itemsToDraw.push({tx1:tx1,ty1:ty1,tx2:tx2,ty2:ty2,x1:x1,y1:y1,x2:x2,y2:y2,labelX:labelX,labelY:labelY,glWidth:lineWidth,glColor:lineColor,glBorderDash:borderDash,glBorderDashOffset:borderDashOffset,rotation:-1*labelRotationRadians,label:label,major:tick.major,textOffset:textOffset,textAlign:textAlign})}}),helpers$1.each(itemsToDraw,function(itemToDraw){var glWidth=itemToDraw.glWidth,glColor=itemToDraw.glColor;if(gridLines.display&&glWidth&&glColor&&(context.save(),context.lineWidth=glWidth,context.strokeStyle=glColor,context.setLineDash&&(context.setLineDash(itemToDraw.glBorderDash),context.lineDashOffset=itemToDraw.glBorderDashOffset),context.beginPath(),gridLines.drawTicks&&(context.moveTo(itemToDraw.tx1,itemToDraw.ty1),context.lineTo(itemToDraw.tx2,itemToDraw.ty2)),gridLines.drawOnChartArea&&(context.moveTo(itemToDraw.x1,itemToDraw.y1),context.lineTo(itemToDraw.x2,itemToDraw.y2)),context.stroke(),context.restore()),optionTicks.display){context.save(),context.translate(itemToDraw.labelX,itemToDraw.labelY),context.rotate(itemToDraw.rotation),context.font=itemToDraw.major?majorTickFont.string:tickFont.string,context.fillStyle=itemToDraw.major?majorTickFontColor:tickFontColor,context.textBaseline="middle",context.textAlign=itemToDraw.textAlign;var label=itemToDraw.label,y=itemToDraw.textOffset;if(helpers$1.isArray(label))for(var i=0;i<label.length;++i)context.fillText(""+label[i],0,y),y+=lineHeight;else context.fillText(label,0,y);context.restore()}}),scaleLabel.display){var scaleLabelX,scaleLabelY,rotation=0,halfLineHeight=scaleLabelFont.lineHeight/2;if(isHorizontal)scaleLabelX=me.left+(me.right-me.left)/2,scaleLabelY="bottom"===position?me.bottom-halfLineHeight-scaleLabelPadding.bottom:me.top+halfLineHeight+scaleLabelPadding.top;else{var isLeft="left"===position;scaleLabelX=isLeft?me.left+halfLineHeight+scaleLabelPadding.top:me.right-halfLineHeight-scaleLabelPadding.top,scaleLabelY=me.top+(me.bottom-me.top)/2,rotation=isLeft?-.5*Math.PI:.5*Math.PI}context.save(),context.translate(scaleLabelX,scaleLabelY),context.rotate(rotation),context.textAlign="center",context.textBaseline="middle",context.fillStyle=scaleLabelFontColor,context.font=scaleLabelFont.string,context.fillText(scaleLabel.labelString,0,0),context.restore()}if(axisWidth){var x1,x2,y1,y2,firstLineWidth=axisWidth,lastLineWidth=valueAtIndexOrDefault(gridLines.lineWidth,ticks.length-1,0);isHorizontal?(x1=alignPixel(chart,me.left,firstLineWidth)-firstLineWidth/2,x2=alignPixel(chart,me.right,lastLineWidth)+lastLineWidth/2,y1=y2=borderValue):(y1=alignPixel(chart,me.top,firstLineWidth)-firstLineWidth/2,y2=alignPixel(chart,me.bottom,lastLineWidth)+lastLineWidth/2,x1=x2=borderValue),context.lineWidth=axisWidth,context.strokeStyle=valueAtIndexOrDefault(gridLines.color,0),context.beginPath(),context.moveTo(x1,y1),context.lineTo(x2,y2),context.stroke()}}}}),defaultConfig={position:"bottom"},scale_category=core_scale.extend({getLabels:function(){var data=this.chart.data;return this.options.labels||(this.isHorizontal()?data.xLabels:data.yLabels)||data.labels},determineDataLimits:function(){var me=this,labels=me.getLabels();me.minIndex=0,me.maxIndex=labels.length-1;var findIndex;void 0!==me.options.ticks.min&&(findIndex=labels.indexOf(me.options.ticks.min),me.minIndex=-1!==findIndex?findIndex:me.minIndex),void 0!==me.options.ticks.max&&(findIndex=labels.indexOf(me.options.ticks.max),me.maxIndex=-1!==findIndex?findIndex:me.maxIndex),me.min=labels[me.minIndex],me.max=labels[me.maxIndex]},buildTicks:function(){var me=this,labels=me.getLabels();me.ticks=0===me.minIndex&&me.maxIndex===labels.length-1?labels:labels.slice(me.minIndex,me.maxIndex+1)},getLabelForIndex:function(index,datasetIndex){var me=this,chart=me.chart;return chart.getDatasetMeta(datasetIndex).controller._getValueScaleId()===me.id?me.getRightValue(chart.data.datasets[datasetIndex].data[index]):me.ticks[index-me.minIndex]},getPixelForValue:function(value,index){var valueCategory,me=this,offset=me.options.offset,offsetAmt=Math.max(me.maxIndex+1-me.minIndex-(offset?0:1),1);if(void 0!==value&&null!==value&&(valueCategory=me.isHorizontal()?value.x:value.y),void 0!==valueCategory||void 0!==value&&isNaN(index)){var labels=me.getLabels();value=valueCategory||value;var idx=labels.indexOf(value);index=-1!==idx?idx:index}if(me.isHorizontal()){var valueWidth=me.width/offsetAmt,widthOffset=valueWidth*(index-me.minIndex);return offset&&(widthOffset+=valueWidth/2),me.left+widthOffset}var valueHeight=me.height/offsetAmt,heightOffset=valueHeight*(index-me.minIndex);return offset&&(heightOffset+=valueHeight/2),me.top+heightOffset},getPixelForTick:function(index){return this.getPixelForValue(this.ticks[index],index+this.minIndex,null)},getValueForPixel:function(pixel){var me=this,offset=me.options.offset,offsetAmt=Math.max(me._ticks.length-(offset?0:1),1),horz=me.isHorizontal(),valueDimension=(horz?me.width:me.height)/offsetAmt;return pixel-=horz?me.left:me.top,offset&&(pixel-=valueDimension/2),(pixel<=0?0:Math.round(pixel/valueDimension))+me.minIndex},getBasePixel:function(){return this.bottom}}),_defaults=defaultConfig;scale_category._defaults=_defaults;var noop=helpers$1.noop,isNullOrUndef=helpers$1.isNullOrUndef,scale_linearbase=core_scale.extend({getRightValue:function(value){return"string"==typeof value?+value:core_scale.prototype.getRightValue.call(this,value)},handleTickRangeOptions:function(){var me=this,opts=me.options,tickOpts=opts.ticks;if(tickOpts.beginAtZero){var minSign=helpers$1.sign(me.min),maxSign=helpers$1.sign(me.max);minSign<0&&maxSign<0?me.max=0:minSign>0&&maxSign>0&&(me.min=0)}var setMin=void 0!==tickOpts.min||void 0!==tickOpts.suggestedMin,setMax=void 0!==tickOpts.max||void 0!==tickOpts.suggestedMax;void 0!==tickOpts.min?me.min=tickOpts.min:void 0!==tickOpts.suggestedMin&&(null===me.min?me.min=tickOpts.suggestedMin:me.min=Math.min(me.min,tickOpts.suggestedMin)),void 0!==tickOpts.max?me.max=tickOpts.max:void 0!==tickOpts.suggestedMax&&(null===me.max?me.max=tickOpts.suggestedMax:me.max=Math.max(me.max,tickOpts.suggestedMax)),setMin!==setMax&&me.min>=me.max&&(setMin?me.max=me.min+1:me.min=me.max-1),me.min===me.max&&(me.max++,tickOpts.beginAtZero||me.min--)},getTickLimit:function(){var maxTicks,me=this,tickOpts=me.options.ticks,stepSize=tickOpts.stepSize,maxTicksLimit=tickOpts.maxTicksLimit;return stepSize?maxTicks=Math.ceil(me.max/stepSize)-Math.floor(me.min/stepSize)+1:(maxTicks=me._computeTickLimit(),maxTicksLimit=maxTicksLimit||11),maxTicksLimit&&(maxTicks=Math.min(maxTicksLimit,maxTicks)),maxTicks},_computeTickLimit:function(){return Number.POSITIVE_INFINITY},handleDirectionalChanges:noop,buildTicks:function(){var me=this,opts=me.options,tickOpts=opts.ticks,maxTicks=me.getTickLimit();maxTicks=Math.max(2,maxTicks);var numericGeneratorOptions={maxTicks:maxTicks,min:tickOpts.min,max:tickOpts.max,precision:tickOpts.precision,stepSize:helpers$1.valueOrDefault(tickOpts.fixedStepSize,tickOpts.stepSize)},ticks=me.ticks=generateTicks(numericGeneratorOptions,me);me.handleDirectionalChanges(),me.max=helpers$1.max(ticks),me.min=helpers$1.min(ticks),tickOpts.reverse?(ticks.reverse(),me.start=me.max,me.end=me.min):(me.start=me.min,me.end=me.max)},convertTicksToLabels:function(){var me=this;me.ticksAsNumbers=me.ticks.slice(),me.zeroLineIndex=me.ticks.indexOf(0),core_scale.prototype.convertTicksToLabels.call(me)}}),defaultConfig$1={position:"left",ticks:{callback:core_ticks.formatters.linear}},scale_linear=scale_linearbase.extend({determineDataLimits:function(){function IDMatches(meta){return isHorizontal?meta.xAxisID===me.id:meta.yAxisID===me.id}var me=this,opts=me.options,chart=me.chart,data=chart.data,datasets=data.datasets,isHorizontal=me.isHorizontal();me.min=null,me.max=null;var hasStacks=opts.stacked;if(void 0===hasStacks&&helpers$1.each(datasets,function(dataset,datasetIndex){if(!hasStacks){var meta=chart.getDatasetMeta(datasetIndex);chart.isDatasetVisible(datasetIndex)&&IDMatches(meta)&&void 0!==meta.stack&&(hasStacks=!0)}}),opts.stacked||hasStacks){var valuesPerStack={};helpers$1.each(datasets,function(dataset,datasetIndex){var meta=chart.getDatasetMeta(datasetIndex),key=[meta.type,void 0===opts.stacked&&void 0===meta.stack?datasetIndex:"",meta.stack].join(".");void 0===valuesPerStack[key]&&(valuesPerStack[key]={positiveValues:[],negativeValues:[]});var positiveValues=valuesPerStack[key].positiveValues,negativeValues=valuesPerStack[key].negativeValues;chart.isDatasetVisible(datasetIndex)&&IDMatches(meta)&&helpers$1.each(dataset.data,function(rawValue,index){var value=+me.getRightValue(rawValue);isNaN(value)||meta.data[index].hidden||(positiveValues[index]=positiveValues[index]||0,negativeValues[index]=negativeValues[index]||0,opts.relativePoints?positiveValues[index]=100:value<0?negativeValues[index]+=value:positiveValues[index]+=value)})}),helpers$1.each(valuesPerStack,function(valuesForType){var values=valuesForType.positiveValues.concat(valuesForType.negativeValues),minVal=helpers$1.min(values),maxVal=helpers$1.max(values);me.min=null===me.min?minVal:Math.min(me.min,minVal),me.max=null===me.max?maxVal:Math.max(me.max,maxVal)})}else helpers$1.each(datasets,function(dataset,datasetIndex){var meta=chart.getDatasetMeta(datasetIndex);chart.isDatasetVisible(datasetIndex)&&IDMatches(meta)&&helpers$1.each(dataset.data,function(rawValue,index){var value=+me.getRightValue(rawValue);isNaN(value)||meta.data[index].hidden||(null===me.min?me.min=value:value<me.min&&(me.min=value),null===me.max?me.max=value:value>me.max&&(me.max=value))})});me.min=isFinite(me.min)&&!isNaN(me.min)?me.min:0,me.max=isFinite(me.max)&&!isNaN(me.max)?me.max:1,this.handleTickRangeOptions()},_computeTickLimit:function(){var tickFont,me=this;return me.isHorizontal()?Math.ceil(me.width/40):(tickFont=helpers$1.options._parseFont(me.options.ticks),Math.ceil(me.height/tickFont.lineHeight))},handleDirectionalChanges:function(){this.isHorizontal()||this.ticks.reverse()},getLabelForIndex:function(index,datasetIndex){return+this.getRightValue(this.chart.data.datasets[datasetIndex].data[index])},getPixelForValue:function(value){var me=this,start=me.start,rightValue=+me.getRightValue(value),range=me.end-start;return me.isHorizontal()?me.left+me.width/range*(rightValue-start):me.bottom-me.height/range*(rightValue-start)},getValueForPixel:function(pixel){var me=this,isHorizontal=me.isHorizontal(),innerDimension=isHorizontal?me.width:me.height,offset=(isHorizontal?pixel-me.left:me.bottom-pixel)/innerDimension;return me.start+(me.end-me.start)*offset},getPixelForTick:function(index){return this.getPixelForValue(this.ticksAsNumbers[index])}}),_defaults$1=defaultConfig$1;scale_linear._defaults=_defaults$1;var valueOrDefault$a=helpers$1.valueOrDefault,defaultConfig$2={position:"left",ticks:{callback:core_ticks.formatters.logarithmic}},scale_logarithmic=core_scale.extend({determineDataLimits:function(){function IDMatches(meta){return isHorizontal?meta.xAxisID===me.id:meta.yAxisID===me.id}var me=this,opts=me.options,chart=me.chart,data=chart.data,datasets=data.datasets,isHorizontal=me.isHorizontal();me.min=null,me.max=null,me.minNotZero=null;var hasStacks=opts.stacked;if(void 0===hasStacks&&helpers$1.each(datasets,function(dataset,datasetIndex){if(!hasStacks){var meta=chart.getDatasetMeta(datasetIndex);chart.isDatasetVisible(datasetIndex)&&IDMatches(meta)&&void 0!==meta.stack&&(hasStacks=!0)}}),opts.stacked||hasStacks){var valuesPerStack={};helpers$1.each(datasets,function(dataset,datasetIndex){var meta=chart.getDatasetMeta(datasetIndex),key=[meta.type,void 0===opts.stacked&&void 0===meta.stack?datasetIndex:"",meta.stack].join(".");chart.isDatasetVisible(datasetIndex)&&IDMatches(meta)&&(void 0===valuesPerStack[key]&&(valuesPerStack[key]=[]),helpers$1.each(dataset.data,function(rawValue,index){var values=valuesPerStack[key],value=+me.getRightValue(rawValue);isNaN(value)||meta.data[index].hidden||value<0||(values[index]=values[index]||0,values[index]+=value)}))}),helpers$1.each(valuesPerStack,function(valuesForType){if(valuesForType.length>0){var minVal=helpers$1.min(valuesForType),maxVal=helpers$1.max(valuesForType);me.min=null===me.min?minVal:Math.min(me.min,minVal),me.max=null===me.max?maxVal:Math.max(me.max,maxVal)}})}else helpers$1.each(datasets,function(dataset,datasetIndex){var meta=chart.getDatasetMeta(datasetIndex);chart.isDatasetVisible(datasetIndex)&&IDMatches(meta)&&helpers$1.each(dataset.data,function(rawValue,index){var value=+me.getRightValue(rawValue);isNaN(value)||meta.data[index].hidden||value<0||(null===me.min?me.min=value:value<me.min&&(me.min=value),null===me.max?me.max=value:value>me.max&&(me.max=value),0!==value&&(null===me.minNotZero||value<me.minNotZero)&&(me.minNotZero=value))})});this.handleTickRangeOptions()},handleTickRangeOptions:function(){var me=this,tickOpts=me.options.ticks;me.min=nonNegativeOrDefault(tickOpts.min,me.min),me.max=nonNegativeOrDefault(tickOpts.max,me.max),me.min===me.max&&(0!==me.min&&null!==me.min?(me.min=Math.pow(10,Math.floor(helpers$1.log10(me.min))-1),me.max=Math.pow(10,Math.floor(helpers$1.log10(me.max))+1)):(me.min=1,me.max=10)),null===me.min&&(me.min=Math.pow(10,Math.floor(helpers$1.log10(me.max))-1)),null===me.max&&(me.max=0!==me.min?Math.pow(10,Math.floor(helpers$1.log10(me.min))+1):10),null===me.minNotZero&&(me.min>0?me.minNotZero=me.min:me.max<1?me.minNotZero=Math.pow(10,Math.floor(helpers$1.log10(me.max))):me.minNotZero=1)},buildTicks:function(){var me=this,tickOpts=me.options.ticks,reverse=!me.isHorizontal(),generationOptions={min:nonNegativeOrDefault(tickOpts.min),max:nonNegativeOrDefault(tickOpts.max)},ticks=me.ticks=generateTicks$1(generationOptions,me);me.max=helpers$1.max(ticks),me.min=helpers$1.min(ticks),tickOpts.reverse?(reverse=!reverse,me.start=me.max,me.end=me.min):(me.start=me.min,me.end=me.max),reverse&&ticks.reverse()},convertTicksToLabels:function(){this.tickValues=this.ticks.slice(),core_scale.prototype.convertTicksToLabels.call(this)},getLabelForIndex:function(index,datasetIndex){return+this.getRightValue(this.chart.data.datasets[datasetIndex].data[index])},getPixelForTick:function(index){return this.getPixelForValue(this.tickValues[index])},_getFirstTickValue:function(value){var exp=Math.floor(helpers$1.log10(value));return Math.floor(value/Math.pow(10,exp))*Math.pow(10,exp)},getPixelForValue:function(value){var innerDimension,pixel,start,end,sign,me=this,tickOpts=me.options.ticks,reverse=tickOpts.reverse,log10=helpers$1.log10,firstTickValue=me._getFirstTickValue(me.minNotZero),offset=0;return value=+me.getRightValue(value),reverse?(start=me.end,end=me.start,sign=-1):(start=me.start,end=me.end,sign=1),me.isHorizontal()?(innerDimension=me.width,
pixel=reverse?me.right:me.left):(innerDimension=me.height,sign*=-1,pixel=reverse?me.top:me.bottom),value!==start&&(0===start&&(offset=valueOrDefault$a(tickOpts.fontSize,core_defaults.global.defaultFontSize),innerDimension-=offset,start=firstTickValue),0!==value&&(offset+=innerDimension/(log10(end)-log10(start))*(log10(value)-log10(start))),pixel+=sign*offset),pixel},getValueForPixel:function(pixel){var innerDimension,start,end,value,me=this,tickOpts=me.options.ticks,reverse=tickOpts.reverse,log10=helpers$1.log10,firstTickValue=me._getFirstTickValue(me.minNotZero);if(reverse?(start=me.end,end=me.start):(start=me.start,end=me.end),me.isHorizontal()?(innerDimension=me.width,value=reverse?me.right-pixel:pixel-me.left):(innerDimension=me.height,value=reverse?pixel-me.top:me.bottom-pixel),value!==start){if(0===start){var offset=valueOrDefault$a(tickOpts.fontSize,core_defaults.global.defaultFontSize);value-=offset,innerDimension-=offset,start=firstTickValue}value*=log10(end)-log10(start),value/=innerDimension,value=Math.pow(10,log10(start)+value)}return value}}),_defaults$2=defaultConfig$2;scale_logarithmic._defaults=_defaults$2;var valueOrDefault$b=helpers$1.valueOrDefault,valueAtIndexOrDefault$1=helpers$1.valueAtIndexOrDefault,resolve$7=helpers$1.options.resolve,defaultConfig$3={display:!0,animate:!0,position:"chartArea",angleLines:{display:!0,color:"rgba(0, 0, 0, 0.1)",lineWidth:1,borderDash:[],borderDashOffset:0},gridLines:{circular:!1},ticks:{showLabelBackdrop:!0,backdropColor:"rgba(255,255,255,0.75)",backdropPaddingY:2,backdropPaddingX:2,callback:core_ticks.formatters.linear},pointLabels:{display:!0,fontSize:10,callback:function(label){return label}}},scale_radialLinear=scale_linearbase.extend({setDimensions:function(){var me=this;me.width=me.maxWidth,me.height=me.maxHeight,me.paddingTop=getTickBackdropHeight(me.options)/2,me.xCenter=Math.floor(me.width/2),me.yCenter=Math.floor((me.height-me.paddingTop)/2),me.drawingArea=Math.min(me.height-me.paddingTop,me.width)/2},determineDataLimits:function(){var me=this,chart=me.chart,min=Number.POSITIVE_INFINITY,max=Number.NEGATIVE_INFINITY;helpers$1.each(chart.data.datasets,function(dataset,datasetIndex){if(chart.isDatasetVisible(datasetIndex)){var meta=chart.getDatasetMeta(datasetIndex);helpers$1.each(dataset.data,function(rawValue,index){var value=+me.getRightValue(rawValue);isNaN(value)||meta.data[index].hidden||(min=Math.min(value,min),max=Math.max(value,max))})}}),me.min=min===Number.POSITIVE_INFINITY?0:min,me.max=max===Number.NEGATIVE_INFINITY?0:max,me.handleTickRangeOptions()},_computeTickLimit:function(){return Math.ceil(this.drawingArea/getTickBackdropHeight(this.options))},convertTicksToLabels:function(){var me=this;scale_linearbase.prototype.convertTicksToLabels.call(me),me.pointLabels=me.chart.data.labels.map(me.options.pointLabels.callback,me)},getLabelForIndex:function(index,datasetIndex){return+this.getRightValue(this.chart.data.datasets[datasetIndex].data[index])},fit:function(){var me=this,opts=me.options;opts.display&&opts.pointLabels.display?fitWithPointLabels(me):me.setCenterPoint(0,0,0,0)},setReductions:function(largestPossibleRadius,furthestLimits,furthestAngles){var me=this,radiusReductionLeft=furthestLimits.l/Math.sin(furthestAngles.l),radiusReductionRight=Math.max(furthestLimits.r-me.width,0)/Math.sin(furthestAngles.r),radiusReductionTop=-furthestLimits.t/Math.cos(furthestAngles.t),radiusReductionBottom=-Math.max(furthestLimits.b-(me.height-me.paddingTop),0)/Math.cos(furthestAngles.b);radiusReductionLeft=numberOrZero(radiusReductionLeft),radiusReductionRight=numberOrZero(radiusReductionRight),radiusReductionTop=numberOrZero(radiusReductionTop),radiusReductionBottom=numberOrZero(radiusReductionBottom),me.drawingArea=Math.min(Math.floor(largestPossibleRadius-(radiusReductionLeft+radiusReductionRight)/2),Math.floor(largestPossibleRadius-(radiusReductionTop+radiusReductionBottom)/2)),me.setCenterPoint(radiusReductionLeft,radiusReductionRight,radiusReductionTop,radiusReductionBottom)},setCenterPoint:function(leftMovement,rightMovement,topMovement,bottomMovement){var me=this,maxRight=me.width-rightMovement-me.drawingArea,maxLeft=leftMovement+me.drawingArea,maxTop=topMovement+me.drawingArea,maxBottom=me.height-me.paddingTop-bottomMovement-me.drawingArea;me.xCenter=Math.floor((maxLeft+maxRight)/2+me.left),me.yCenter=Math.floor((maxTop+maxBottom)/2+me.top+me.paddingTop)},getIndexAngle:function(index){return index*(2*Math.PI/getValueCount(this))+(this.chart.options&&this.chart.options.startAngle?this.chart.options.startAngle:0)*Math.PI*2/360},getDistanceFromCenterForValue:function(value){var me=this;if(null===value)return 0;var scalingFactor=me.drawingArea/(me.max-me.min);return me.options.ticks.reverse?(me.max-value)*scalingFactor:(value-me.min)*scalingFactor},getPointPosition:function(index,distanceFromCenter){var me=this,thisAngle=me.getIndexAngle(index)-Math.PI/2;return{x:Math.cos(thisAngle)*distanceFromCenter+me.xCenter,y:Math.sin(thisAngle)*distanceFromCenter+me.yCenter}},getPointPositionForValue:function(index,value){return this.getPointPosition(index,this.getDistanceFromCenterForValue(value))},getBasePosition:function(){var me=this,min=me.min,max=me.max;return me.getPointPositionForValue(0,me.beginAtZero?0:min<0&&max<0?max:min>0&&max>0?min:0)},draw:function(){var me=this,opts=me.options,gridLineOpts=opts.gridLines,tickOpts=opts.ticks;if(opts.display){var ctx=me.ctx,startAngle=this.getIndexAngle(0),tickFont=helpers$1.options._parseFont(tickOpts);(opts.angleLines.display||opts.pointLabels.display)&&drawPointLabels(me),helpers$1.each(me.ticks,function(label,index){if(index>0||tickOpts.reverse){var yCenterOffset=me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);if(gridLineOpts.display&&0!==index&&drawRadiusLine(me,gridLineOpts,yCenterOffset,index),tickOpts.display){var tickFontColor=valueOrDefault$b(tickOpts.fontColor,core_defaults.global.defaultFontColor);if(ctx.font=tickFont.string,ctx.save(),ctx.translate(me.xCenter,me.yCenter),ctx.rotate(startAngle),tickOpts.showLabelBackdrop){var labelWidth=ctx.measureText(label).width;ctx.fillStyle=tickOpts.backdropColor,ctx.fillRect(-labelWidth/2-tickOpts.backdropPaddingX,-yCenterOffset-tickFont.size/2-tickOpts.backdropPaddingY,labelWidth+2*tickOpts.backdropPaddingX,tickFont.size+2*tickOpts.backdropPaddingY)}ctx.textAlign="center",ctx.textBaseline="middle",ctx.fillStyle=tickFontColor,ctx.fillText(label,0,-yCenterOffset),ctx.restore()}}})}}}),_defaults$3=defaultConfig$3;scale_radialLinear._defaults=_defaults$3;var valueOrDefault$c=helpers$1.valueOrDefault,MIN_INTEGER=Number.MIN_SAFE_INTEGER||-9007199254740991,MAX_INTEGER=Number.MAX_SAFE_INTEGER||9007199254740991,INTERVALS={millisecond:{common:!0,size:1,steps:[1,2,5,10,20,50,100,250,500]},second:{common:!0,size:1e3,steps:[1,2,5,10,15,30]},minute:{common:!0,size:6e4,steps:[1,2,5,10,15,30]},hour:{common:!0,size:36e5,steps:[1,2,3,6,12]},day:{common:!0,size:864e5,steps:[1,2,5]},week:{common:!1,size:6048e5,steps:[1,2,3,4]},month:{common:!0,size:2628e6,steps:[1,2,3]},quarter:{common:!1,size:7884e6,steps:[1,2,3,4]},year:{common:!0,size:3154e7}},UNITS=Object.keys(INTERVALS),defaultConfig$4={position:"bottom",distribution:"linear",bounds:"data",adapters:{},time:{parser:!1,format:!1,unit:!1,round:!1,displayFormat:!1,isoWeekday:!1,minUnit:"millisecond",displayFormats:{}},ticks:{autoSkip:!1,source:"auto",major:{enabled:!1}}},scale_time=core_scale.extend({initialize:function(){this.mergeTicksOptions(),core_scale.prototype.initialize.call(this)},update:function(){var me=this,options=me.options,time=options.time||(options.time={}),adapter=me._adapter=new core_adapters._date(options.adapters.date);return time.format&&console.warn("options.time.format is deprecated and replaced by options.time.parser."),helpers$1.mergeIf(time.displayFormats,adapter.formats()),core_scale.prototype.update.apply(me,arguments)},getRightValue:function(rawValue){return rawValue&&void 0!==rawValue.t&&(rawValue=rawValue.t),core_scale.prototype.getRightValue.call(this,rawValue)},determineDataLimits:function(){var i,j,ilen,jlen,data,timestamp,me=this,chart=me.chart,adapter=me._adapter,timeOpts=me.options.time,unit=timeOpts.unit||"day",min=MAX_INTEGER,max=MIN_INTEGER,timestamps=[],datasets=[],labels=[],dataLabels=chart.data.labels||[];for(i=0,ilen=dataLabels.length;i<ilen;++i)labels.push(parse(me,dataLabels[i]));for(i=0,ilen=(chart.data.datasets||[]).length;i<ilen;++i)if(chart.isDatasetVisible(i))if(data=chart.data.datasets[i].data,helpers$1.isObject(data[0]))for(datasets[i]=[],j=0,jlen=data.length;j<jlen;++j)timestamp=parse(me,data[j]),timestamps.push(timestamp),datasets[i][j]=timestamp;else{for(j=0,jlen=labels.length;j<jlen;++j)timestamps.push(labels[j]);datasets[i]=labels.slice(0)}else datasets[i]=[];labels.length&&(labels=arrayUnique(labels).sort(sorter),min=Math.min(min,labels[0]),max=Math.max(max,labels[labels.length-1])),timestamps.length&&(timestamps=arrayUnique(timestamps).sort(sorter),min=Math.min(min,timestamps[0]),max=Math.max(max,timestamps[timestamps.length-1])),min=parse(me,timeOpts.min)||min,max=parse(me,timeOpts.max)||max,min=min===MAX_INTEGER?+adapter.startOf(Date.now(),unit):min,max=max===MIN_INTEGER?+adapter.endOf(Date.now(),unit)+1:max,me.min=Math.min(min,max),me.max=Math.max(min+1,max),me._horizontal=me.isHorizontal(),me._table=[],me._timestamps={data:timestamps,datasets:datasets,labels:labels}},buildTicks:function(){var i,ilen,timestamp,me=this,min=me.min,max=me.max,options=me.options,timeOpts=options.time,timestamps=[],ticks=[];switch(options.ticks.source){case"data":timestamps=me._timestamps.data;break;case"labels":timestamps=me._timestamps.labels;break;case"auto":default:timestamps=generate(me,min,max,me.getLabelCapacity(min))}for("ticks"===options.bounds&&timestamps.length&&(min=timestamps[0],max=timestamps[timestamps.length-1]),min=parse(me,timeOpts.min)||min,max=parse(me,timeOpts.max)||max,i=0,ilen=timestamps.length;i<ilen;++i)(timestamp=timestamps[i])>=min&&timestamp<=max&&ticks.push(timestamp);return me.min=min,me.max=max,me._unit=timeOpts.unit||determineUnitForFormatting(me,ticks,timeOpts.minUnit,me.min,me.max),me._majorUnit=determineMajorUnit(me._unit),me._table=buildLookupTable(me._timestamps.data,min,max,options.distribution),me._offsets=computeOffsets(me._table,ticks,min,max,options),options.ticks.reverse&&ticks.reverse(),ticksFromTimestamps(me,ticks,me._majorUnit)},getLabelForIndex:function(index,datasetIndex){var me=this,adapter=me._adapter,data=me.chart.data,timeOpts=me.options.time,label=data.labels&&index<data.labels.length?data.labels[index]:"",value=data.datasets[datasetIndex].data[index];return helpers$1.isObject(value)&&(label=me.getRightValue(value)),timeOpts.tooltipFormat?adapter.format(toTimestamp(me,label),timeOpts.tooltipFormat):"string"==typeof label?label:adapter.format(toTimestamp(me,label),timeOpts.displayFormats.datetime)},tickFormatFunction:function(time,index,ticks,format){var me=this,adapter=me._adapter,options=me.options,formats=options.time.displayFormats,minorFormat=formats[me._unit],majorUnit=me._majorUnit,majorFormat=formats[majorUnit],majorTime=+adapter.startOf(time,majorUnit),majorTickOpts=options.ticks.major,major=majorTickOpts.enabled&&majorUnit&&majorFormat&&time===majorTime,label=adapter.format(time,format||(major?majorFormat:minorFormat)),tickOpts=major?majorTickOpts:options.ticks.minor,formatter=valueOrDefault$c(tickOpts.callback,tickOpts.userCallback);return formatter?formatter(label,index,ticks):label},convertTicksToLabels:function(ticks){var i,ilen,labels=[];for(i=0,ilen=ticks.length;i<ilen;++i)labels.push(this.tickFormatFunction(ticks[i].value,i,ticks));return labels},getPixelForOffset:function(time){var me=this,isReverse=me.options.ticks.reverse,size=me._horizontal?me.width:me.height,start=me._horizontal?isReverse?me.right:me.left:isReverse?me.bottom:me.top,pos=interpolate$1(me._table,"time",time,"pos"),offset=size*(me._offsets.start+pos)/(me._offsets.start+1+me._offsets.end);return isReverse?start-offset:start+offset},getPixelForValue:function(value,index,datasetIndex){var me=this,time=null;if(void 0!==index&&void 0!==datasetIndex&&(time=me._timestamps.datasets[datasetIndex][index]),null===time&&(time=parse(me,value)),null!==time)return me.getPixelForOffset(time)},getPixelForTick:function(index){var ticks=this.getTicks();return index>=0&&index<ticks.length?this.getPixelForOffset(ticks[index].value):null},getValueForPixel:function(pixel){var me=this,size=me._horizontal?me.width:me.height,start=me._horizontal?me.left:me.top,pos=(size?(pixel-start)/size:0)*(me._offsets.start+1+me._offsets.start)-me._offsets.end,time=interpolate$1(me._table,"pos",pos,"time");return me._adapter._create(time)},getLabelWidth:function(label){var me=this,ticksOpts=me.options.ticks,tickLabelWidth=me.ctx.measureText(label).width,angle=helpers$1.toRadians(ticksOpts.maxRotation),cosRotation=Math.cos(angle),sinRotation=Math.sin(angle);return tickLabelWidth*cosRotation+valueOrDefault$c(ticksOpts.fontSize,core_defaults.global.defaultFontSize)*sinRotation},getLabelCapacity:function(exampleTime){var me=this,format=me.options.time.displayFormats.millisecond,exampleLabel=me.tickFormatFunction(exampleTime,0,[],format),tickLabelWidth=me.getLabelWidth(exampleLabel),innerWidth=me.isHorizontal()?me.width:me.height,capacity=Math.floor(innerWidth/tickLabelWidth);return capacity>0?capacity:1}}),_defaults$4=defaultConfig$4;scale_time._defaults=_defaults$4;var scales={category:scale_category,linear:scale_linear,logarithmic:scale_logarithmic,radialLinear:scale_radialLinear,time:scale_time},FORMATS={datetime:"MMM D, YYYY, h:mm:ss a",millisecond:"h:mm:ss.SSS a",second:"h:mm:ss a",minute:"h:mm a",hour:"hA",day:"MMM D",week:"ll",month:"MMM YYYY",quarter:"[Q]Q - YYYY",year:"YYYY"};core_adapters._date.override("function"==typeof moment?{_id:"moment",formats:function(){return FORMATS},parse:function(value,format){return"string"==typeof value&&"string"==typeof format?value=moment(value,format):value instanceof moment||(value=moment(value)),value.isValid()?value.valueOf():null},format:function(time,format){return moment(time).format(format)},add:function(time,amount,unit){return moment(time).add(amount,unit).valueOf()},diff:function(max,min,unit){return moment.duration(moment(max).diff(moment(min))).as(unit)},startOf:function(time,unit,weekday){return time=moment(time),"isoWeek"===unit?time.isoWeekday(weekday).valueOf():time.startOf(unit).valueOf()},endOf:function(time,unit){return moment(time).endOf(unit).valueOf()},_create:function(time){return moment(time)}}:{}),core_defaults._set("global",{plugins:{filler:{propagate:!0}}});var mappers={dataset:function(source){var index=source.fill,chart=source.chart,meta=chart.getDatasetMeta(index),visible=meta&&chart.isDatasetVisible(index),points=visible&&meta.dataset._children||[],length=points.length||0;return length?function(point,i){return i<length&&points[i]._view||null}:null},boundary:function(source){var boundary=source.boundary,x=boundary?boundary.x:null,y=boundary?boundary.y:null;return function(point){return{x:null===x?point.x:x,y:null===y?point.y:y}}}},plugin_filler={id:"filler",afterDatasetsUpdate:function(chart,options){var meta,i,el,source,count=(chart.data.datasets||[]).length,propagate=options.propagate,sources=[];for(i=0;i<count;++i)meta=chart.getDatasetMeta(i),el=meta.dataset,source=null,el&&el._model&&el instanceof elements.Line&&(source={visible:chart.isDatasetVisible(i),fill:decodeFill(el,i,count),chart:chart,el:el}),meta.$filler=source,sources.push(source);for(i=0;i<count;++i)(source=sources[i])&&(source.fill=resolveTarget(sources,i,propagate),source.boundary=computeBoundary(source),source.mapper=createMapper(source))},beforeDatasetDraw:function(chart,args){var meta=args.meta.$filler;if(meta){var ctx=chart.ctx,el=meta.el,view=el._view,points=el._children||[],mapper=meta.mapper,color=view.backgroundColor||core_defaults.global.defaultColor;mapper&&color&&points.length&&(helpers$1.canvas.clipArea(ctx,chart.chartArea),doFill(ctx,points,mapper,view,color,el._loop),helpers$1.canvas.unclipArea(ctx))}}},noop$1=helpers$1.noop,valueOrDefault$d=helpers$1.valueOrDefault;core_defaults._set("global",{legend:{display:!0,position:"top",fullWidth:!0,reverse:!1,weight:1e3,onClick:function(e,legendItem){var index=legendItem.datasetIndex,ci=this.chart,meta=ci.getDatasetMeta(index);meta.hidden=null===meta.hidden?!ci.data.datasets[index].hidden:null,ci.update()},onHover:null,onLeave:null,labels:{boxWidth:40,padding:10,generateLabels:function(chart){var data=chart.data;return helpers$1.isArray(data.datasets)?data.datasets.map(function(dataset,i){return{text:dataset.label,fillStyle:helpers$1.isArray(dataset.backgroundColor)?dataset.backgroundColor[0]:dataset.backgroundColor,hidden:!chart.isDatasetVisible(i),lineCap:dataset.borderCapStyle,lineDash:dataset.borderDash,lineDashOffset:dataset.borderDashOffset,lineJoin:dataset.borderJoinStyle,lineWidth:dataset.borderWidth,strokeStyle:dataset.borderColor,pointStyle:dataset.pointStyle,datasetIndex:i}},this):[]}}},legendCallback:function(chart){var text=[];text.push('<ul class="'+chart.id+'-legend">');for(var i=0;i<chart.data.datasets.length;i++)text.push('<li><span style="background-color:'+chart.data.datasets[i].backgroundColor+'"></span>'),chart.data.datasets[i].label&&text.push(chart.data.datasets[i].label),text.push("</li>");return text.push("</ul>"),text.join("")}});var Legend=core_element.extend({initialize:function(config){helpers$1.extend(this,config),this.legendHitBoxes=[],this._hoveredItem=null,this.doughnutMode=!1},beforeUpdate:noop$1,update:function(maxWidth,maxHeight,margins){var me=this;return me.beforeUpdate(),me.maxWidth=maxWidth,me.maxHeight=maxHeight,me.margins=margins,me.beforeSetDimensions(),me.setDimensions(),me.afterSetDimensions(),me.beforeBuildLabels(),me.buildLabels(),me.afterBuildLabels(),me.beforeFit(),me.fit(),me.afterFit(),me.afterUpdate(),me.minSize},afterUpdate:noop$1,beforeSetDimensions:noop$1,setDimensions:function(){var me=this;me.isHorizontal()?(me.width=me.maxWidth,me.left=0,me.right=me.width):(me.height=me.maxHeight,me.top=0,me.bottom=me.height),me.paddingLeft=0,me.paddingTop=0,me.paddingRight=0,me.paddingBottom=0,me.minSize={width:0,height:0}},afterSetDimensions:noop$1,beforeBuildLabels:noop$1,buildLabels:function(){var me=this,labelOpts=me.options.labels||{},legendItems=helpers$1.callback(labelOpts.generateLabels,[me.chart],me)||[];labelOpts.filter&&(legendItems=legendItems.filter(function(item){return labelOpts.filter(item,me.chart.data)})),me.options.reverse&&legendItems.reverse(),me.legendItems=legendItems},afterBuildLabels:noop$1,beforeFit:noop$1,fit:function(){var me=this,opts=me.options,labelOpts=opts.labels,display=opts.display,ctx=me.ctx,labelFont=helpers$1.options._parseFont(labelOpts),fontSize=labelFont.size,hitboxes=me.legendHitBoxes=[],minSize=me.minSize,isHorizontal=me.isHorizontal();if(isHorizontal?(minSize.width=me.maxWidth,minSize.height=display?10:0):(minSize.width=display?10:0,minSize.height=me.maxHeight),display)if(ctx.font=labelFont.string,isHorizontal){var lineWidths=me.lineWidths=[0],totalHeight=0;ctx.textAlign="left",ctx.textBaseline="top",helpers$1.each(me.legendItems,function(legendItem,i){var boxWidth=getBoxWidth(labelOpts,fontSize),width=boxWidth+fontSize/2+ctx.measureText(legendItem.text).width;(0===i||lineWidths[lineWidths.length-1]+width+labelOpts.padding>minSize.width)&&(totalHeight+=fontSize+labelOpts.padding,lineWidths[lineWidths.length-(i>0?0:1)]=labelOpts.padding),hitboxes[i]={left:0,top:0,width:width,height:fontSize},lineWidths[lineWidths.length-1]+=width+labelOpts.padding}),minSize.height+=totalHeight}else{var vPadding=labelOpts.padding,columnWidths=me.columnWidths=[],totalWidth=labelOpts.padding,currentColWidth=0,currentColHeight=0,itemHeight=fontSize+vPadding;helpers$1.each(me.legendItems,function(legendItem,i){var boxWidth=getBoxWidth(labelOpts,fontSize),itemWidth=boxWidth+fontSize/2+ctx.measureText(legendItem.text).width;i>0&&currentColHeight+itemHeight>minSize.height-vPadding&&(totalWidth+=currentColWidth+labelOpts.padding,columnWidths.push(currentColWidth),currentColWidth=0,currentColHeight=0),currentColWidth=Math.max(currentColWidth,itemWidth),currentColHeight+=itemHeight,hitboxes[i]={left:0,top:0,width:itemWidth,height:fontSize}}),totalWidth+=currentColWidth,columnWidths.push(currentColWidth),minSize.width+=totalWidth}me.width=minSize.width,me.height=minSize.height},afterFit:noop$1,isHorizontal:function(){return"top"===this.options.position||"bottom"===this.options.position},draw:function(){var me=this,opts=me.options,labelOpts=opts.labels,globalDefaults=core_defaults.global,defaultColor=globalDefaults.defaultColor,lineDefault=globalDefaults.elements.line,legendWidth=me.width,lineWidths=me.lineWidths;if(opts.display){var cursor,ctx=me.ctx,fontColor=valueOrDefault$d(labelOpts.fontColor,globalDefaults.defaultFontColor),labelFont=helpers$1.options._parseFont(labelOpts),fontSize=labelFont.size;ctx.textAlign="left",ctx.textBaseline="middle",ctx.lineWidth=.5,ctx.strokeStyle=fontColor,ctx.fillStyle=fontColor,ctx.font=labelFont.string;var boxWidth=getBoxWidth(labelOpts,fontSize),hitboxes=me.legendHitBoxes,drawLegendBox=function(x,y,legendItem){if(!(isNaN(boxWidth)||boxWidth<=0)){ctx.save();var lineWidth=valueOrDefault$d(legendItem.lineWidth,lineDefault.borderWidth);if(ctx.fillStyle=valueOrDefault$d(legendItem.fillStyle,defaultColor),ctx.lineCap=valueOrDefault$d(legendItem.lineCap,lineDefault.borderCapStyle),ctx.lineDashOffset=valueOrDefault$d(legendItem.lineDashOffset,lineDefault.borderDashOffset),ctx.lineJoin=valueOrDefault$d(legendItem.lineJoin,lineDefault.borderJoinStyle),ctx.lineWidth=lineWidth,ctx.strokeStyle=valueOrDefault$d(legendItem.strokeStyle,defaultColor),ctx.setLineDash&&ctx.setLineDash(valueOrDefault$d(legendItem.lineDash,lineDefault.borderDash)),opts.labels&&opts.labels.usePointStyle){var radius=boxWidth*Math.SQRT2/2,centerX=x+boxWidth/2,centerY=y+fontSize/2;helpers$1.canvas.drawPoint(ctx,legendItem.pointStyle,radius,centerX,centerY)}else 0!==lineWidth&&ctx.strokeRect(x,y,boxWidth,fontSize),ctx.fillRect(x,y,boxWidth,fontSize);ctx.restore()}},fillText=function(x,y,legendItem,textWidth){var halfFontSize=fontSize/2,xLeft=boxWidth+halfFontSize+x,yMiddle=y+halfFontSize;ctx.fillText(legendItem.text,xLeft,yMiddle),legendItem.hidden&&(ctx.beginPath(),ctx.lineWidth=2,ctx.moveTo(xLeft,yMiddle),ctx.lineTo(xLeft+textWidth,yMiddle),ctx.stroke())},isHorizontal=me.isHorizontal();cursor=isHorizontal?{x:me.left+(legendWidth-lineWidths[0])/2+labelOpts.padding,y:me.top+labelOpts.padding,line:0}:{x:me.left+labelOpts.padding,y:me.top+labelOpts.padding,line:0};var itemHeight=fontSize+labelOpts.padding;helpers$1.each(me.legendItems,function(legendItem,i){var textWidth=ctx.measureText(legendItem.text).width,width=boxWidth+fontSize/2+textWidth,x=cursor.x,y=cursor.y;isHorizontal?i>0&&x+width+labelOpts.padding>me.left+me.minSize.width&&(y=cursor.y+=itemHeight,cursor.line++,x=cursor.x=me.left+(legendWidth-lineWidths[cursor.line])/2+labelOpts.padding):i>0&&y+itemHeight>me.top+me.minSize.height&&(x=cursor.x=x+me.columnWidths[cursor.line]+labelOpts.padding,y=cursor.y=me.top+labelOpts.padding,cursor.line++),drawLegendBox(x,y,legendItem),hitboxes[i].left=x,hitboxes[i].top=y,fillText(x,y,legendItem,textWidth),isHorizontal?cursor.x+=width+labelOpts.padding:cursor.y+=itemHeight})}},_getLegendItemAt:function(x,y){var i,hitBox,lh,me=this;if(x>=me.left&&x<=me.right&&y>=me.top&&y<=me.bottom)for(lh=me.legendHitBoxes,i=0;i<lh.length;++i)if(hitBox=lh[i],x>=hitBox.left&&x<=hitBox.left+hitBox.width&&y>=hitBox.top&&y<=hitBox.top+hitBox.height)return me.legendItems[i];return null},handleEvent:function(e){var hoveredItem,me=this,opts=me.options,type="mouseup"===e.type?"click":e.type;if("mousemove"===type){if(!opts.onHover&&!opts.onLeave)return}else{if("click"!==type)return;if(!opts.onClick)return}hoveredItem=me._getLegendItemAt(e.x,e.y),"click"===type?hoveredItem&&opts.onClick&&opts.onClick.call(me,e.native,hoveredItem):(opts.onLeave&&hoveredItem!==me._hoveredItem&&(me._hoveredItem&&opts.onLeave.call(me,e.native,me._hoveredItem),me._hoveredItem=hoveredItem),opts.onHover&&hoveredItem&&opts.onHover.call(me,e.native,hoveredItem))}}),plugin_legend={id:"legend",_element:Legend,beforeInit:function(chart){var legendOpts=chart.options.legend;legendOpts&&createNewLegendAndAttach(chart,legendOpts)},beforeUpdate:function(chart){var legendOpts=chart.options.legend,legend=chart.legend;legendOpts?(helpers$1.mergeIf(legendOpts,core_defaults.global.legend),legend?(core_layouts.configure(chart,legend,legendOpts),legend.options=legendOpts):createNewLegendAndAttach(chart,legendOpts)):legend&&(core_layouts.removeBox(chart,legend),delete chart.legend)},afterEvent:function(chart,e){var legend=chart.legend;legend&&legend.handleEvent(e)}},noop$2=helpers$1.noop;core_defaults._set("global",{title:{display:!1,fontStyle:"bold",fullWidth:!0,padding:10,position:"top",text:"",weight:2e3}});var Title=core_element.extend({initialize:function(config){var me=this;helpers$1.extend(me,config),me.legendHitBoxes=[]},beforeUpdate:noop$2,update:function(maxWidth,maxHeight,margins){var me=this;return me.beforeUpdate(),me.maxWidth=maxWidth,me.maxHeight=maxHeight,me.margins=margins,me.beforeSetDimensions(),me.setDimensions(),me.afterSetDimensions(),me.beforeBuildLabels(),me.buildLabels(),me.afterBuildLabels(),me.beforeFit(),me.fit(),me.afterFit(),me.afterUpdate(),me.minSize},afterUpdate:noop$2,beforeSetDimensions:noop$2,setDimensions:function(){var me=this;me.isHorizontal()?(me.width=me.maxWidth,me.left=0,me.right=me.width):(me.height=me.maxHeight,me.top=0,me.bottom=me.height),me.paddingLeft=0,me.paddingTop=0,me.paddingRight=0,me.paddingBottom=0,me.minSize={width:0,height:0}},afterSetDimensions:noop$2,beforeBuildLabels:noop$2,buildLabels:noop$2,afterBuildLabels:noop$2,beforeFit:noop$2,fit:function(){var me=this,opts=me.options,display=opts.display,minSize=me.minSize,lineCount=helpers$1.isArray(opts.text)?opts.text.length:1,fontOpts=helpers$1.options._parseFont(opts),textSize=display?lineCount*fontOpts.lineHeight+2*opts.padding:0;me.isHorizontal()?(minSize.width=me.maxWidth,minSize.height=textSize):(minSize.width=textSize,minSize.height=me.maxHeight),me.width=minSize.width,me.height=minSize.height},afterFit:noop$2,isHorizontal:function(){var pos=this.options.position;return"top"===pos||"bottom"===pos},draw:function(){var me=this,ctx=me.ctx,opts=me.options;if(opts.display){var maxWidth,titleX,titleY,fontOpts=helpers$1.options._parseFont(opts),lineHeight=fontOpts.lineHeight,offset=lineHeight/2+opts.padding,rotation=0,top=me.top,left=me.left,bottom=me.bottom,right=me.right;ctx.fillStyle=helpers$1.valueOrDefault(opts.fontColor,core_defaults.global.defaultFontColor),ctx.font=fontOpts.string,me.isHorizontal()?(titleX=left+(right-left)/2,titleY=top+offset,maxWidth=right-left):(titleX="left"===opts.position?left+offset:right-offset,titleY=top+(bottom-top)/2,maxWidth=bottom-top,rotation=Math.PI*("left"===opts.position?-.5:.5)),ctx.save(),ctx.translate(titleX,titleY),ctx.rotate(rotation),ctx.textAlign="center",ctx.textBaseline="middle";var text=opts.text;if(helpers$1.isArray(text))for(var y=0,i=0;i<text.length;++i)ctx.fillText(text[i],0,y,maxWidth),y+=lineHeight;else ctx.fillText(text,0,0,maxWidth);ctx.restore()}}}),plugin_title={id:"title",_element:Title,beforeInit:function(chart){var titleOpts=chart.options.title;titleOpts&&createNewTitleBlockAndAttach(chart,titleOpts)},beforeUpdate:function(chart){var titleOpts=chart.options.title,titleBlock=chart.titleBlock;titleOpts?(helpers$1.mergeIf(titleOpts,core_defaults.global.title),titleBlock?(core_layouts.configure(chart,titleBlock,titleOpts),titleBlock.options=titleOpts):createNewTitleBlockAndAttach(chart,titleOpts)):titleBlock&&(core_layouts.removeBox(chart,titleBlock),delete chart.titleBlock)}},plugins={},filler=plugin_filler,legend=plugin_legend,title=plugin_title;plugins.filler=filler,plugins.legend=legend,plugins.title=title,core_controller.helpers=helpers$1,function(){function parseMaxStyle(styleValue,node,parentProperty){var valueInPixels;return"string"==typeof styleValue?(valueInPixels=parseInt(styleValue,10),-1!==styleValue.indexOf("%")&&(valueInPixels=valueInPixels/100*node.parentNode[parentProperty])):valueInPixels=styleValue,valueInPixels}function isConstrainedValue(value){return void 0!==value&&null!==value&&"none"!==value}function getConstraintDimension(domNode,maxStyle,percentageProperty){var view=document.defaultView,parentNode=helpers$1._getParentNode(domNode),constrainedNode=view.getComputedStyle(domNode)[maxStyle],constrainedContainer=view.getComputedStyle(parentNode)[maxStyle],hasCNode=isConstrainedValue(constrainedNode),hasCContainer=isConstrainedValue(constrainedContainer),infinity=Number.POSITIVE_INFINITY;return hasCNode||hasCContainer?Math.min(hasCNode?parseMaxStyle(constrainedNode,domNode,percentageProperty):infinity,hasCContainer?parseMaxStyle(constrainedContainer,parentNode,percentageProperty):infinity):"none"}helpers$1.where=function(collection,filterCallback){if(helpers$1.isArray(collection)&&Array.prototype.filter)return collection.filter(filterCallback);var filtered=[];return helpers$1.each(collection,function(item){filterCallback(item)&&filtered.push(item)}),filtered},helpers$1.findIndex=Array.prototype.findIndex?function(array,callback,scope){return array.findIndex(callback,scope)}:function(array,callback,scope){scope=void 0===scope?array:scope;for(var i=0,ilen=array.length;i<ilen;++i)if(callback.call(scope,array[i],i,array))return i;return-1},helpers$1.findNextWhere=function(arrayToSearch,filterCallback,startIndex){helpers$1.isNullOrUndef(startIndex)&&(startIndex=-1);for(var i=startIndex+1;i<arrayToSearch.length;i++){var currentItem=arrayToSearch[i];if(filterCallback(currentItem))return currentItem}},helpers$1.findPreviousWhere=function(arrayToSearch,filterCallback,startIndex){helpers$1.isNullOrUndef(startIndex)&&(startIndex=arrayToSearch.length);for(var i=startIndex-1;i>=0;i--){var currentItem=arrayToSearch[i];if(filterCallback(currentItem))return currentItem}},helpers$1.isNumber=function(n){return!isNaN(parseFloat(n))&&isFinite(n)},helpers$1.almostEquals=function(x,y,epsilon){return Math.abs(x-y)<epsilon},helpers$1.almostWhole=function(x,epsilon){var rounded=Math.round(x);return rounded-epsilon<x&&rounded+epsilon>x},helpers$1.max=function(array){return array.reduce(function(max,value){return isNaN(value)?max:Math.max(max,value)},Number.NEGATIVE_INFINITY)},helpers$1.min=function(array){return array.reduce(function(min,value){return isNaN(value)?min:Math.min(min,value)},Number.POSITIVE_INFINITY)},helpers$1.sign=Math.sign?function(x){return Math.sign(x)}:function(x){return x=+x,0===x||isNaN(x)?x:x>0?1:-1},helpers$1.log10=Math.log10?function(x){return Math.log10(x)}:function(x){var exponent=Math.log(x)*Math.LOG10E,powerOf10=Math.round(exponent);return x===Math.pow(10,powerOf10)?powerOf10:exponent},helpers$1.toRadians=function(degrees){return degrees*(Math.PI/180)},helpers$1.toDegrees=function(radians){return radians*(180/Math.PI)},helpers$1._decimalPlaces=function(x){if(helpers$1.isFinite(x)){for(var e=1,p=0;Math.round(x*e)/e!==x;)e*=10,p++;return p}},helpers$1.getAngleFromPoint=function(centrePoint,anglePoint){var distanceFromXCenter=anglePoint.x-centrePoint.x,distanceFromYCenter=anglePoint.y-centrePoint.y,radialDistanceFromCenter=Math.sqrt(distanceFromXCenter*distanceFromXCenter+distanceFromYCenter*distanceFromYCenter),angle=Math.atan2(distanceFromYCenter,distanceFromXCenter);return angle<-.5*Math.PI&&(angle+=2*Math.PI),{angle:angle,distance:radialDistanceFromCenter}},helpers$1.distanceBetweenPoints=function(pt1,pt2){return Math.sqrt(Math.pow(pt2.x-pt1.x,2)+Math.pow(pt2.y-pt1.y,2))},helpers$1.aliasPixel=function(pixelWidth){return pixelWidth%2==0?0:.5},helpers$1._alignPixel=function(chart,pixel,width){var devicePixelRatio=chart.currentDevicePixelRatio,halfWidth=width/2
;return Math.round((pixel-halfWidth)*devicePixelRatio)/devicePixelRatio+halfWidth},helpers$1.splineCurve=function(firstPoint,middlePoint,afterPoint,t){var previous=firstPoint.skip?middlePoint:firstPoint,current=middlePoint,next=afterPoint.skip?middlePoint:afterPoint,d01=Math.sqrt(Math.pow(current.x-previous.x,2)+Math.pow(current.y-previous.y,2)),d12=Math.sqrt(Math.pow(next.x-current.x,2)+Math.pow(next.y-current.y,2)),s01=d01/(d01+d12),s12=d12/(d01+d12);s01=isNaN(s01)?0:s01,s12=isNaN(s12)?0:s12;var fa=t*s01,fb=t*s12;return{previous:{x:current.x-fa*(next.x-previous.x),y:current.y-fa*(next.y-previous.y)},next:{x:current.x+fb*(next.x-previous.x),y:current.y+fb*(next.y-previous.y)}}},helpers$1.EPSILON=Number.EPSILON||1e-14,helpers$1.splineCurveMonotone=function(points){var i,pointBefore,pointCurrent,pointAfter,pointsWithTangents=(points||[]).map(function(point){return{model:point._model,deltaK:0,mK:0}}),pointsLen=pointsWithTangents.length;for(i=0;i<pointsLen;++i)if(pointCurrent=pointsWithTangents[i],!pointCurrent.model.skip){if(pointBefore=i>0?pointsWithTangents[i-1]:null,(pointAfter=i<pointsLen-1?pointsWithTangents[i+1]:null)&&!pointAfter.model.skip){var slopeDeltaX=pointAfter.model.x-pointCurrent.model.x;pointCurrent.deltaK=0!==slopeDeltaX?(pointAfter.model.y-pointCurrent.model.y)/slopeDeltaX:0}!pointBefore||pointBefore.model.skip?pointCurrent.mK=pointCurrent.deltaK:!pointAfter||pointAfter.model.skip?pointCurrent.mK=pointBefore.deltaK:this.sign(pointBefore.deltaK)!==this.sign(pointCurrent.deltaK)?pointCurrent.mK=0:pointCurrent.mK=(pointBefore.deltaK+pointCurrent.deltaK)/2}var alphaK,betaK,tauK,squaredMagnitude;for(i=0;i<pointsLen-1;++i)pointCurrent=pointsWithTangents[i],pointAfter=pointsWithTangents[i+1],pointCurrent.model.skip||pointAfter.model.skip||(helpers$1.almostEquals(pointCurrent.deltaK,0,this.EPSILON)?pointCurrent.mK=pointAfter.mK=0:(alphaK=pointCurrent.mK/pointCurrent.deltaK,betaK=pointAfter.mK/pointCurrent.deltaK,(squaredMagnitude=Math.pow(alphaK,2)+Math.pow(betaK,2))<=9||(tauK=3/Math.sqrt(squaredMagnitude),pointCurrent.mK=alphaK*tauK*pointCurrent.deltaK,pointAfter.mK=betaK*tauK*pointCurrent.deltaK)));var deltaX;for(i=0;i<pointsLen;++i)pointCurrent=pointsWithTangents[i],pointCurrent.model.skip||(pointBefore=i>0?pointsWithTangents[i-1]:null,pointAfter=i<pointsLen-1?pointsWithTangents[i+1]:null,pointBefore&&!pointBefore.model.skip&&(deltaX=(pointCurrent.model.x-pointBefore.model.x)/3,pointCurrent.model.controlPointPreviousX=pointCurrent.model.x-deltaX,pointCurrent.model.controlPointPreviousY=pointCurrent.model.y-deltaX*pointCurrent.mK),pointAfter&&!pointAfter.model.skip&&(deltaX=(pointAfter.model.x-pointCurrent.model.x)/3,pointCurrent.model.controlPointNextX=pointCurrent.model.x+deltaX,pointCurrent.model.controlPointNextY=pointCurrent.model.y+deltaX*pointCurrent.mK))},helpers$1.nextItem=function(collection,index,loop){return loop?index>=collection.length-1?collection[0]:collection[index+1]:index>=collection.length-1?collection[collection.length-1]:collection[index+1]},helpers$1.previousItem=function(collection,index,loop){return loop?index<=0?collection[collection.length-1]:collection[index-1]:index<=0?collection[0]:collection[index-1]},helpers$1.niceNum=function(range,round){var exponent=Math.floor(helpers$1.log10(range)),fraction=range/Math.pow(10,exponent);return(round?fraction<1.5?1:fraction<3?2:fraction<7?5:10:fraction<=1?1:fraction<=2?2:fraction<=5?5:10)*Math.pow(10,exponent)},helpers$1.requestAnimFrame=function(){return"undefined"==typeof window?function(callback){callback()}:window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(callback){return window.setTimeout(callback,1e3/60)}}(),helpers$1.getRelativePosition=function(evt,chart){var mouseX,mouseY,e=evt.originalEvent||evt,canvas=evt.target||evt.srcElement,boundingRect=canvas.getBoundingClientRect(),touches=e.touches;touches&&touches.length>0?(mouseX=touches[0].clientX,mouseY=touches[0].clientY):(mouseX=e.clientX,mouseY=e.clientY);var paddingLeft=parseFloat(helpers$1.getStyle(canvas,"padding-left")),paddingTop=parseFloat(helpers$1.getStyle(canvas,"padding-top")),paddingRight=parseFloat(helpers$1.getStyle(canvas,"padding-right")),paddingBottom=parseFloat(helpers$1.getStyle(canvas,"padding-bottom")),width=boundingRect.right-boundingRect.left-paddingLeft-paddingRight,height=boundingRect.bottom-boundingRect.top-paddingTop-paddingBottom;return mouseX=Math.round((mouseX-boundingRect.left-paddingLeft)/width*canvas.width/chart.currentDevicePixelRatio),mouseY=Math.round((mouseY-boundingRect.top-paddingTop)/height*canvas.height/chart.currentDevicePixelRatio),{x:mouseX,y:mouseY}},helpers$1.getConstraintWidth=function(domNode){return getConstraintDimension(domNode,"max-width","clientWidth")},helpers$1.getConstraintHeight=function(domNode){return getConstraintDimension(domNode,"max-height","clientHeight")},helpers$1._calculatePadding=function(container,padding,parentDimension){return padding=helpers$1.getStyle(container,padding),padding.indexOf("%")>-1?parentDimension*parseInt(padding,10)/100:parseInt(padding,10)},helpers$1._getParentNode=function(domNode){var parent=domNode.parentNode;return parent&&"[object ShadowRoot]"===parent.toString()&&(parent=parent.host),parent},helpers$1.getMaximumWidth=function(domNode){var container=helpers$1._getParentNode(domNode);if(!container)return domNode.clientWidth;var clientWidth=container.clientWidth,paddingLeft=helpers$1._calculatePadding(container,"padding-left",clientWidth),paddingRight=helpers$1._calculatePadding(container,"padding-right",clientWidth),w=clientWidth-paddingLeft-paddingRight,cw=helpers$1.getConstraintWidth(domNode);return isNaN(cw)?w:Math.min(w,cw)},helpers$1.getMaximumHeight=function(domNode){var container=helpers$1._getParentNode(domNode);if(!container)return domNode.clientHeight;var clientHeight=container.clientHeight,paddingTop=helpers$1._calculatePadding(container,"padding-top",clientHeight),paddingBottom=helpers$1._calculatePadding(container,"padding-bottom",clientHeight),h=clientHeight-paddingTop-paddingBottom,ch=helpers$1.getConstraintHeight(domNode);return isNaN(ch)?h:Math.min(h,ch)},helpers$1.getStyle=function(el,property){return el.currentStyle?el.currentStyle[property]:document.defaultView.getComputedStyle(el,null).getPropertyValue(property)},helpers$1.retinaScale=function(chart,forceRatio){var pixelRatio=chart.currentDevicePixelRatio=forceRatio||"undefined"!=typeof window&&window.devicePixelRatio||1;if(1!==pixelRatio){var canvas=chart.canvas,height=chart.height,width=chart.width;canvas.height=height*pixelRatio,canvas.width=width*pixelRatio,chart.ctx.scale(pixelRatio,pixelRatio),canvas.style.height||canvas.style.width||(canvas.style.height=height+"px",canvas.style.width=width+"px")}},helpers$1.fontString=function(pixelSize,fontStyle,fontFamily){return fontStyle+" "+pixelSize+"px "+fontFamily},helpers$1.longestText=function(ctx,font,arrayOfThings,cache){cache=cache||{};var data=cache.data=cache.data||{},gc=cache.garbageCollect=cache.garbageCollect||[];cache.font!==font&&(data=cache.data={},gc=cache.garbageCollect=[],cache.font=font),ctx.font=font;var longest=0;helpers$1.each(arrayOfThings,function(thing){void 0!==thing&&null!==thing&&!0!==helpers$1.isArray(thing)?longest=helpers$1.measureText(ctx,data,gc,longest,thing):helpers$1.isArray(thing)&&helpers$1.each(thing,function(nestedThing){void 0===nestedThing||null===nestedThing||helpers$1.isArray(nestedThing)||(longest=helpers$1.measureText(ctx,data,gc,longest,nestedThing))})});var gcLen=gc.length/2;if(gcLen>arrayOfThings.length){for(var i=0;i<gcLen;i++)delete data[gc[i]];gc.splice(0,gcLen)}return longest},helpers$1.measureText=function(ctx,data,gc,longest,string){var textWidth=data[string];return textWidth||(textWidth=data[string]=ctx.measureText(string).width,gc.push(string)),textWidth>longest&&(longest=textWidth),longest},helpers$1.numberOfLabelLines=function(arrayOfThings){var numberOfLines=1;return helpers$1.each(arrayOfThings,function(thing){helpers$1.isArray(thing)&&thing.length>numberOfLines&&(numberOfLines=thing.length)}),numberOfLines},helpers$1.color=chartjsColor?function(value){return value instanceof CanvasGradient&&(value=core_defaults.global.defaultColor),chartjsColor(value)}:function(value){return console.error("Color.js not found!"),value},helpers$1.getHoverColor=function(colorValue){return colorValue instanceof CanvasPattern||colorValue instanceof CanvasGradient?colorValue:helpers$1.color(colorValue).saturate(.5).darken(.1).rgbString()}}(),core_controller._adapters=core_adapters,core_controller.Animation=core_animation,core_controller.animationService=core_animations,core_controller.controllers=controllers,core_controller.DatasetController=core_datasetController,core_controller.defaults=core_defaults,core_controller.Element=core_element,core_controller.elements=elements,core_controller.Interaction=core_interaction,core_controller.layouts=core_layouts,core_controller.platform=platform,core_controller.plugins=core_plugins,core_controller.Scale=core_scale,core_controller.scaleService=core_scaleService,core_controller.Ticks=core_ticks,core_controller.Tooltip=core_tooltip,core_controller.helpers.each(scales,function(scale,type){core_controller.scaleService.registerScaleType(type,scale,scale._defaults)});for(var k in plugins)plugins.hasOwnProperty(k)&&core_controller.plugins.register(plugins[k]);core_controller.platform.initialize();var src=core_controller;return"undefined"!=typeof window&&(window.Chart=core_controller),core_controller.Chart=core_controller,core_controller.Legend=plugins.legend._element,core_controller.Title=plugins.title._element,core_controller.pluginService=core_controller.plugins,core_controller.PluginBase=core_controller.Element.extend({}),core_controller.canvasHelpers=core_controller.helpers.canvas,core_controller.layoutService=core_controller.layouts,core_controller.LinearScaleBase=scale_linearbase,core_controller.helpers.each(["Bar","Bubble","Doughnut","Line","PolarArea","Radar","Scatter"],function(klass){core_controller[klass]=function(ctx,cfg){return new core_controller(ctx,core_controller.helpers.merge(cfg||{},{type:klass.charAt(0).toLowerCase()+klass.slice(1)}))}}),src})},{moment:3}],2:[function(require,module,exports){!function(root,factory){"object"==typeof exports&&"object"==typeof module?module.exports=factory():"function"==typeof define&&define.amd?define([],factory):"object"==typeof exports?exports.ClipboardJS=factory():root.ClipboardJS=factory()}(this,function(){return function(modules){function __webpack_require__(moduleId){if(installedModules[moduleId])return installedModules[moduleId].exports;var module=installedModules[moduleId]={i:moduleId,l:!1,exports:{}};return modules[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.l=!0,module.exports}var installedModules={};return __webpack_require__.m=modules,__webpack_require__.c=installedModules,__webpack_require__.d=function(exports,name,getter){__webpack_require__.o(exports,name)||Object.defineProperty(exports,name,{enumerable:!0,get:getter})},__webpack_require__.r=function(exports){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},__webpack_require__.t=function(value,mode){if(1&mode&&(value=__webpack_require__(value)),8&mode)return value;if(4&mode&&"object"==typeof value&&value&&value.__esModule)return value;var ns=Object.create(null);if(__webpack_require__.r(ns),Object.defineProperty(ns,"default",{enumerable:!0,value:value}),2&mode&&"string"!=typeof value)for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key]}.bind(null,key));return ns},__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,"a",getter),getter},__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property)},__webpack_require__.p="",__webpack_require__(__webpack_require__.s=0)}([function(module,exports,__webpack_require__){"use strict";function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!call||"object"!=typeof call&&"function"!=typeof call?self:call}function _inherits(subClass,superClass){if("function"!=typeof superClass&&null!==superClass)throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}function getAttributeValue(suffix,element){var attribute="data-clipboard-"+suffix;if(element.hasAttribute(attribute))return element.getAttribute(attribute)}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_clipboardAction=__webpack_require__(1),_clipboardAction2=_interopRequireDefault(_clipboardAction),_tinyEmitter=__webpack_require__(3),_tinyEmitter2=_interopRequireDefault(_tinyEmitter),_goodListener=__webpack_require__(4),_goodListener2=_interopRequireDefault(_goodListener),Clipboard=function(_Emitter){function Clipboard(trigger,options){_classCallCheck(this,Clipboard);var _this=_possibleConstructorReturn(this,(Clipboard.__proto__||Object.getPrototypeOf(Clipboard)).call(this));return _this.resolveOptions(options),_this.listenClick(trigger),_this}return _inherits(Clipboard,_Emitter),_createClass(Clipboard,[{key:"resolveOptions",value:function(){var options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.action="function"==typeof options.action?options.action:this.defaultAction,this.target="function"==typeof options.target?options.target:this.defaultTarget,this.text="function"==typeof options.text?options.text:this.defaultText,this.container="object"===_typeof(options.container)?options.container:document.body}},{key:"listenClick",value:function(trigger){var _this2=this;this.listener=(0,_goodListener2.default)(trigger,"click",function(e){return _this2.onClick(e)})}},{key:"onClick",value:function(e){var trigger=e.delegateTarget||e.currentTarget;this.clipboardAction&&(this.clipboardAction=null),this.clipboardAction=new _clipboardAction2.default({action:this.action(trigger),target:this.target(trigger),text:this.text(trigger),container:this.container,trigger:trigger,emitter:this})}},{key:"defaultAction",value:function(trigger){return getAttributeValue("action",trigger)}},{key:"defaultTarget",value:function(trigger){var selector=getAttributeValue("target",trigger);if(selector)return document.querySelector(selector)}},{key:"defaultText",value:function(trigger){return getAttributeValue("text",trigger)}},{key:"destroy",value:function(){this.listener.destroy(),this.clipboardAction&&(this.clipboardAction.destroy(),this.clipboardAction=null)}}],[{key:"isSupported",value:function(){var action=arguments.length>0&&void 0!==arguments[0]?arguments[0]:["copy","cut"],actions="string"==typeof action?[action]:action,support=!!document.queryCommandSupported;return actions.forEach(function(action){support=support&&!!document.queryCommandSupported(action)}),support}}]),Clipboard}(_tinyEmitter2.default);module.exports=Clipboard},function(module,exports,__webpack_require__){"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj},_createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}(),_select=__webpack_require__(2),_select2=function(obj){return obj&&obj.__esModule?obj:{default:obj}}(_select),ClipboardAction=function(){function ClipboardAction(options){_classCallCheck(this,ClipboardAction),this.resolveOptions(options),this.initSelection()}return _createClass(ClipboardAction,[{key:"resolveOptions",value:function(){var options=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.action=options.action,this.container=options.container,this.emitter=options.emitter,this.target=options.target,this.text=options.text,this.trigger=options.trigger,this.selectedText=""}},{key:"initSelection",value:function(){this.text?this.selectFake():this.target&&this.selectTarget()}},{key:"selectFake",value:function(){var _this=this,isRTL="rtl"==document.documentElement.getAttribute("dir");this.removeFake(),this.fakeHandlerCallback=function(){return _this.removeFake()},this.fakeHandler=this.container.addEventListener("click",this.fakeHandlerCallback)||!0,this.fakeElem=document.createElement("textarea"),this.fakeElem.style.fontSize="12pt",this.fakeElem.style.border="0",this.fakeElem.style.padding="0",this.fakeElem.style.margin="0",this.fakeElem.style.position="absolute",this.fakeElem.style[isRTL?"right":"left"]="-9999px";var yPosition=window.pageYOffset||document.documentElement.scrollTop;this.fakeElem.style.top=yPosition+"px",this.fakeElem.setAttribute("readonly",""),this.fakeElem.value=this.text,this.container.appendChild(this.fakeElem),this.selectedText=(0,_select2.default)(this.fakeElem),this.copyText()}},{key:"removeFake",value:function(){this.fakeHandler&&(this.container.removeEventListener("click",this.fakeHandlerCallback),this.fakeHandler=null,this.fakeHandlerCallback=null),this.fakeElem&&(this.container.removeChild(this.fakeElem),this.fakeElem=null)}},{key:"selectTarget",value:function(){this.selectedText=(0,_select2.default)(this.target),this.copyText()}},{key:"copyText",value:function(){var succeeded=void 0;try{succeeded=document.execCommand(this.action)}catch(err){succeeded=!1}this.handleResult(succeeded)}},{key:"handleResult",value:function(succeeded){this.emitter.emit(succeeded?"success":"error",{action:this.action,text:this.selectedText,trigger:this.trigger,clearSelection:this.clearSelection.bind(this)})}},{key:"clearSelection",value:function(){this.trigger&&this.trigger.focus(),window.getSelection().removeAllRanges()}},{key:"destroy",value:function(){this.removeFake()}},{key:"action",set:function(){var action=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"copy";if(this._action=action,"copy"!==this._action&&"cut"!==this._action)throw new Error('Invalid "action" value, use either "copy" or "cut"')},get:function(){return this._action}},{key:"target",set:function(target){if(void 0!==target){if(!target||"object"!==(void 0===target?"undefined":_typeof(target))||1!==target.nodeType)throw new Error('Invalid "target" value, use a valid Element');if("copy"===this.action&&target.hasAttribute("disabled"))throw new Error('Invalid "target" attribute. Please use "readonly" instead of "disabled" attribute');if("cut"===this.action&&(target.hasAttribute("readonly")||target.hasAttribute("disabled")))throw new Error('Invalid "target" attribute. You can\'t cut text from elements with "readonly" or "disabled" attributes');this._target=target}},get:function(){return this._target}}]),ClipboardAction}();module.exports=ClipboardAction},function(module,exports){function select(element){var selectedText;if("SELECT"===element.nodeName)element.focus(),selectedText=element.value;else if("INPUT"===element.nodeName||"TEXTAREA"===element.nodeName){var isReadOnly=element.hasAttribute("readonly");isReadOnly||element.setAttribute("readonly",""),element.select(),element.setSelectionRange(0,element.value.length),isReadOnly||element.removeAttribute("readonly"),selectedText=element.value}else{element.hasAttribute("contenteditable")&&element.focus();var selection=window.getSelection(),range=document.createRange();range.selectNodeContents(element),selection.removeAllRanges(),selection.addRange(range),selectedText=selection.toString()}return selectedText}module.exports=select},function(module,exports){function E(){}E.prototype={on:function(name,callback,ctx){var e=this.e||(this.e={});return(e[name]||(e[name]=[])).push({fn:callback,ctx:ctx}),this},once:function(name,callback,ctx){function listener(){self.off(name,listener),callback.apply(ctx,arguments)}var self=this;return listener._=callback,this.on(name,listener,ctx)},emit:function(name){var data=[].slice.call(arguments,1),evtArr=((this.e||(this.e={}))[name]||[]).slice(),i=0,len=evtArr.length;for(i;i<len;i++)evtArr[i].fn.apply(evtArr[i].ctx,data);return this},off:function(name,callback){var e=this.e||(this.e={}),evts=e[name],liveEvents=[];if(evts&&callback)for(var i=0,len=evts.length;i<len;i++)evts[i].fn!==callback&&evts[i].fn._!==callback&&liveEvents.push(evts[i]);return liveEvents.length?e[name]=liveEvents:delete e[name],this}},module.exports=E},function(module,exports,__webpack_require__){function listen(target,type,callback){if(!target&&!type&&!callback)throw new Error("Missing required arguments");if(!is.string(type))throw new TypeError("Second argument must be a String");if(!is.fn(callback))throw new TypeError("Third argument must be a Function");if(is.node(target))return listenNode(target,type,callback);if(is.nodeList(target))return listenNodeList(target,type,callback);if(is.string(target))return listenSelector(target,type,callback);throw new TypeError("First argument must be a String, HTMLElement, HTMLCollection, or NodeList")}function listenNode(node,type,callback){return node.addEventListener(type,callback),{destroy:function(){node.removeEventListener(type,callback)}}}function listenNodeList(nodeList,type,callback){return Array.prototype.forEach.call(nodeList,function(node){node.addEventListener(type,callback)}),{destroy:function(){Array.prototype.forEach.call(nodeList,function(node){node.removeEventListener(type,callback)})}}}function listenSelector(selector,type,callback){return delegate(document.body,selector,type,callback)}var is=__webpack_require__(5),delegate=__webpack_require__(6);module.exports=listen},function(module,exports){exports.node=function(value){return void 0!==value&&value instanceof HTMLElement&&1===value.nodeType},exports.nodeList=function(value){var type=Object.prototype.toString.call(value);return void 0!==value&&("[object NodeList]"===type||"[object HTMLCollection]"===type)&&"length"in value&&(0===value.length||exports.node(value[0]))},exports.string=function(value){return"string"==typeof value||value instanceof String},exports.fn=function(value){return"[object Function]"===Object.prototype.toString.call(value)}},function(module,exports,__webpack_require__){function _delegate(element,selector,type,callback,useCapture){var listenerFn=listener.apply(this,arguments);return element.addEventListener(type,listenerFn,useCapture),{destroy:function(){element.removeEventListener(type,listenerFn,useCapture)}}}function delegate(elements,selector,type,callback,useCapture){return"function"==typeof elements.addEventListener?_delegate.apply(null,arguments):"function"==typeof type?_delegate.bind(null,document).apply(null,arguments):("string"==typeof elements&&(elements=document.querySelectorAll(elements)),Array.prototype.map.call(elements,function(element){return _delegate(element,selector,type,callback,useCapture)}))}function listener(element,selector,type,callback){return function(e){e.delegateTarget=closest(e.target,selector),e.delegateTarget&&callback.call(element,e)}}var closest=__webpack_require__(7);module.exports=delegate},function(module,exports){function closest(element,selector){for(;element&&element.nodeType!==DOCUMENT_NODE_TYPE;){if("function"==typeof element.matches&&element.matches(selector))return element;element=element.parentNode}}var DOCUMENT_NODE_TYPE=9;if("undefined"!=typeof Element&&!Element.prototype.matches){var proto=Element.prototype;proto.matches=proto.matchesSelector||proto.mozMatchesSelector||proto.msMatchesSelector||proto.oMatchesSelector||proto.webkitMatchesSelector}module.exports=closest}])})},{}],3:[function(require,module,exports){!function(global,factory){"object"==typeof exports&&void 0!==module?module.exports=factory():"function"==typeof define&&define.amd?define(factory):global.moment=factory()}(this,function(){"use strict";function hooks(){return hookCallback.apply(null,arguments)}function isArray(input){return input instanceof Array||"[object Array]"===Object.prototype.toString.call(input)}function isObject(input){return null!=input&&"[object Object]"===Object.prototype.toString.call(input)}function isObjectEmpty(obj){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(obj).length;var k;for(k in obj)if(obj.hasOwnProperty(k))return!1;return!0}function isUndefined(input){return void 0===input}function isNumber(input){return"number"==typeof input||"[object Number]"===Object.prototype.toString.call(input)}function isDate(input){return input instanceof Date||"[object Date]"===Object.prototype.toString.call(input)}function map(arr,fn){var i,res=[];for(i=0;i<arr.length;++i)res.push(fn(arr[i],i));return res}function hasOwnProp(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function extend(a,b){for(var i in b)hasOwnProp(b,i)&&(a[i]=b[i]);return hasOwnProp(b,"toString")&&(a.toString=b.toString),hasOwnProp(b,"valueOf")&&(a.valueOf=b.valueOf),a}function createUTC(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,!0).utc()}function defaultParsingFlags(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1}}function getParsingFlags(m){return null==m._pf&&(m._pf=defaultParsingFlags()),m._pf}function isValid(m){if(null==m._isValid){var flags=getParsingFlags(m),parsedParts=some.call(flags.parsedDateParts,function(i){return null!=i}),isNowValid=!isNaN(m._d.getTime())&&flags.overflow<0&&!flags.empty&&!flags.invalidMonth&&!flags.invalidWeekday&&!flags.weekdayMismatch&&!flags.nullInput&&!flags.invalidFormat&&!flags.userInvalidated&&(!flags.meridiem||flags.meridiem&&parsedParts);if(m._strict&&(isNowValid=isNowValid&&0===flags.charsLeftOver&&0===flags.unusedTokens.length&&void 0===flags.bigHour),null!=Object.isFrozen&&Object.isFrozen(m))return isNowValid;m._isValid=isNowValid}return m._isValid}function createInvalid(flags){var m=createUTC(NaN);return null!=flags?extend(getParsingFlags(m),flags):getParsingFlags(m).userInvalidated=!0,m}function copyConfig(to,from){var i,prop,val;if(isUndefined(from._isAMomentObject)||(to._isAMomentObject=from._isAMomentObject),isUndefined(from._i)||(to._i=from._i),isUndefined(from._f)||(to._f=from._f),isUndefined(from._l)||(to._l=from._l),isUndefined(from._strict)||(to._strict=from._strict),isUndefined(from._tzm)||(to._tzm=from._tzm),isUndefined(from._isUTC)||(to._isUTC=from._isUTC),isUndefined(from._offset)||(to._offset=from._offset),isUndefined(from._pf)||(to._pf=getParsingFlags(from)),isUndefined(from._locale)||(to._locale=from._locale),momentProperties.length>0)for(i=0;i<momentProperties.length;i++)prop=momentProperties[i],val=from[prop],isUndefined(val)||(to[prop]=val);return to}function Moment(config){copyConfig(this,config),this._d=new Date(null!=config._d?config._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===updateInProgress&&(updateInProgress=!0,hooks.updateOffset(this),updateInProgress=!1)}function isMoment(obj){return obj instanceof Moment||null!=obj&&null!=obj._isAMomentObject}function absFloor(number){return number<0?Math.ceil(number)||0:Math.floor(number)}function toInt(argumentForCoercion){var coercedNumber=+argumentForCoercion,value=0;return 0!==coercedNumber&&isFinite(coercedNumber)&&(value=absFloor(coercedNumber)),value}function compareArrays(array1,array2,dontConvert){var i,len=Math.min(array1.length,array2.length),lengthDiff=Math.abs(array1.length-array2.length),diffs=0;for(i=0;i<len;i++)(dontConvert&&array1[i]!==array2[i]||!dontConvert&&toInt(array1[i])!==toInt(array2[i]))&&diffs++;return diffs+lengthDiff}function warn(msg){!1===hooks.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+msg)}function deprecate(msg,fn){var firstTime=!0;return extend(function(){if(null!=hooks.deprecationHandler&&hooks.deprecationHandler(null,msg),firstTime){for(var arg,args=[],i=0;i<arguments.length;i++){if(arg="","object"==typeof arguments[i]){arg+="\n["+i+"] ";for(var key in arguments[0])arg+=key+": "+arguments[0][key]+", ";arg=arg.slice(0,-2)}else arg=arguments[i];args.push(arg)}warn(msg+"\nArguments: "+Array.prototype.slice.call(args).join("")+"\n"+(new Error).stack),firstTime=!1}return fn.apply(this,arguments)},fn)}function deprecateSimple(name,msg){null!=hooks.deprecationHandler&&hooks.deprecationHandler(name,msg),deprecations[name]||(warn(msg),deprecations[name]=!0)}function isFunction(input){return input instanceof Function||"[object Function]"===Object.prototype.toString.call(input)}function set(config){var prop,i;for(i in config)prop=config[i],isFunction(prop)?this[i]=prop:this["_"+i]=prop;this._config=config,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)}function mergeConfigs(parentConfig,childConfig){var prop,res=extend({},parentConfig);for(prop in childConfig)hasOwnProp(childConfig,prop)&&(isObject(parentConfig[prop])&&isObject(childConfig[prop])?(res[prop]={},extend(res[prop],parentConfig[prop]),extend(res[prop],childConfig[prop])):null!=childConfig[prop]?res[prop]=childConfig[prop]:delete res[prop]);for(prop in parentConfig)hasOwnProp(parentConfig,prop)&&!hasOwnProp(childConfig,prop)&&isObject(parentConfig[prop])&&(res[prop]=extend({},res[prop]));return res}function Locale(config){null!=config&&this.set(config)}function calendar(key,mom,now){var output=this._calendar[key]||this._calendar.sameElse;return isFunction(output)?output.call(mom,now):output}function longDateFormat(key){var format=this._longDateFormat[key],formatUpper=this._longDateFormat[key.toUpperCase()];return format||!formatUpper?format:(this._longDateFormat[key]=formatUpper.replace(/MMMM|MM|DD|dddd/g,function(val){return val.slice(1)}),this._longDateFormat[key])}function invalidDate(){return this._invalidDate}function ordinal(number){return this._ordinal.replace("%d",number)}function relativeTime(number,withoutSuffix,string,isFuture){var output=this._relativeTime[string];return isFunction(output)?output(number,withoutSuffix,string,isFuture):output.replace(/%d/i,number)}
function pastFuture(diff,output){var format=this._relativeTime[diff>0?"future":"past"];return isFunction(format)?format(output):format.replace(/%s/i,output)}function addUnitAlias(unit,shorthand){var lowerCase=unit.toLowerCase();aliases[lowerCase]=aliases[lowerCase+"s"]=aliases[shorthand]=unit}function normalizeUnits(units){return"string"==typeof units?aliases[units]||aliases[units.toLowerCase()]:void 0}function normalizeObjectUnits(inputObject){var normalizedProp,prop,normalizedInput={};for(prop in inputObject)hasOwnProp(inputObject,prop)&&(normalizedProp=normalizeUnits(prop))&&(normalizedInput[normalizedProp]=inputObject[prop]);return normalizedInput}function addUnitPriority(unit,priority){priorities[unit]=priority}function getPrioritizedUnits(unitsObj){var units=[];for(var u in unitsObj)units.push({unit:u,priority:priorities[u]});return units.sort(function(a,b){return a.priority-b.priority}),units}function zeroFill(number,targetLength,forceSign){var absNumber=""+Math.abs(number),zerosToFill=targetLength-absNumber.length;return(number>=0?forceSign?"+":"":"-")+Math.pow(10,Math.max(0,zerosToFill)).toString().substr(1)+absNumber}function addFormatToken(token,padded,ordinal,callback){var func=callback;"string"==typeof callback&&(func=function(){return this[callback]()}),token&&(formatTokenFunctions[token]=func),padded&&(formatTokenFunctions[padded[0]]=function(){return zeroFill(func.apply(this,arguments),padded[1],padded[2])}),ordinal&&(formatTokenFunctions[ordinal]=function(){return this.localeData().ordinal(func.apply(this,arguments),token)})}function removeFormattingTokens(input){return input.match(/\[[\s\S]/)?input.replace(/^\[|\]$/g,""):input.replace(/\\/g,"")}function makeFormatFunction(format){var i,length,array=format.match(formattingTokens);for(i=0,length=array.length;i<length;i++)formatTokenFunctions[array[i]]?array[i]=formatTokenFunctions[array[i]]:array[i]=removeFormattingTokens(array[i]);return function(mom){var i,output="";for(i=0;i<length;i++)output+=isFunction(array[i])?array[i].call(mom,format):array[i];return output}}function formatMoment(m,format){return m.isValid()?(format=expandFormat(format,m.localeData()),formatFunctions[format]=formatFunctions[format]||makeFormatFunction(format),formatFunctions[format](m)):m.localeData().invalidDate()}function expandFormat(format,locale){function replaceLongDateFormatTokens(input){return locale.longDateFormat(input)||input}var i=5;for(localFormattingTokens.lastIndex=0;i>=0&&localFormattingTokens.test(format);)format=format.replace(localFormattingTokens,replaceLongDateFormatTokens),localFormattingTokens.lastIndex=0,i-=1;return format}function addRegexToken(token,regex,strictRegex){regexes[token]=isFunction(regex)?regex:function(isStrict,localeData){return isStrict&&strictRegex?strictRegex:regex}}function getParseRegexForToken(token,config){return hasOwnProp(regexes,token)?regexes[token](config._strict,config._locale):new RegExp(unescapeFormat(token))}function unescapeFormat(s){return regexEscape(s.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(matched,p1,p2,p3,p4){return p1||p2||p3||p4}))}function regexEscape(s){return s.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function addParseToken(token,callback){var i,func=callback;for("string"==typeof token&&(token=[token]),isNumber(callback)&&(func=function(input,array){array[callback]=toInt(input)}),i=0;i<token.length;i++)tokens[token[i]]=func}function addWeekParseToken(token,callback){addParseToken(token,function(input,array,config,token){config._w=config._w||{},callback(input,config._w,config,token)})}function addTimeToArrayFromToken(token,input,config){null!=input&&hasOwnProp(tokens,token)&&tokens[token](input,config._a,config,token)}function daysInYear(year){return isLeapYear(year)?366:365}function isLeapYear(year){return year%4==0&&year%100!=0||year%400==0}function getIsLeapYear(){return isLeapYear(this.year())}function makeGetSet(unit,keepTime){return function(value){return null!=value?(set$1(this,unit,value),hooks.updateOffset(this,keepTime),this):get(this,unit)}}function get(mom,unit){return mom.isValid()?mom._d["get"+(mom._isUTC?"UTC":"")+unit]():NaN}function set$1(mom,unit,value){mom.isValid()&&!isNaN(value)&&("FullYear"===unit&&isLeapYear(mom.year())&&1===mom.month()&&29===mom.date()?mom._d["set"+(mom._isUTC?"UTC":"")+unit](value,mom.month(),daysInMonth(value,mom.month())):mom._d["set"+(mom._isUTC?"UTC":"")+unit](value))}function stringGet(units){return units=normalizeUnits(units),isFunction(this[units])?this[units]():this}function stringSet(units,value){if("object"==typeof units){units=normalizeObjectUnits(units);for(var prioritized=getPrioritizedUnits(units),i=0;i<prioritized.length;i++)this[prioritized[i].unit](units[prioritized[i].unit])}else if(units=normalizeUnits(units),isFunction(this[units]))return this[units](value);return this}function mod(n,x){return(n%x+x)%x}function daysInMonth(year,month){if(isNaN(year)||isNaN(month))return NaN;var modMonth=mod(month,12);return year+=(month-modMonth)/12,1===modMonth?isLeapYear(year)?29:28:31-modMonth%7%2}function localeMonths(m,format){return m?isArray(this._months)?this._months[m.month()]:this._months[(this._months.isFormat||MONTHS_IN_FORMAT).test(format)?"format":"standalone"][m.month()]:isArray(this._months)?this._months:this._months.standalone}function localeMonthsShort(m,format){return m?isArray(this._monthsShort)?this._monthsShort[m.month()]:this._monthsShort[MONTHS_IN_FORMAT.test(format)?"format":"standalone"][m.month()]:isArray(this._monthsShort)?this._monthsShort:this._monthsShort.standalone}function handleStrictParse(monthName,format,strict){var i,ii,mom,llc=monthName.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],i=0;i<12;++i)mom=createUTC([2e3,i]),this._shortMonthsParse[i]=this.monthsShort(mom,"").toLocaleLowerCase(),this._longMonthsParse[i]=this.months(mom,"").toLocaleLowerCase();return strict?"MMM"===format?(ii=indexOf.call(this._shortMonthsParse,llc),-1!==ii?ii:null):(ii=indexOf.call(this._longMonthsParse,llc),-1!==ii?ii:null):"MMM"===format?-1!==(ii=indexOf.call(this._shortMonthsParse,llc))?ii:(ii=indexOf.call(this._longMonthsParse,llc),-1!==ii?ii:null):-1!==(ii=indexOf.call(this._longMonthsParse,llc))?ii:(ii=indexOf.call(this._shortMonthsParse,llc),-1!==ii?ii:null)}function localeMonthsParse(monthName,format,strict){var i,mom,regex;if(this._monthsParseExact)return handleStrictParse.call(this,monthName,format,strict);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),i=0;i<12;i++){if(mom=createUTC([2e3,i]),strict&&!this._longMonthsParse[i]&&(this._longMonthsParse[i]=new RegExp("^"+this.months(mom,"").replace(".","")+"$","i"),this._shortMonthsParse[i]=new RegExp("^"+this.monthsShort(mom,"").replace(".","")+"$","i")),strict||this._monthsParse[i]||(regex="^"+this.months(mom,"")+"|^"+this.monthsShort(mom,""),this._monthsParse[i]=new RegExp(regex.replace(".",""),"i")),strict&&"MMMM"===format&&this._longMonthsParse[i].test(monthName))return i;if(strict&&"MMM"===format&&this._shortMonthsParse[i].test(monthName))return i;if(!strict&&this._monthsParse[i].test(monthName))return i}}function setMonth(mom,value){var dayOfMonth;if(!mom.isValid())return mom;if("string"==typeof value)if(/^\d+$/.test(value))value=toInt(value);else if(value=mom.localeData().monthsParse(value),!isNumber(value))return mom;return dayOfMonth=Math.min(mom.date(),daysInMonth(mom.year(),value)),mom._d["set"+(mom._isUTC?"UTC":"")+"Month"](value,dayOfMonth),mom}function getSetMonth(value){return null!=value?(setMonth(this,value),hooks.updateOffset(this,!0),this):get(this,"Month")}function getDaysInMonth(){return daysInMonth(this.year(),this.month())}function monthsShortRegex(isStrict){return this._monthsParseExact?(hasOwnProp(this,"_monthsRegex")||computeMonthsParse.call(this),isStrict?this._monthsShortStrictRegex:this._monthsShortRegex):(hasOwnProp(this,"_monthsShortRegex")||(this._monthsShortRegex=defaultMonthsShortRegex),this._monthsShortStrictRegex&&isStrict?this._monthsShortStrictRegex:this._monthsShortRegex)}function monthsRegex(isStrict){return this._monthsParseExact?(hasOwnProp(this,"_monthsRegex")||computeMonthsParse.call(this),isStrict?this._monthsStrictRegex:this._monthsRegex):(hasOwnProp(this,"_monthsRegex")||(this._monthsRegex=defaultMonthsRegex),this._monthsStrictRegex&&isStrict?this._monthsStrictRegex:this._monthsRegex)}function computeMonthsParse(){function cmpLenRev(a,b){return b.length-a.length}var i,mom,shortPieces=[],longPieces=[],mixedPieces=[];for(i=0;i<12;i++)mom=createUTC([2e3,i]),shortPieces.push(this.monthsShort(mom,"")),longPieces.push(this.months(mom,"")),mixedPieces.push(this.months(mom,"")),mixedPieces.push(this.monthsShort(mom,""));for(shortPieces.sort(cmpLenRev),longPieces.sort(cmpLenRev),mixedPieces.sort(cmpLenRev),i=0;i<12;i++)shortPieces[i]=regexEscape(shortPieces[i]),longPieces[i]=regexEscape(longPieces[i]);for(i=0;i<24;i++)mixedPieces[i]=regexEscape(mixedPieces[i]);this._monthsRegex=new RegExp("^("+mixedPieces.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+longPieces.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+shortPieces.join("|")+")","i")}function createDate(y,m,d,h,M,s,ms){var date;return y<100&&y>=0?(date=new Date(y+400,m,d,h,M,s,ms),isFinite(date.getFullYear())&&date.setFullYear(y)):date=new Date(y,m,d,h,M,s,ms),date}function createUTCDate(y){var date;if(y<100&&y>=0){var args=Array.prototype.slice.call(arguments);args[0]=y+400,date=new Date(Date.UTC.apply(null,args)),isFinite(date.getUTCFullYear())&&date.setUTCFullYear(y)}else date=new Date(Date.UTC.apply(null,arguments));return date}function firstWeekOffset(year,dow,doy){var fwd=7+dow-doy;return-(7+createUTCDate(year,0,fwd).getUTCDay()-dow)%7+fwd-1}function dayOfYearFromWeeks(year,week,weekday,dow,doy){var resYear,resDayOfYear,localWeekday=(7+weekday-dow)%7,weekOffset=firstWeekOffset(year,dow,doy),dayOfYear=1+7*(week-1)+localWeekday+weekOffset;return dayOfYear<=0?(resYear=year-1,resDayOfYear=daysInYear(resYear)+dayOfYear):dayOfYear>daysInYear(year)?(resYear=year+1,resDayOfYear=dayOfYear-daysInYear(year)):(resYear=year,resDayOfYear=dayOfYear),{year:resYear,dayOfYear:resDayOfYear}}function weekOfYear(mom,dow,doy){var resWeek,resYear,weekOffset=firstWeekOffset(mom.year(),dow,doy),week=Math.floor((mom.dayOfYear()-weekOffset-1)/7)+1;return week<1?(resYear=mom.year()-1,resWeek=week+weeksInYear(resYear,dow,doy)):week>weeksInYear(mom.year(),dow,doy)?(resWeek=week-weeksInYear(mom.year(),dow,doy),resYear=mom.year()+1):(resYear=mom.year(),resWeek=week),{week:resWeek,year:resYear}}function weeksInYear(year,dow,doy){var weekOffset=firstWeekOffset(year,dow,doy),weekOffsetNext=firstWeekOffset(year+1,dow,doy);return(daysInYear(year)-weekOffset+weekOffsetNext)/7}function localeWeek(mom){return weekOfYear(mom,this._week.dow,this._week.doy).week}function localeFirstDayOfWeek(){return this._week.dow}function localeFirstDayOfYear(){return this._week.doy}function getSetWeek(input){var week=this.localeData().week(this);return null==input?week:this.add(7*(input-week),"d")}function getSetISOWeek(input){var week=weekOfYear(this,1,4).week;return null==input?week:this.add(7*(input-week),"d")}function parseWeekday(input,locale){return"string"!=typeof input?input:isNaN(input)?(input=locale.weekdaysParse(input),"number"==typeof input?input:null):parseInt(input,10)}function parseIsoWeekday(input,locale){return"string"==typeof input?locale.weekdaysParse(input)%7||7:isNaN(input)?null:input}function shiftWeekdays(ws,n){return ws.slice(n,7).concat(ws.slice(0,n))}function localeWeekdays(m,format){var weekdays=isArray(this._weekdays)?this._weekdays:this._weekdays[m&&!0!==m&&this._weekdays.isFormat.test(format)?"format":"standalone"];return!0===m?shiftWeekdays(weekdays,this._week.dow):m?weekdays[m.day()]:weekdays}function localeWeekdaysShort(m){return!0===m?shiftWeekdays(this._weekdaysShort,this._week.dow):m?this._weekdaysShort[m.day()]:this._weekdaysShort}function localeWeekdaysMin(m){return!0===m?shiftWeekdays(this._weekdaysMin,this._week.dow):m?this._weekdaysMin[m.day()]:this._weekdaysMin}function handleStrictParse$1(weekdayName,format,strict){var i,ii,mom,llc=weekdayName.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],i=0;i<7;++i)mom=createUTC([2e3,1]).day(i),this._minWeekdaysParse[i]=this.weekdaysMin(mom,"").toLocaleLowerCase(),this._shortWeekdaysParse[i]=this.weekdaysShort(mom,"").toLocaleLowerCase(),this._weekdaysParse[i]=this.weekdays(mom,"").toLocaleLowerCase();return strict?"dddd"===format?(ii=indexOf.call(this._weekdaysParse,llc),-1!==ii?ii:null):"ddd"===format?(ii=indexOf.call(this._shortWeekdaysParse,llc),-1!==ii?ii:null):(ii=indexOf.call(this._minWeekdaysParse,llc),-1!==ii?ii:null):"dddd"===format?-1!==(ii=indexOf.call(this._weekdaysParse,llc))?ii:-1!==(ii=indexOf.call(this._shortWeekdaysParse,llc))?ii:(ii=indexOf.call(this._minWeekdaysParse,llc),-1!==ii?ii:null):"ddd"===format?-1!==(ii=indexOf.call(this._shortWeekdaysParse,llc))?ii:-1!==(ii=indexOf.call(this._weekdaysParse,llc))?ii:(ii=indexOf.call(this._minWeekdaysParse,llc),-1!==ii?ii:null):-1!==(ii=indexOf.call(this._minWeekdaysParse,llc))?ii:-1!==(ii=indexOf.call(this._weekdaysParse,llc))?ii:(ii=indexOf.call(this._shortWeekdaysParse,llc),-1!==ii?ii:null)}function localeWeekdaysParse(weekdayName,format,strict){var i,mom,regex;if(this._weekdaysParseExact)return handleStrictParse$1.call(this,weekdayName,format,strict);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),i=0;i<7;i++){if(mom=createUTC([2e3,1]).day(i),strict&&!this._fullWeekdaysParse[i]&&(this._fullWeekdaysParse[i]=new RegExp("^"+this.weekdays(mom,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[i]=new RegExp("^"+this.weekdaysShort(mom,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[i]=new RegExp("^"+this.weekdaysMin(mom,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[i]||(regex="^"+this.weekdays(mom,"")+"|^"+this.weekdaysShort(mom,"")+"|^"+this.weekdaysMin(mom,""),this._weekdaysParse[i]=new RegExp(regex.replace(".",""),"i")),strict&&"dddd"===format&&this._fullWeekdaysParse[i].test(weekdayName))return i;if(strict&&"ddd"===format&&this._shortWeekdaysParse[i].test(weekdayName))return i;if(strict&&"dd"===format&&this._minWeekdaysParse[i].test(weekdayName))return i;if(!strict&&this._weekdaysParse[i].test(weekdayName))return i}}function getSetDayOfWeek(input){if(!this.isValid())return null!=input?this:NaN;var day=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=input?(input=parseWeekday(input,this.localeData()),this.add(input-day,"d")):day}function getSetLocaleDayOfWeek(input){if(!this.isValid())return null!=input?this:NaN;var weekday=(this.day()+7-this.localeData()._week.dow)%7;return null==input?weekday:this.add(input-weekday,"d")}function getSetISODayOfWeek(input){if(!this.isValid())return null!=input?this:NaN;if(null!=input){var weekday=parseIsoWeekday(input,this.localeData());return this.day(this.day()%7?weekday:weekday-7)}return this.day()||7}function weekdaysRegex(isStrict){return this._weekdaysParseExact?(hasOwnProp(this,"_weekdaysRegex")||computeWeekdaysParse.call(this),isStrict?this._weekdaysStrictRegex:this._weekdaysRegex):(hasOwnProp(this,"_weekdaysRegex")||(this._weekdaysRegex=defaultWeekdaysRegex),this._weekdaysStrictRegex&&isStrict?this._weekdaysStrictRegex:this._weekdaysRegex)}function weekdaysShortRegex(isStrict){return this._weekdaysParseExact?(hasOwnProp(this,"_weekdaysRegex")||computeWeekdaysParse.call(this),isStrict?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(hasOwnProp(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=defaultWeekdaysShortRegex),this._weekdaysShortStrictRegex&&isStrict?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)}function weekdaysMinRegex(isStrict){return this._weekdaysParseExact?(hasOwnProp(this,"_weekdaysRegex")||computeWeekdaysParse.call(this),isStrict?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(hasOwnProp(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=defaultWeekdaysMinRegex),this._weekdaysMinStrictRegex&&isStrict?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)}function computeWeekdaysParse(){function cmpLenRev(a,b){return b.length-a.length}var i,mom,minp,shortp,longp,minPieces=[],shortPieces=[],longPieces=[],mixedPieces=[];for(i=0;i<7;i++)mom=createUTC([2e3,1]).day(i),minp=this.weekdaysMin(mom,""),shortp=this.weekdaysShort(mom,""),longp=this.weekdays(mom,""),minPieces.push(minp),shortPieces.push(shortp),longPieces.push(longp),mixedPieces.push(minp),mixedPieces.push(shortp),mixedPieces.push(longp);for(minPieces.sort(cmpLenRev),shortPieces.sort(cmpLenRev),longPieces.sort(cmpLenRev),mixedPieces.sort(cmpLenRev),i=0;i<7;i++)shortPieces[i]=regexEscape(shortPieces[i]),longPieces[i]=regexEscape(longPieces[i]),mixedPieces[i]=regexEscape(mixedPieces[i]);this._weekdaysRegex=new RegExp("^("+mixedPieces.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+longPieces.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+shortPieces.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+minPieces.join("|")+")","i")}function hFormat(){return this.hours()%12||12}function kFormat(){return this.hours()||24}function meridiem(token,lowercase){addFormatToken(token,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),lowercase)})}function matchMeridiem(isStrict,locale){return locale._meridiemParse}function localeIsPM(input){return"p"===(input+"").toLowerCase().charAt(0)}function localeMeridiem(hours,minutes,isLower){return hours>11?isLower?"pm":"PM":isLower?"am":"AM"}function normalizeLocale(key){return key?key.toLowerCase().replace("_","-"):key}function chooseLocale(names){for(var j,next,locale,split,i=0;i<names.length;){for(split=normalizeLocale(names[i]).split("-"),j=split.length,next=normalizeLocale(names[i+1]),next=next?next.split("-"):null;j>0;){if(locale=loadLocale(split.slice(0,j).join("-")))return locale;if(next&&next.length>=j&&compareArrays(split,next,!0)>=j-1)break;j--}i++}return globalLocale}function loadLocale(name){var oldLocale=null;if(!locales[name]&&void 0!==module&&module&&module.exports)try{oldLocale=globalLocale._abbr;require("./locale/"+name),getSetGlobalLocale(oldLocale)}catch(e){}return locales[name]}function getSetGlobalLocale(key,values){var data;return key&&(data=isUndefined(values)?getLocale(key):defineLocale(key,values),data?globalLocale=data:"undefined"!=typeof console&&console.warn&&console.warn("Locale "+key+" not found. Did you forget to load it?")),globalLocale._abbr}function defineLocale(name,config){if(null!==config){var locale,parentConfig=baseConfig;if(config.abbr=name,null!=locales[name])deprecateSimple("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),parentConfig=locales[name]._config;else if(null!=config.parentLocale)if(null!=locales[config.parentLocale])parentConfig=locales[config.parentLocale]._config;else{if(null==(locale=loadLocale(config.parentLocale)))return localeFamilies[config.parentLocale]||(localeFamilies[config.parentLocale]=[]),localeFamilies[config.parentLocale].push({name:name,config:config}),null;parentConfig=locale._config}return locales[name]=new Locale(mergeConfigs(parentConfig,config)),localeFamilies[name]&&localeFamilies[name].forEach(function(x){defineLocale(x.name,x.config)}),getSetGlobalLocale(name),locales[name]}return delete locales[name],null}function updateLocale(name,config){if(null!=config){var locale,tmpLocale,parentConfig=baseConfig;tmpLocale=loadLocale(name),null!=tmpLocale&&(parentConfig=tmpLocale._config),config=mergeConfigs(parentConfig,config),locale=new Locale(config),locale.parentLocale=locales[name],locales[name]=locale,getSetGlobalLocale(name)}else null!=locales[name]&&(null!=locales[name].parentLocale?locales[name]=locales[name].parentLocale:null!=locales[name]&&delete locales[name]);return locales[name]}function getLocale(key){var locale;if(key&&key._locale&&key._locale._abbr&&(key=key._locale._abbr),!key)return globalLocale;if(!isArray(key)){if(locale=loadLocale(key))return locale;key=[key]}return chooseLocale(key)}function listLocales(){return keys(locales)}function checkOverflow(m){var overflow,a=m._a;return a&&-2===getParsingFlags(m).overflow&&(overflow=a[MONTH]<0||a[MONTH]>11?MONTH:a[DATE]<1||a[DATE]>daysInMonth(a[YEAR],a[MONTH])?DATE:a[HOUR]<0||a[HOUR]>24||24===a[HOUR]&&(0!==a[MINUTE]||0!==a[SECOND]||0!==a[MILLISECOND])?HOUR:a[MINUTE]<0||a[MINUTE]>59?MINUTE:a[SECOND]<0||a[SECOND]>59?SECOND:a[MILLISECOND]<0||a[MILLISECOND]>999?MILLISECOND:-1,getParsingFlags(m)._overflowDayOfYear&&(overflow<YEAR||overflow>DATE)&&(overflow=DATE),getParsingFlags(m)._overflowWeeks&&-1===overflow&&(overflow=WEEK),getParsingFlags(m)._overflowWeekday&&-1===overflow&&(overflow=WEEKDAY),getParsingFlags(m).overflow=overflow),m}function defaults(a,b,c){return null!=a?a:null!=b?b:c}function currentDateArray(config){var nowValue=new Date(hooks.now());return config._useUTC?[nowValue.getUTCFullYear(),nowValue.getUTCMonth(),nowValue.getUTCDate()]:[nowValue.getFullYear(),nowValue.getMonth(),nowValue.getDate()]}function configFromArray(config){var i,date,currentDate,expectedWeekday,yearToUse,input=[];if(!config._d){for(currentDate=currentDateArray(config),config._w&&null==config._a[DATE]&&null==config._a[MONTH]&&dayOfYearFromWeekInfo(config),null!=config._dayOfYear&&(yearToUse=defaults(config._a[YEAR],currentDate[YEAR]),(config._dayOfYear>daysInYear(yearToUse)||0===config._dayOfYear)&&(getParsingFlags(config)._overflowDayOfYear=!0),date=createUTCDate(yearToUse,0,config._dayOfYear),config._a[MONTH]=date.getUTCMonth(),config._a[DATE]=date.getUTCDate()),i=0;i<3&&null==config._a[i];++i)config._a[i]=input[i]=currentDate[i];for(;i<7;i++)config._a[i]=input[i]=null==config._a[i]?2===i?1:0:config._a[i];24===config._a[HOUR]&&0===config._a[MINUTE]&&0===config._a[SECOND]&&0===config._a[MILLISECOND]&&(config._nextDay=!0,config._a[HOUR]=0),config._d=(config._useUTC?createUTCDate:createDate).apply(null,input),expectedWeekday=config._useUTC?config._d.getUTCDay():config._d.getDay(),null!=config._tzm&&config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm),config._nextDay&&(config._a[HOUR]=24),config._w&&void 0!==config._w.d&&config._w.d!==expectedWeekday&&(getParsingFlags(config).weekdayMismatch=!0)}}function dayOfYearFromWeekInfo(config){var w,weekYear,week,weekday,dow,doy,temp,weekdayOverflow;if(w=config._w,null!=w.GG||null!=w.W||null!=w.E)dow=1,doy=4,weekYear=defaults(w.GG,config._a[YEAR],weekOfYear(createLocal(),1,4).year),week=defaults(w.W,1),((weekday=defaults(w.E,1))<1||weekday>7)&&(weekdayOverflow=!0);else{dow=config._locale._week.dow,doy=config._locale._week.doy;var curWeek=weekOfYear(createLocal(),dow,doy);weekYear=defaults(w.gg,config._a[YEAR],curWeek.year),week=defaults(w.w,curWeek.week),null!=w.d?((weekday=w.d)<0||weekday>6)&&(weekdayOverflow=!0):null!=w.e?(weekday=w.e+dow,(w.e<0||w.e>6)&&(weekdayOverflow=!0)):weekday=dow}week<1||week>weeksInYear(weekYear,dow,doy)?getParsingFlags(config)._overflowWeeks=!0:null!=weekdayOverflow?getParsingFlags(config)._overflowWeekday=!0:(temp=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy),config._a[YEAR]=temp.year,config._dayOfYear=temp.dayOfYear)}function configFromISO(config){var i,l,allowTime,dateFormat,timeFormat,tzFormat,string=config._i,match=extendedIsoRegex.exec(string)||basicIsoRegex.exec(string);if(match){for(getParsingFlags(config).iso=!0,i=0,l=isoDates.length;i<l;i++)if(isoDates[i][1].exec(match[1])){dateFormat=isoDates[i][0],allowTime=!1!==isoDates[i][2];break}if(null==dateFormat)return void(config._isValid=!1);if(match[3]){for(i=0,l=isoTimes.length;i<l;i++)if(isoTimes[i][1].exec(match[3])){timeFormat=(match[2]||" ")+isoTimes[i][0];break}if(null==timeFormat)return void(config._isValid=!1)}if(!allowTime&&null!=timeFormat)return void(config._isValid=!1);if(match[4]){if(!tzRegex.exec(match[4]))return void(config._isValid=!1);tzFormat="Z"}config._f=dateFormat+(timeFormat||"")+(tzFormat||""),configFromStringAndFormat(config)}else config._isValid=!1}function extractFromRFC2822Strings(yearStr,monthStr,dayStr,hourStr,minuteStr,secondStr){var result=[untruncateYear(yearStr),defaultLocaleMonthsShort.indexOf(monthStr),parseInt(dayStr,10),parseInt(hourStr,10),parseInt(minuteStr,10)];return secondStr&&result.push(parseInt(secondStr,10)),result}function untruncateYear(yearStr){var year=parseInt(yearStr,10);return year<=49?2e3+year:year<=999?1900+year:year}function preprocessRFC2822(s){return s.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,"")}function checkWeekday(weekdayStr,parsedInput,config){if(weekdayStr){if(defaultLocaleWeekdaysShort.indexOf(weekdayStr)!==new Date(parsedInput[0],parsedInput[1],parsedInput[2]).getDay())return getParsingFlags(config).weekdayMismatch=!0,config._isValid=!1,!1}return!0}function calculateOffset(obsOffset,militaryOffset,numOffset){if(obsOffset)return obsOffsets[obsOffset];if(militaryOffset)return 0;var hm=parseInt(numOffset,10),m=hm%100;return(hm-m)/100*60+m}function configFromRFC2822(config){var match=rfc2822.exec(preprocessRFC2822(config._i));if(match){var parsedArray=extractFromRFC2822Strings(match[4],match[3],match[2],match[5],match[6],match[7]);if(!checkWeekday(match[1],parsedArray,config))return;config._a=parsedArray,config._tzm=calculateOffset(match[8],match[9],match[10]),config._d=createUTCDate.apply(null,config._a),config._d.setUTCMinutes(config._d.getUTCMinutes()-config._tzm),getParsingFlags(config).rfc2822=!0}else config._isValid=!1}function configFromString(config){var matched=aspNetJsonRegex.exec(config._i);if(null!==matched)return void(config._d=new Date(+matched[1]));configFromISO(config),!1===config._isValid&&(delete config._isValid,configFromRFC2822(config),!1===config._isValid&&(delete config._isValid,hooks.createFromInputFallback(config)))}function configFromStringAndFormat(config){if(config._f===hooks.ISO_8601)return void configFromISO(config);if(config._f===hooks.RFC_2822)return void configFromRFC2822(config);config._a=[],getParsingFlags(config).empty=!0;var i,parsedInput,tokens,token,skipped,string=""+config._i,stringLength=string.length,totalParsedInputLength=0;for(tokens=expandFormat(config._f,config._locale).match(formattingTokens)||[],i=0;i<tokens.length;i++)token=tokens[i],parsedInput=(string.match(getParseRegexForToken(token,config))||[])[0],parsedInput&&(skipped=string.substr(0,string.indexOf(parsedInput)),skipped.length>0&&getParsingFlags(config).unusedInput.push(skipped),string=string.slice(string.indexOf(parsedInput)+parsedInput.length),totalParsedInputLength+=parsedInput.length),formatTokenFunctions[token]?(parsedInput?getParsingFlags(config).empty=!1:getParsingFlags(config).unusedTokens.push(token),addTimeToArrayFromToken(token,parsedInput,config)):config._strict&&!parsedInput&&getParsingFlags(config).unusedTokens.push(token);getParsingFlags(config).charsLeftOver=stringLength-totalParsedInputLength,string.length>0&&getParsingFlags(config).unusedInput.push(string),config._a[HOUR]<=12&&!0===getParsingFlags(config).bigHour&&config._a[HOUR]>0&&(getParsingFlags(config).bigHour=void 0),getParsingFlags(config).parsedDateParts=config._a.slice(0),getParsingFlags(config).meridiem=config._meridiem,config._a[HOUR]=meridiemFixWrap(config._locale,config._a[HOUR],config._meridiem),configFromArray(config),checkOverflow(config)}function meridiemFixWrap(locale,hour,meridiem){var isPm;return null==meridiem?hour:null!=locale.meridiemHour?locale.meridiemHour(hour,meridiem):null!=locale.isPM?(isPm=locale.isPM(meridiem),isPm&&hour<12&&(hour+=12),isPm||12!==hour||(hour=0),hour):hour}function configFromStringAndArray(config){var tempConfig,bestMoment,scoreToBeat,i,currentScore;if(0===config._f.length)return getParsingFlags(config).invalidFormat=!0,void(config._d=new Date(NaN));for(i=0;i<config._f.length;i++)currentScore=0,tempConfig=copyConfig({},config),null!=config._useUTC&&(tempConfig._useUTC=config._useUTC),tempConfig._f=config._f[i],configFromStringAndFormat(tempConfig),isValid(tempConfig)&&(currentScore+=getParsingFlags(tempConfig).charsLeftOver,currentScore+=10*getParsingFlags(tempConfig).unusedTokens.length,getParsingFlags(tempConfig).score=currentScore,(null==scoreToBeat||currentScore<scoreToBeat)&&(scoreToBeat=currentScore,bestMoment=tempConfig));extend(config,bestMoment||tempConfig)}function configFromObject(config){if(!config._d){var i=normalizeObjectUnits(config._i);config._a=map([i.year,i.month,i.day||i.date,i.hour,i.minute,i.second,i.millisecond],function(obj){return obj&&parseInt(obj,10)}),configFromArray(config)}}function createFromConfig(config){var res=new Moment(checkOverflow(prepareConfig(config)));return res._nextDay&&(res.add(1,"d"),res._nextDay=void 0),res}function prepareConfig(config){var input=config._i,format=config._f;return config._locale=config._locale||getLocale(config._l),null===input||void 0===format&&""===input?createInvalid({nullInput:!0}):("string"==typeof input&&(config._i=input=config._locale.preparse(input)),isMoment(input)?new Moment(checkOverflow(input)):(isDate(input)?config._d=input:isArray(format)?configFromStringAndArray(config):format?configFromStringAndFormat(config):configFromInput(config),isValid(config)||(config._d=null),config))}function configFromInput(config){var input=config._i;isUndefined(input)?config._d=new Date(hooks.now()):isDate(input)?config._d=new Date(input.valueOf()):"string"==typeof input?configFromString(config):isArray(input)?(config._a=map(input.slice(0),function(obj){return parseInt(obj,10)}),configFromArray(config)):isObject(input)?configFromObject(config):isNumber(input)?config._d=new Date(input):hooks.createFromInputFallback(config)}function createLocalOrUTC(input,format,locale,strict,isUTC){var c={};return!0!==locale&&!1!==locale||(strict=locale,locale=void 0),(isObject(input)&&isObjectEmpty(input)||isArray(input)&&0===input.length)&&(input=void 0),c._isAMomentObject=!0,c._useUTC=c._isUTC=isUTC,c._l=locale,c._i=input,c._f=format,c._strict=strict,createFromConfig(c)}function createLocal(input,format,locale,strict){return createLocalOrUTC(input,format,locale,strict,!1)}function pickBy(fn,moments){var res,i;if(1===moments.length&&isArray(moments[0])&&(moments=moments[0]),!moments.length)return createLocal();for(res=moments[0],i=1;i<moments.length;++i)moments[i].isValid()&&!moments[i][fn](res)||(res=moments[i]);return res}function min(){return pickBy("isBefore",[].slice.call(arguments,0))}function max(){return pickBy("isAfter",[].slice.call(arguments,0))}function isDurationValid(m){for(var key in m)if(-1===indexOf.call(ordering,key)||null!=m[key]&&isNaN(m[key]))return!1;for(var unitHasDecimal=!1,i=0;i<ordering.length;++i)if(m[ordering[i]]){if(unitHasDecimal)return!1;parseFloat(m[ordering[i]])!==toInt(m[ordering[i]])&&(unitHasDecimal=!0)}return!0}function isValid$1(){return this._isValid}function createInvalid$1(){return createDuration(NaN)}function Duration(duration){var normalizedInput=normalizeObjectUnits(duration),years=normalizedInput.year||0,quarters=normalizedInput.quarter||0,months=normalizedInput.month||0,weeks=normalizedInput.week||normalizedInput.isoWeek||0,days=normalizedInput.day||0,hours=normalizedInput.hour||0,minutes=normalizedInput.minute||0,seconds=normalizedInput.second||0,milliseconds=normalizedInput.millisecond||0;this._isValid=isDurationValid(normalizedInput),this._milliseconds=+milliseconds+1e3*seconds+6e4*minutes+1e3*hours*60*60,this._days=+days+7*weeks,this._months=+months+3*quarters+12*years,
this._data={},this._locale=getLocale(),this._bubble()}function isDuration(obj){return obj instanceof Duration}function absRound(number){return number<0?-1*Math.round(-1*number):Math.round(number)}function offset(token,separator){addFormatToken(token,0,0,function(){var offset=this.utcOffset(),sign="+";return offset<0&&(offset=-offset,sign="-"),sign+zeroFill(~~(offset/60),2)+separator+zeroFill(~~offset%60,2)})}function offsetFromString(matcher,string){var matches=(string||"").match(matcher);if(null===matches)return null;var chunk=matches[matches.length-1]||[],parts=(chunk+"").match(chunkOffset)||["-",0,0],minutes=60*parts[1]+toInt(parts[2]);return 0===minutes?0:"+"===parts[0]?minutes:-minutes}function cloneWithOffset(input,model){var res,diff;return model._isUTC?(res=model.clone(),diff=(isMoment(input)||isDate(input)?input.valueOf():createLocal(input).valueOf())-res.valueOf(),res._d.setTime(res._d.valueOf()+diff),hooks.updateOffset(res,!1),res):createLocal(input).local()}function getDateOffset(m){return 15*-Math.round(m._d.getTimezoneOffset()/15)}function getSetOffset(input,keepLocalTime,keepMinutes){var localAdjust,offset=this._offset||0;if(!this.isValid())return null!=input?this:NaN;if(null!=input){if("string"==typeof input){if(null===(input=offsetFromString(matchShortOffset,input)))return this}else Math.abs(input)<16&&!keepMinutes&&(input*=60);return!this._isUTC&&keepLocalTime&&(localAdjust=getDateOffset(this)),this._offset=input,this._isUTC=!0,null!=localAdjust&&this.add(localAdjust,"m"),offset!==input&&(!keepLocalTime||this._changeInProgress?addSubtract(this,createDuration(input-offset,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,hooks.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?offset:getDateOffset(this)}function getSetZone(input,keepLocalTime){return null!=input?("string"!=typeof input&&(input=-input),this.utcOffset(input,keepLocalTime),this):-this.utcOffset()}function setOffsetToUTC(keepLocalTime){return this.utcOffset(0,keepLocalTime)}function setOffsetToLocal(keepLocalTime){return this._isUTC&&(this.utcOffset(0,keepLocalTime),this._isUTC=!1,keepLocalTime&&this.subtract(getDateOffset(this),"m")),this}function setOffsetToParsedOffset(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var tZone=offsetFromString(matchOffset,this._i);null!=tZone?this.utcOffset(tZone):this.utcOffset(0,!0)}return this}function hasAlignedHourOffset(input){return!!this.isValid()&&(input=input?createLocal(input).utcOffset():0,(this.utcOffset()-input)%60==0)}function isDaylightSavingTime(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()}function isDaylightSavingTimeShifted(){if(!isUndefined(this._isDSTShifted))return this._isDSTShifted;var c={};if(copyConfig(c,this),c=prepareConfig(c),c._a){var other=c._isUTC?createUTC(c._a):createLocal(c._a);this._isDSTShifted=this.isValid()&&compareArrays(c._a,other.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted}function isLocal(){return!!this.isValid()&&!this._isUTC}function isUtcOffset(){return!!this.isValid()&&this._isUTC}function isUtc(){return!!this.isValid()&&(this._isUTC&&0===this._offset)}function createDuration(input,key){var sign,ret,diffRes,duration=input,match=null;return isDuration(input)?duration={ms:input._milliseconds,d:input._days,M:input._months}:isNumber(input)?(duration={},key?duration[key]=input:duration.milliseconds=input):(match=aspNetRegex.exec(input))?(sign="-"===match[1]?-1:1,duration={y:0,d:toInt(match[DATE])*sign,h:toInt(match[HOUR])*sign,m:toInt(match[MINUTE])*sign,s:toInt(match[SECOND])*sign,ms:toInt(absRound(1e3*match[MILLISECOND]))*sign}):(match=isoRegex.exec(input))?(sign="-"===match[1]?-1:1,duration={y:parseIso(match[2],sign),M:parseIso(match[3],sign),w:parseIso(match[4],sign),d:parseIso(match[5],sign),h:parseIso(match[6],sign),m:parseIso(match[7],sign),s:parseIso(match[8],sign)}):null==duration?duration={}:"object"==typeof duration&&("from"in duration||"to"in duration)&&(diffRes=momentsDifference(createLocal(duration.from),createLocal(duration.to)),duration={},duration.ms=diffRes.milliseconds,duration.M=diffRes.months),ret=new Duration(duration),isDuration(input)&&hasOwnProp(input,"_locale")&&(ret._locale=input._locale),ret}function parseIso(inp,sign){var res=inp&&parseFloat(inp.replace(",","."));return(isNaN(res)?0:res)*sign}function positiveMomentsDifference(base,other){var res={};return res.months=other.month()-base.month()+12*(other.year()-base.year()),base.clone().add(res.months,"M").isAfter(other)&&--res.months,res.milliseconds=+other-+base.clone().add(res.months,"M"),res}function momentsDifference(base,other){var res;return base.isValid()&&other.isValid()?(other=cloneWithOffset(other,base),base.isBefore(other)?res=positiveMomentsDifference(base,other):(res=positiveMomentsDifference(other,base),res.milliseconds=-res.milliseconds,res.months=-res.months),res):{milliseconds:0,months:0}}function createAdder(direction,name){return function(val,period){var dur,tmp;return null===period||isNaN(+period)||(deprecateSimple(name,"moment()."+name+"(period, number) is deprecated. Please use moment()."+name+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),tmp=val,val=period,period=tmp),val="string"==typeof val?+val:val,dur=createDuration(val,period),addSubtract(this,dur,direction),this}}function addSubtract(mom,duration,isAdding,updateOffset){var milliseconds=duration._milliseconds,days=absRound(duration._days),months=absRound(duration._months);mom.isValid()&&(updateOffset=null==updateOffset||updateOffset,months&&setMonth(mom,get(mom,"Month")+months*isAdding),days&&set$1(mom,"Date",get(mom,"Date")+days*isAdding),milliseconds&&mom._d.setTime(mom._d.valueOf()+milliseconds*isAdding),updateOffset&&hooks.updateOffset(mom,days||months))}function getCalendarFormat(myMoment,now){var diff=myMoment.diff(now,"days",!0);return diff<-6?"sameElse":diff<-1?"lastWeek":diff<0?"lastDay":diff<1?"sameDay":diff<2?"nextDay":diff<7?"nextWeek":"sameElse"}function calendar$1(time,formats){var now=time||createLocal(),sod=cloneWithOffset(now,this).startOf("day"),format=hooks.calendarFormat(this,sod)||"sameElse",output=formats&&(isFunction(formats[format])?formats[format].call(this,now):formats[format]);return this.format(output||this.localeData().calendar(format,this,createLocal(now)))}function clone(){return new Moment(this)}function isAfter(input,units){var localInput=isMoment(input)?input:createLocal(input);return!(!this.isValid()||!localInput.isValid())&&(units=normalizeUnits(units)||"millisecond","millisecond"===units?this.valueOf()>localInput.valueOf():localInput.valueOf()<this.clone().startOf(units).valueOf())}function isBefore(input,units){var localInput=isMoment(input)?input:createLocal(input);return!(!this.isValid()||!localInput.isValid())&&(units=normalizeUnits(units)||"millisecond","millisecond"===units?this.valueOf()<localInput.valueOf():this.clone().endOf(units).valueOf()<localInput.valueOf())}function isBetween(from,to,units,inclusivity){var localFrom=isMoment(from)?from:createLocal(from),localTo=isMoment(to)?to:createLocal(to);return!!(this.isValid()&&localFrom.isValid()&&localTo.isValid())&&(inclusivity=inclusivity||"()",("("===inclusivity[0]?this.isAfter(localFrom,units):!this.isBefore(localFrom,units))&&(")"===inclusivity[1]?this.isBefore(localTo,units):!this.isAfter(localTo,units)))}function isSame(input,units){var inputMs,localInput=isMoment(input)?input:createLocal(input);return!(!this.isValid()||!localInput.isValid())&&(units=normalizeUnits(units)||"millisecond","millisecond"===units?this.valueOf()===localInput.valueOf():(inputMs=localInput.valueOf(),this.clone().startOf(units).valueOf()<=inputMs&&inputMs<=this.clone().endOf(units).valueOf()))}function isSameOrAfter(input,units){return this.isSame(input,units)||this.isAfter(input,units)}function isSameOrBefore(input,units){return this.isSame(input,units)||this.isBefore(input,units)}function diff(input,units,asFloat){var that,zoneDelta,output;if(!this.isValid())return NaN;if(that=cloneWithOffset(input,this),!that.isValid())return NaN;switch(zoneDelta=6e4*(that.utcOffset()-this.utcOffset()),units=normalizeUnits(units)){case"year":output=monthDiff(this,that)/12;break;case"month":output=monthDiff(this,that);break;case"quarter":output=monthDiff(this,that)/3;break;case"second":output=(this-that)/1e3;break;case"minute":output=(this-that)/6e4;break;case"hour":output=(this-that)/36e5;break;case"day":output=(this-that-zoneDelta)/864e5;break;case"week":output=(this-that-zoneDelta)/6048e5;break;default:output=this-that}return asFloat?output:absFloor(output)}function monthDiff(a,b){var anchor2,adjust,wholeMonthDiff=12*(b.year()-a.year())+(b.month()-a.month()),anchor=a.clone().add(wholeMonthDiff,"months");return b-anchor<0?(anchor2=a.clone().add(wholeMonthDiff-1,"months"),adjust=(b-anchor)/(anchor-anchor2)):(anchor2=a.clone().add(wholeMonthDiff+1,"months"),adjust=(b-anchor)/(anchor2-anchor)),-(wholeMonthDiff+adjust)||0}function toString(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")}function toISOString(keepOffset){if(!this.isValid())return null;var utc=!0!==keepOffset,m=utc?this.clone().utc():this;return m.year()<0||m.year()>9999?formatMoment(m,utc?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):isFunction(Date.prototype.toISOString)?utc?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace("Z",formatMoment(m,"Z")):formatMoment(m,utc?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ")}function inspect(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var func="moment",zone="";this.isLocal()||(func=0===this.utcOffset()?"moment.utc":"moment.parseZone",zone="Z");var prefix="["+func+'("]',year=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY",suffix=zone+'[")]';return this.format(prefix+year+"-MM-DD[T]HH:mm:ss.SSS"+suffix)}function format(inputString){inputString||(inputString=this.isUtc()?hooks.defaultFormatUtc:hooks.defaultFormat);var output=formatMoment(this,inputString);return this.localeData().postformat(output)}function from(time,withoutSuffix){return this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())?createDuration({to:this,from:time}).locale(this.locale()).humanize(!withoutSuffix):this.localeData().invalidDate()}function fromNow(withoutSuffix){return this.from(createLocal(),withoutSuffix)}function to(time,withoutSuffix){return this.isValid()&&(isMoment(time)&&time.isValid()||createLocal(time).isValid())?createDuration({from:this,to:time}).locale(this.locale()).humanize(!withoutSuffix):this.localeData().invalidDate()}function toNow(withoutSuffix){return this.to(createLocal(),withoutSuffix)}function locale(key){var newLocaleData;return void 0===key?this._locale._abbr:(newLocaleData=getLocale(key),null!=newLocaleData&&(this._locale=newLocaleData),this)}function localeData(){return this._locale}function mod$1(dividend,divisor){return(dividend%divisor+divisor)%divisor}function localStartOfDate(y,m,d){return y<100&&y>=0?new Date(y+400,m,d)-MS_PER_400_YEARS:new Date(y,m,d).valueOf()}function utcStartOfDate(y,m,d){return y<100&&y>=0?Date.UTC(y+400,m,d)-MS_PER_400_YEARS:Date.UTC(y,m,d)}function startOf(units){var time;if(void 0===(units=normalizeUnits(units))||"millisecond"===units||!this.isValid())return this;var startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case"year":time=startOfDate(this.year(),0,1);break;case"quarter":time=startOfDate(this.year(),this.month()-this.month()%3,1);break;case"month":time=startOfDate(this.year(),this.month(),1);break;case"week":time=startOfDate(this.year(),this.month(),this.date()-this.weekday());break;case"isoWeek":time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1));break;case"day":case"date":time=startOfDate(this.year(),this.month(),this.date());break;case"hour":time=this._d.valueOf(),time-=mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR);break;case"minute":time=this._d.valueOf(),time-=mod$1(time,MS_PER_MINUTE);break;case"second":time=this._d.valueOf(),time-=mod$1(time,MS_PER_SECOND)}return this._d.setTime(time),hooks.updateOffset(this,!0),this}function endOf(units){var time;if(void 0===(units=normalizeUnits(units))||"millisecond"===units||!this.isValid())return this;var startOfDate=this._isUTC?utcStartOfDate:localStartOfDate;switch(units){case"year":time=startOfDate(this.year()+1,0,1)-1;break;case"quarter":time=startOfDate(this.year(),this.month()-this.month()%3+3,1)-1;break;case"month":time=startOfDate(this.year(),this.month()+1,1)-1;break;case"week":time=startOfDate(this.year(),this.month(),this.date()-this.weekday()+7)-1;break;case"isoWeek":time=startOfDate(this.year(),this.month(),this.date()-(this.isoWeekday()-1)+7)-1;break;case"day":case"date":time=startOfDate(this.year(),this.month(),this.date()+1)-1;break;case"hour":time=this._d.valueOf(),time+=MS_PER_HOUR-mod$1(time+(this._isUTC?0:this.utcOffset()*MS_PER_MINUTE),MS_PER_HOUR)-1;break;case"minute":time=this._d.valueOf(),time+=MS_PER_MINUTE-mod$1(time,MS_PER_MINUTE)-1;break;case"second":time=this._d.valueOf(),time+=MS_PER_SECOND-mod$1(time,MS_PER_SECOND)-1}return this._d.setTime(time),hooks.updateOffset(this,!0),this}function valueOf(){return this._d.valueOf()-6e4*(this._offset||0)}function unix(){return Math.floor(this.valueOf()/1e3)}function toDate(){return new Date(this.valueOf())}function toArray(){var m=this;return[m.year(),m.month(),m.date(),m.hour(),m.minute(),m.second(),m.millisecond()]}function toObject(){var m=this;return{years:m.year(),months:m.month(),date:m.date(),hours:m.hours(),minutes:m.minutes(),seconds:m.seconds(),milliseconds:m.milliseconds()}}function toJSON(){return this.isValid()?this.toISOString():null}function isValid$2(){return isValid(this)}function parsingFlags(){return extend({},getParsingFlags(this))}function invalidAt(){return getParsingFlags(this).overflow}function creationData(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}}function addWeekYearFormatToken(token,getter){addFormatToken(0,[token,token.length],0,getter)}function getSetWeekYear(input){return getSetWeekYearHelper.call(this,input,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)}function getSetISOWeekYear(input){return getSetWeekYearHelper.call(this,input,this.isoWeek(),this.isoWeekday(),1,4)}function getISOWeeksInYear(){return weeksInYear(this.year(),1,4)}function getWeeksInYear(){var weekInfo=this.localeData()._week;return weeksInYear(this.year(),weekInfo.dow,weekInfo.doy)}function getSetWeekYearHelper(input,week,weekday,dow,doy){var weeksTarget;return null==input?weekOfYear(this,dow,doy).year:(weeksTarget=weeksInYear(input,dow,doy),week>weeksTarget&&(week=weeksTarget),setWeekAll.call(this,input,week,weekday,dow,doy))}function setWeekAll(weekYear,week,weekday,dow,doy){var dayOfYearData=dayOfYearFromWeeks(weekYear,week,weekday,dow,doy),date=createUTCDate(dayOfYearData.year,0,dayOfYearData.dayOfYear);return this.year(date.getUTCFullYear()),this.month(date.getUTCMonth()),this.date(date.getUTCDate()),this}function getSetQuarter(input){return null==input?Math.ceil((this.month()+1)/3):this.month(3*(input-1)+this.month()%3)}function getSetDayOfYear(input){var dayOfYear=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==input?dayOfYear:this.add(input-dayOfYear,"d")}function parseMs(input,array){array[MILLISECOND]=toInt(1e3*("0."+input))}function getZoneAbbr(){return this._isUTC?"UTC":""}function getZoneName(){return this._isUTC?"Coordinated Universal Time":""}function createUnix(input){return createLocal(1e3*input)}function createInZone(){return createLocal.apply(null,arguments).parseZone()}function preParsePostFormat(string){return string}function get$1(format,index,field,setter){var locale=getLocale(),utc=createUTC().set(setter,index);return locale[field](utc,format)}function listMonthsImpl(format,index,field){if(isNumber(format)&&(index=format,format=void 0),format=format||"",null!=index)return get$1(format,index,field,"month");var i,out=[];for(i=0;i<12;i++)out[i]=get$1(format,i,field,"month");return out}function listWeekdaysImpl(localeSorted,format,index,field){"boolean"==typeof localeSorted?(isNumber(format)&&(index=format,format=void 0),format=format||""):(format=localeSorted,index=format,localeSorted=!1,isNumber(format)&&(index=format,format=void 0),format=format||"");var locale=getLocale(),shift=localeSorted?locale._week.dow:0;if(null!=index)return get$1(format,(index+shift)%7,field,"day");var i,out=[];for(i=0;i<7;i++)out[i]=get$1(format,(i+shift)%7,field,"day");return out}function listMonths(format,index){return listMonthsImpl(format,index,"months")}function listMonthsShort(format,index){return listMonthsImpl(format,index,"monthsShort")}function listWeekdays(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,"weekdays")}function listWeekdaysShort(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,"weekdaysShort")}function listWeekdaysMin(localeSorted,format,index){return listWeekdaysImpl(localeSorted,format,index,"weekdaysMin")}function abs(){var data=this._data;return this._milliseconds=mathAbs(this._milliseconds),this._days=mathAbs(this._days),this._months=mathAbs(this._months),data.milliseconds=mathAbs(data.milliseconds),data.seconds=mathAbs(data.seconds),data.minutes=mathAbs(data.minutes),data.hours=mathAbs(data.hours),data.months=mathAbs(data.months),data.years=mathAbs(data.years),this}function addSubtract$1(duration,input,value,direction){var other=createDuration(input,value);return duration._milliseconds+=direction*other._milliseconds,duration._days+=direction*other._days,duration._months+=direction*other._months,duration._bubble()}function add$1(input,value){return addSubtract$1(this,input,value,1)}function subtract$1(input,value){return addSubtract$1(this,input,value,-1)}function absCeil(number){return number<0?Math.floor(number):Math.ceil(number)}function bubble(){var seconds,minutes,hours,years,monthsFromDays,milliseconds=this._milliseconds,days=this._days,months=this._months,data=this._data;return milliseconds>=0&&days>=0&&months>=0||milliseconds<=0&&days<=0&&months<=0||(milliseconds+=864e5*absCeil(monthsToDays(months)+days),days=0,months=0),data.milliseconds=milliseconds%1e3,seconds=absFloor(milliseconds/1e3),data.seconds=seconds%60,minutes=absFloor(seconds/60),data.minutes=minutes%60,hours=absFloor(minutes/60),data.hours=hours%24,days+=absFloor(hours/24),monthsFromDays=absFloor(daysToMonths(days)),months+=monthsFromDays,days-=absCeil(monthsToDays(monthsFromDays)),years=absFloor(months/12),months%=12,data.days=days,data.months=months,data.years=years,this}function daysToMonths(days){return 4800*days/146097}function monthsToDays(months){return 146097*months/4800}function as(units){if(!this.isValid())return NaN;var days,months,milliseconds=this._milliseconds;if("month"===(units=normalizeUnits(units))||"quarter"===units||"year"===units)switch(days=this._days+milliseconds/864e5,months=this._months+daysToMonths(days),units){case"month":return months;case"quarter":return months/3;case"year":return months/12}else switch(days=this._days+Math.round(monthsToDays(this._months)),units){case"week":return days/7+milliseconds/6048e5;case"day":return days+milliseconds/864e5;case"hour":return 24*days+milliseconds/36e5;case"minute":return 1440*days+milliseconds/6e4;case"second":return 86400*days+milliseconds/1e3;case"millisecond":return Math.floor(864e5*days)+milliseconds;default:throw new Error("Unknown unit "+units)}}function valueOf$1(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*toInt(this._months/12):NaN}function makeAs(alias){return function(){return this.as(alias)}}function clone$1(){return createDuration(this)}function get$2(units){return units=normalizeUnits(units),this.isValid()?this[units+"s"]():NaN}function makeGetter(name){return function(){return this.isValid()?this._data[name]:NaN}}function weeks(){return absFloor(this.days()/7)}function substituteTimeAgo(string,number,withoutSuffix,isFuture,locale){return locale.relativeTime(number||1,!!withoutSuffix,string,isFuture)}function relativeTime$1(posNegDuration,withoutSuffix,locale){var duration=createDuration(posNegDuration).abs(),seconds=round(duration.as("s")),minutes=round(duration.as("m")),hours=round(duration.as("h")),days=round(duration.as("d")),months=round(duration.as("M")),years=round(duration.as("y")),a=seconds<=thresholds.ss&&["s",seconds]||seconds<thresholds.s&&["ss",seconds]||minutes<=1&&["m"]||minutes<thresholds.m&&["mm",minutes]||hours<=1&&["h"]||hours<thresholds.h&&["hh",hours]||days<=1&&["d"]||days<thresholds.d&&["dd",days]||months<=1&&["M"]||months<thresholds.M&&["MM",months]||years<=1&&["y"]||["yy",years];return a[2]=withoutSuffix,a[3]=+posNegDuration>0,a[4]=locale,substituteTimeAgo.apply(null,a)}function getSetRelativeTimeRounding(roundingFunction){return void 0===roundingFunction?round:"function"==typeof roundingFunction&&(round=roundingFunction,!0)}function getSetRelativeTimeThreshold(threshold,limit){return void 0!==thresholds[threshold]&&(void 0===limit?thresholds[threshold]:(thresholds[threshold]=limit,"s"===threshold&&(thresholds.ss=limit-1),!0))}function humanize(withSuffix){if(!this.isValid())return this.localeData().invalidDate();var locale=this.localeData(),output=relativeTime$1(this,!withSuffix,locale);return withSuffix&&(output=locale.pastFuture(+this,output)),locale.postformat(output)}function sign(x){return(x>0)-(x<0)||+x}function toISOString$1(){if(!this.isValid())return this.localeData().invalidDate();var minutes,hours,years,seconds=abs$1(this._milliseconds)/1e3,days=abs$1(this._days),months=abs$1(this._months);minutes=absFloor(seconds/60),hours=absFloor(minutes/60),seconds%=60,minutes%=60,years=absFloor(months/12),months%=12;var Y=years,M=months,D=days,h=hours,m=minutes,s=seconds?seconds.toFixed(3).replace(/\.?0+$/,""):"",total=this.asSeconds();if(!total)return"P0D";var totalSign=total<0?"-":"",ymSign=sign(this._months)!==sign(total)?"-":"",daysSign=sign(this._days)!==sign(total)?"-":"",hmsSign=sign(this._milliseconds)!==sign(total)?"-":"";return totalSign+"P"+(Y?ymSign+Y+"Y":"")+(M?ymSign+M+"M":"")+(D?daysSign+D+"D":"")+(h||m||s?"T":"")+(h?hmsSign+h+"H":"")+(m?hmsSign+m+"M":"")+(s?hmsSign+s+"S":"")}var hookCallback,some;some=Array.prototype.some?Array.prototype.some:function(fun){for(var t=Object(this),len=t.length>>>0,i=0;i<len;i++)if(i in t&&fun.call(this,t[i],i,t))return!0;return!1};var momentProperties=hooks.momentProperties=[],updateInProgress=!1,deprecations={};hooks.suppressDeprecationWarnings=!1,hooks.deprecationHandler=null;var keys;keys=Object.keys?Object.keys:function(obj){var i,res=[];for(i in obj)hasOwnProp(obj,i)&&res.push(i);return res};var defaultCalendar={sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},defaultLongDateFormat={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},defaultDayOfMonthOrdinalParse=/\d{1,2}/,defaultRelativeTime={future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},aliases={},priorities={},formattingTokens=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,localFormattingTokens=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,formatFunctions={},formatTokenFunctions={},match1=/\d/,match2=/\d\d/,match3=/\d{3}/,match4=/\d{4}/,match6=/[+-]?\d{6}/,match1to2=/\d\d?/,match3to4=/\d\d\d\d?/,match5to6=/\d\d\d\d\d\d?/,match1to3=/\d{1,3}/,match1to4=/\d{1,4}/,match1to6=/[+-]?\d{1,6}/,matchUnsigned=/\d+/,matchSigned=/[+-]?\d+/,matchOffset=/Z|[+-]\d\d:?\d\d/gi,matchShortOffset=/Z|[+-]\d\d(?::?\d\d)?/gi,matchTimestamp=/[+-]?\d+(\.\d{1,3})?/,matchWord=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,regexes={},tokens={},YEAR=0,MONTH=1,DATE=2,HOUR=3,MINUTE=4,SECOND=5,MILLISECOND=6,WEEK=7,WEEKDAY=8;addFormatToken("Y",0,0,function(){var y=this.year();return y<=9999?""+y:"+"+y}),addFormatToken(0,["YY",2],0,function(){return this.year()%100}),addFormatToken(0,["YYYY",4],0,"year"),addFormatToken(0,["YYYYY",5],0,"year"),addFormatToken(0,["YYYYYY",6,!0],0,"year"),addUnitAlias("year","y"),addUnitPriority("year",1),addRegexToken("Y",matchSigned),addRegexToken("YY",match1to2,match2),addRegexToken("YYYY",match1to4,match4),addRegexToken("YYYYY",match1to6,match6),addRegexToken("YYYYYY",match1to6,match6),addParseToken(["YYYYY","YYYYYY"],YEAR),addParseToken("YYYY",function(input,array){array[YEAR]=2===input.length?hooks.parseTwoDigitYear(input):toInt(input)}),addParseToken("YY",function(input,array){array[YEAR]=hooks.parseTwoDigitYear(input)}),addParseToken("Y",function(input,array){array[YEAR]=parseInt(input,10)}),hooks.parseTwoDigitYear=function(input){return toInt(input)+(toInt(input)>68?1900:2e3)};var indexOf,getSetYear=makeGetSet("FullYear",!0);indexOf=Array.prototype.indexOf?Array.prototype.indexOf:function(o){var i;for(i=0;i<this.length;++i)if(this[i]===o)return i;return-1},addFormatToken("M",["MM",2],"Mo",function(){return this.month()+1}),addFormatToken("MMM",0,0,function(format){return this.localeData().monthsShort(this,format)}),addFormatToken("MMMM",0,0,function(format){return this.localeData().months(this,format)}),addUnitAlias("month","M"),addUnitPriority("month",8),addRegexToken("M",match1to2),addRegexToken("MM",match1to2,match2),addRegexToken("MMM",function(isStrict,locale){return locale.monthsShortRegex(isStrict)}),addRegexToken("MMMM",function(isStrict,locale){return locale.monthsRegex(isStrict)}),addParseToken(["M","MM"],function(input,array){array[MONTH]=toInt(input)-1}),addParseToken(["MMM","MMMM"],function(input,array,config,token){var month=config._locale.monthsParse(input,token,config._strict);null!=month?array[MONTH]=month:getParsingFlags(config).invalidMonth=input});var MONTHS_IN_FORMAT=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,defaultLocaleMonths="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),defaultLocaleMonthsShort="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),defaultMonthsShortRegex=matchWord,defaultMonthsRegex=matchWord;addFormatToken("w",["ww",2],"wo","week"),addFormatToken("W",["WW",2],"Wo","isoWeek"),addUnitAlias("week","w"),addUnitAlias("isoWeek","W"),addUnitPriority("week",5),addUnitPriority("isoWeek",5),addRegexToken("w",match1to2),addRegexToken("ww",match1to2,match2),addRegexToken("W",match1to2),addRegexToken("WW",match1to2,match2),addWeekParseToken(["w","ww","W","WW"],function(input,week,config,token){week[token.substr(0,1)]=toInt(input)});var defaultLocaleWeek={dow:0,doy:6};addFormatToken("d",0,"do","day"),addFormatToken("dd",0,0,function(format){return this.localeData().weekdaysMin(this,format)}),addFormatToken("ddd",0,0,function(format){return this.localeData().weekdaysShort(this,format)}),addFormatToken("dddd",0,0,function(format){return this.localeData().weekdays(this,format)}),addFormatToken("e",0,0,"weekday"),addFormatToken("E",0,0,"isoWeekday"),addUnitAlias("day","d"),addUnitAlias("weekday","e"),addUnitAlias("isoWeekday","E"),addUnitPriority("day",11),addUnitPriority("weekday",11),addUnitPriority("isoWeekday",11),addRegexToken("d",match1to2),addRegexToken("e",match1to2),addRegexToken("E",match1to2),addRegexToken("dd",function(isStrict,locale){return locale.weekdaysMinRegex(isStrict)}),addRegexToken("ddd",function(isStrict,locale){return locale.weekdaysShortRegex(isStrict)}),addRegexToken("dddd",function(isStrict,locale){return locale.weekdaysRegex(isStrict)}),addWeekParseToken(["dd","ddd","dddd"],function(input,week,config,token){var weekday=config._locale.weekdaysParse(input,token,config._strict);null!=weekday?week.d=weekday:getParsingFlags(config).invalidWeekday=input}),addWeekParseToken(["d","e","E"],function(input,week,config,token){week[token]=toInt(input)});var defaultLocaleWeekdays="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),defaultLocaleWeekdaysShort="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),defaultLocaleWeekdaysMin="Su_Mo_Tu_We_Th_Fr_Sa".split("_"),defaultWeekdaysRegex=matchWord,defaultWeekdaysShortRegex=matchWord,defaultWeekdaysMinRegex=matchWord;addFormatToken("H",["HH",2],0,"hour"),addFormatToken("h",["hh",2],0,hFormat),addFormatToken("k",["kk",2],0,kFormat),addFormatToken("hmm",0,0,function(){return""+hFormat.apply(this)+zeroFill(this.minutes(),2)}),addFormatToken("hmmss",0,0,function(){return""+hFormat.apply(this)+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2)}),addFormatToken("Hmm",0,0,function(){return""+this.hours()+zeroFill(this.minutes(),2)}),addFormatToken("Hmmss",0,0,function(){return""+this.hours()+zeroFill(this.minutes(),2)+zeroFill(this.seconds(),2)}),meridiem("a",!0),meridiem("A",!1),addUnitAlias("hour","h"),addUnitPriority("hour",13),addRegexToken("a",matchMeridiem),addRegexToken("A",matchMeridiem),addRegexToken("H",match1to2),addRegexToken("h",match1to2),addRegexToken("k",match1to2),addRegexToken("HH",match1to2,match2),addRegexToken("hh",match1to2,match2),addRegexToken("kk",match1to2,match2),addRegexToken("hmm",match3to4),addRegexToken("hmmss",match5to6),addRegexToken("Hmm",match3to4),addRegexToken("Hmmss",match5to6),addParseToken(["H","HH"],HOUR),addParseToken(["k","kk"],function(input,array,config){var kInput=toInt(input);array[HOUR]=24===kInput?0:kInput}),addParseToken(["a","A"],function(input,array,config){config._isPm=config._locale.isPM(input),config._meridiem=input}),addParseToken(["h","hh"],function(input,array,config){array[HOUR]=toInt(input),getParsingFlags(config).bigHour=!0}),addParseToken("hmm",function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos)),array[MINUTE]=toInt(input.substr(pos)),getParsingFlags(config).bigHour=!0}),addParseToken("hmmss",function(input,array,config){var pos1=input.length-4,pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1)),array[MINUTE]=toInt(input.substr(pos1,2)),array[SECOND]=toInt(input.substr(pos2)),getParsingFlags(config).bigHour=!0}),addParseToken("Hmm",function(input,array,config){var pos=input.length-2;array[HOUR]=toInt(input.substr(0,pos)),array[MINUTE]=toInt(input.substr(pos))}),addParseToken("Hmmss",function(input,array,config){var pos1=input.length-4,pos2=input.length-2;array[HOUR]=toInt(input.substr(0,pos1)),array[MINUTE]=toInt(input.substr(pos1,2)),array[SECOND]=toInt(input.substr(pos2))});var globalLocale,defaultLocaleMeridiemParse=/[ap]\.?m?\.?/i,getSetHour=makeGetSet("Hours",!0),baseConfig={calendar:defaultCalendar,longDateFormat:defaultLongDateFormat,invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:defaultDayOfMonthOrdinalParse,relativeTime:defaultRelativeTime,months:defaultLocaleMonths,monthsShort:defaultLocaleMonthsShort,week:defaultLocaleWeek,weekdays:defaultLocaleWeekdays,weekdaysMin:defaultLocaleWeekdaysMin,weekdaysShort:defaultLocaleWeekdaysShort,meridiemParse:defaultLocaleMeridiemParse
},locales={},localeFamilies={},extendedIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,basicIsoRegex=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,tzRegex=/Z|[+-]\d\d(?::?\d\d)?/,isoDates=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],isoTimes=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],aspNetJsonRegex=/^\/?Date\((\-?\d+)/i,rfc2822=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,obsOffsets={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};hooks.createFromInputFallback=deprecate("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",function(config){config._d=new Date(config._i+(config._useUTC?" UTC":""))}),hooks.ISO_8601=function(){},hooks.RFC_2822=function(){};var prototypeMin=deprecate("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var other=createLocal.apply(null,arguments);return this.isValid()&&other.isValid()?other<this?this:other:createInvalid()}),prototypeMax=deprecate("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var other=createLocal.apply(null,arguments);return this.isValid()&&other.isValid()?other>this?this:other:createInvalid()}),now=function(){return Date.now?Date.now():+new Date},ordering=["year","quarter","month","week","day","hour","minute","second","millisecond"];offset("Z",":"),offset("ZZ",""),addRegexToken("Z",matchShortOffset),addRegexToken("ZZ",matchShortOffset),addParseToken(["Z","ZZ"],function(input,array,config){config._useUTC=!0,config._tzm=offsetFromString(matchShortOffset,input)});var chunkOffset=/([\+\-]|\d\d)/gi;hooks.updateOffset=function(){};var aspNetRegex=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,isoRegex=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;createDuration.fn=Duration.prototype,createDuration.invalid=createInvalid$1;var add=createAdder(1,"add"),subtract=createAdder(-1,"subtract");hooks.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",hooks.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var lang=deprecate("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(key){return void 0===key?this.localeData():this.locale(key)}),MS_PER_SECOND=1e3,MS_PER_MINUTE=60*MS_PER_SECOND,MS_PER_HOUR=60*MS_PER_MINUTE,MS_PER_400_YEARS=3506328*MS_PER_HOUR;addFormatToken(0,["gg",2],0,function(){return this.weekYear()%100}),addFormatToken(0,["GG",2],0,function(){return this.isoWeekYear()%100}),addWeekYearFormatToken("gggg","weekYear"),addWeekYearFormatToken("ggggg","weekYear"),addWeekYearFormatToken("GGGG","isoWeekYear"),addWeekYearFormatToken("GGGGG","isoWeekYear"),addUnitAlias("weekYear","gg"),addUnitAlias("isoWeekYear","GG"),addUnitPriority("weekYear",1),addUnitPriority("isoWeekYear",1),addRegexToken("G",matchSigned),addRegexToken("g",matchSigned),addRegexToken("GG",match1to2,match2),addRegexToken("gg",match1to2,match2),addRegexToken("GGGG",match1to4,match4),addRegexToken("gggg",match1to4,match4),addRegexToken("GGGGG",match1to6,match6),addRegexToken("ggggg",match1to6,match6),addWeekParseToken(["gggg","ggggg","GGGG","GGGGG"],function(input,week,config,token){week[token.substr(0,2)]=toInt(input)}),addWeekParseToken(["gg","GG"],function(input,week,config,token){week[token]=hooks.parseTwoDigitYear(input)}),addFormatToken("Q",0,"Qo","quarter"),addUnitAlias("quarter","Q"),addUnitPriority("quarter",7),addRegexToken("Q",match1),addParseToken("Q",function(input,array){array[MONTH]=3*(toInt(input)-1)}),addFormatToken("D",["DD",2],"Do","date"),addUnitAlias("date","D"),addUnitPriority("date",9),addRegexToken("D",match1to2),addRegexToken("DD",match1to2,match2),addRegexToken("Do",function(isStrict,locale){return isStrict?locale._dayOfMonthOrdinalParse||locale._ordinalParse:locale._dayOfMonthOrdinalParseLenient}),addParseToken(["D","DD"],DATE),addParseToken("Do",function(input,array){array[DATE]=toInt(input.match(match1to2)[0])});var getSetDayOfMonth=makeGetSet("Date",!0);addFormatToken("DDD",["DDDD",3],"DDDo","dayOfYear"),addUnitAlias("dayOfYear","DDD"),addUnitPriority("dayOfYear",4),addRegexToken("DDD",match1to3),addRegexToken("DDDD",match3),addParseToken(["DDD","DDDD"],function(input,array,config){config._dayOfYear=toInt(input)}),addFormatToken("m",["mm",2],0,"minute"),addUnitAlias("minute","m"),addUnitPriority("minute",14),addRegexToken("m",match1to2),addRegexToken("mm",match1to2,match2),addParseToken(["m","mm"],MINUTE);var getSetMinute=makeGetSet("Minutes",!1);addFormatToken("s",["ss",2],0,"second"),addUnitAlias("second","s"),addUnitPriority("second",15),addRegexToken("s",match1to2),addRegexToken("ss",match1to2,match2),addParseToken(["s","ss"],SECOND);var getSetSecond=makeGetSet("Seconds",!1);addFormatToken("S",0,0,function(){return~~(this.millisecond()/100)}),addFormatToken(0,["SS",2],0,function(){return~~(this.millisecond()/10)}),addFormatToken(0,["SSS",3],0,"millisecond"),addFormatToken(0,["SSSS",4],0,function(){return 10*this.millisecond()}),addFormatToken(0,["SSSSS",5],0,function(){return 100*this.millisecond()}),addFormatToken(0,["SSSSSS",6],0,function(){return 1e3*this.millisecond()}),addFormatToken(0,["SSSSSSS",7],0,function(){return 1e4*this.millisecond()}),addFormatToken(0,["SSSSSSSS",8],0,function(){return 1e5*this.millisecond()}),addFormatToken(0,["SSSSSSSSS",9],0,function(){return 1e6*this.millisecond()}),addUnitAlias("millisecond","ms"),addUnitPriority("millisecond",16),addRegexToken("S",match1to3,match1),addRegexToken("SS",match1to3,match2),addRegexToken("SSS",match1to3,match3);var token;for(token="SSSS";token.length<=9;token+="S")addRegexToken(token,matchUnsigned);for(token="S";token.length<=9;token+="S")addParseToken(token,parseMs);var getSetMillisecond=makeGetSet("Milliseconds",!1);addFormatToken("z",0,0,"zoneAbbr"),addFormatToken("zz",0,0,"zoneName");var proto=Moment.prototype;proto.add=add,proto.calendar=calendar$1,proto.clone=clone,proto.diff=diff,proto.endOf=endOf,proto.format=format,proto.from=from,proto.fromNow=fromNow,proto.to=to,proto.toNow=toNow,proto.get=stringGet,proto.invalidAt=invalidAt,proto.isAfter=isAfter,proto.isBefore=isBefore,proto.isBetween=isBetween,proto.isSame=isSame,proto.isSameOrAfter=isSameOrAfter,proto.isSameOrBefore=isSameOrBefore,proto.isValid=isValid$2,proto.lang=lang,proto.locale=locale,proto.localeData=localeData,proto.max=prototypeMax,proto.min=prototypeMin,proto.parsingFlags=parsingFlags,proto.set=stringSet,proto.startOf=startOf,proto.subtract=subtract,proto.toArray=toArray,proto.toObject=toObject,proto.toDate=toDate,proto.toISOString=toISOString,proto.inspect=inspect,proto.toJSON=toJSON,proto.toString=toString,proto.unix=unix,proto.valueOf=valueOf,proto.creationData=creationData,proto.year=getSetYear,proto.isLeapYear=getIsLeapYear,proto.weekYear=getSetWeekYear,proto.isoWeekYear=getSetISOWeekYear,proto.quarter=proto.quarters=getSetQuarter,proto.month=getSetMonth,proto.daysInMonth=getDaysInMonth,proto.week=proto.weeks=getSetWeek,proto.isoWeek=proto.isoWeeks=getSetISOWeek,proto.weeksInYear=getWeeksInYear,proto.isoWeeksInYear=getISOWeeksInYear,proto.date=getSetDayOfMonth,proto.day=proto.days=getSetDayOfWeek,proto.weekday=getSetLocaleDayOfWeek,proto.isoWeekday=getSetISODayOfWeek,proto.dayOfYear=getSetDayOfYear,proto.hour=proto.hours=getSetHour,proto.minute=proto.minutes=getSetMinute,proto.second=proto.seconds=getSetSecond,proto.millisecond=proto.milliseconds=getSetMillisecond,proto.utcOffset=getSetOffset,proto.utc=setOffsetToUTC,proto.local=setOffsetToLocal,proto.parseZone=setOffsetToParsedOffset,proto.hasAlignedHourOffset=hasAlignedHourOffset,proto.isDST=isDaylightSavingTime,proto.isLocal=isLocal,proto.isUtcOffset=isUtcOffset,proto.isUtc=isUtc,proto.isUTC=isUtc,proto.zoneAbbr=getZoneAbbr,proto.zoneName=getZoneName,proto.dates=deprecate("dates accessor is deprecated. Use date instead.",getSetDayOfMonth),proto.months=deprecate("months accessor is deprecated. Use month instead",getSetMonth),proto.years=deprecate("years accessor is deprecated. Use year instead",getSetYear),proto.zone=deprecate("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",getSetZone),proto.isDSTShifted=deprecate("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",isDaylightSavingTimeShifted);var proto$1=Locale.prototype;proto$1.calendar=calendar,proto$1.longDateFormat=longDateFormat,proto$1.invalidDate=invalidDate,proto$1.ordinal=ordinal,proto$1.preparse=preParsePostFormat,proto$1.postformat=preParsePostFormat,proto$1.relativeTime=relativeTime,proto$1.pastFuture=pastFuture,proto$1.set=set,proto$1.months=localeMonths,proto$1.monthsShort=localeMonthsShort,proto$1.monthsParse=localeMonthsParse,proto$1.monthsRegex=monthsRegex,proto$1.monthsShortRegex=monthsShortRegex,proto$1.week=localeWeek,proto$1.firstDayOfYear=localeFirstDayOfYear,proto$1.firstDayOfWeek=localeFirstDayOfWeek,proto$1.weekdays=localeWeekdays,proto$1.weekdaysMin=localeWeekdaysMin,proto$1.weekdaysShort=localeWeekdaysShort,proto$1.weekdaysParse=localeWeekdaysParse,proto$1.weekdaysRegex=weekdaysRegex,proto$1.weekdaysShortRegex=weekdaysShortRegex,proto$1.weekdaysMinRegex=weekdaysMinRegex,proto$1.isPM=localeIsPM,proto$1.meridiem=localeMeridiem,getSetGlobalLocale("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(number){var b=number%10;return number+(1===toInt(number%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th")}}),hooks.lang=deprecate("moment.lang is deprecated. Use moment.locale instead.",getSetGlobalLocale),hooks.langData=deprecate("moment.langData is deprecated. Use moment.localeData instead.",getLocale);var mathAbs=Math.abs,asMilliseconds=makeAs("ms"),asSeconds=makeAs("s"),asMinutes=makeAs("m"),asHours=makeAs("h"),asDays=makeAs("d"),asWeeks=makeAs("w"),asMonths=makeAs("M"),asQuarters=makeAs("Q"),asYears=makeAs("y"),milliseconds=makeGetter("milliseconds"),seconds=makeGetter("seconds"),minutes=makeGetter("minutes"),hours=makeGetter("hours"),days=makeGetter("days"),months=makeGetter("months"),years=makeGetter("years"),round=Math.round,thresholds={ss:44,s:45,m:45,h:22,d:26,M:11},abs$1=Math.abs,proto$2=Duration.prototype;return proto$2.isValid=isValid$1,proto$2.abs=abs,proto$2.add=add$1,proto$2.subtract=subtract$1,proto$2.as=as,proto$2.asMilliseconds=asMilliseconds,proto$2.asSeconds=asSeconds,proto$2.asMinutes=asMinutes,proto$2.asHours=asHours,proto$2.asDays=asDays,proto$2.asWeeks=asWeeks,proto$2.asMonths=asMonths,proto$2.asQuarters=asQuarters,proto$2.asYears=asYears,proto$2.valueOf=valueOf$1,proto$2._bubble=bubble,proto$2.clone=clone$1,proto$2.get=get$2,proto$2.milliseconds=milliseconds,proto$2.seconds=seconds,proto$2.minutes=minutes,proto$2.hours=hours,proto$2.days=days,proto$2.weeks=weeks,proto$2.months=months,proto$2.years=years,proto$2.humanize=humanize,proto$2.toISOString=toISOString$1,proto$2.toString=toISOString$1,proto$2.toJSON=toISOString$1,proto$2.locale=locale,proto$2.localeData=localeData,proto$2.toIsoString=deprecate("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",toISOString$1),proto$2.lang=lang,addFormatToken("X",0,0,"unix"),addFormatToken("x",0,0,"valueOf"),addRegexToken("x",matchSigned),addRegexToken("X",matchTimestamp),addParseToken("X",function(input,array,config){config._d=new Date(1e3*parseFloat(input,10))}),addParseToken("x",function(input,array,config){config._d=new Date(toInt(input))}),hooks.version="2.24.0",function(callback){hookCallback=callback}(createLocal),hooks.fn=proto,hooks.min=min,hooks.max=max,hooks.now=now,hooks.utc=createUTC,hooks.unix=createUnix,hooks.months=listMonths,hooks.isDate=isDate,hooks.locale=getSetGlobalLocale,hooks.invalid=createInvalid,hooks.duration=createDuration,hooks.isMoment=isMoment,hooks.weekdays=listWeekdays,hooks.parseZone=createInZone,hooks.localeData=getLocale,hooks.isDuration=isDuration,hooks.monthsShort=listMonthsShort,hooks.weekdaysMin=listWeekdaysMin,hooks.defineLocale=defineLocale,hooks.updateLocale=updateLocale,hooks.locales=listLocales,hooks.weekdaysShort=listWeekdaysShort,hooks.normalizeUnits=normalizeUnits,hooks.relativeTimeRounding=getSetRelativeTimeRounding,hooks.relativeTimeThreshold=getSetRelativeTimeThreshold,hooks.calendarFormat=getCalendarFormat,hooks.prototype=proto,hooks.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"GGGG-[W]WW",MONTH:"YYYY-MM"},hooks})},{}],4:[function(require,module,exports){module.exports.stats={year:2016,total:177188140,totalDelta:"+93%",totalTb:1309.74637,tbDelta:"+47%",days:366,dayAverage:484121,highest:760161,highestDay:"2016-10-19",average:{Tuesday:588849,Friday:519778,Sunday:287763,Thursday:581093,Monday:548678,Saturday:283761,Wednesday:582086},osPercent:{linux:.698309,linuxDelta:"+13%",macos:.053815,macosDelta:"-2%",windows:.247876,windowsDelta:"-11%"},topDevelopingCountries:[{name:"China",downloads:10297364},{name:"India",downloads:2637543},{name:"Brazil",downloads:1367484},{name:"Russia",downloads:1299697},{name:"Indonesia",downloads:878193}],newContributors:476,newContributorsDelta:"+97%",releasesMonthAverage:5.833333,releasesMonthAverageDelta:"-1.4%",topReleaseMonths:[{count:10,months:["Feb","Mar"]},{count:9,months:["Oct"]},{count:7,months:["May","Jun"]}]},module.exports.totals={labels:["Jan-1","Jan-2","Jan-3","Jan-4","Jan-5","Jan-6","Jan-7","Jan-8","Jan-9","Jan-10","Jan-11","Jan-12","Jan-13","Jan-14","Jan-15","Jan-16","Jan-17","Jan-18","Jan-19","Jan-20","Jan-21","Jan-22","Jan-23","Jan-24","Jan-25","Jan-26","Jan-27","Jan-28","Jan-29","Jan-30","Jan-31","Feb-1","Feb-2","Feb-3","Feb-4","Feb-5","Feb-6","Feb-7","Feb-8","Feb-9","Feb-10","Feb-11","Feb-12","Feb-13","Feb-14","Feb-15","Feb-16","Feb-17","Feb-18","Feb-19","Feb-20","Feb-21","Feb-22","Feb-23","Feb-24","Feb-25","Feb-26","Feb-27","Feb-28","Feb-29","Mar-1","Mar-2","Mar-3","Mar-4","Mar-5","Mar-6","Mar-7","Mar-8","Mar-9","Mar-10","Mar-11","Mar-12","Mar-13","Mar-14","Mar-15","Mar-16","Mar-17","Mar-18","Mar-19","Mar-20","Mar-21","Mar-22","Mar-23","Mar-24","Mar-25","Mar-26","Mar-27","Mar-28","Mar-29","Mar-30","Mar-31","Apr-1","Apr-2","Apr-3","Apr-4","Apr-5","Apr-6","Apr-7","Apr-8","Apr-9","Apr-10","Apr-11","Apr-12","Apr-13","Apr-14","Apr-15","Apr-16","Apr-17","Apr-18","Apr-19","Apr-20","Apr-21","Apr-22","Apr-23","Apr-24","Apr-25","Apr-26","Apr-27","Apr-28","Apr-29","Apr-30","May-1","May-2","May-3","May-4","May-5","May-6","May-7","May-8","May-9","May-10","May-11","May-12","May-13","May-14","May-15","May-16","May-17","May-18","May-19","May-20","May-21","May-22","May-23","May-24","May-25","May-26","May-27","May-28","May-29","May-30","May-31","Jun-1","Jun-2","Jun-3","Jun-4","Jun-5","Jun-6","Jun-7","Jun-8","Jun-9","Jun-10","Jun-11","Jun-12","Jun-13","Jun-14","Jun-15","Jun-16","Jun-17","Jun-18","Jun-19","Jun-20","Jun-21","Jun-22","Jun-23","Jun-24","Jun-25","Jun-26","Jun-27","Jun-28","Jun-29","Jun-30","Jul-1","Jul-2","Jul-3","Jul-4","Jul-5","Jul-6","Jul-7","Jul-8","Jul-9","Jul-10","Jul-11","Jul-12","Jul-13","Jul-14","Jul-15","Jul-16","Jul-17","Jul-18","Jul-19","Jul-20","Jul-21","Jul-22","Jul-23","Jul-24","Jul-25","Jul-26","Jul-27","Jul-28","Jul-29","Jul-30","Jul-31","Aug-1","Aug-2","Aug-3","Aug-4","Aug-5","Aug-6","Aug-7","Aug-8","Aug-9","Aug-10","Aug-11","Aug-12","Aug-13","Aug-14","Aug-15","Aug-16","Aug-17","Aug-18","Aug-19","Aug-20","Aug-21","Aug-22","Aug-23","Aug-24","Aug-25","Aug-26","Aug-27","Aug-28","Aug-29","Aug-30","Aug-31","Sep-1","Sep-2","Sep-3","Sep-4","Sep-5","Sep-6","Sep-7","Sep-8","Sep-9","Sep-10","Sep-11","Sep-12","Sep-13","Sep-14","Sep-15","Sep-16","Sep-17","Sep-18","Sep-19","Sep-20","Sep-21","Sep-22","Sep-23","Sep-24","Sep-25","Sep-26","Sep-27","Sep-28","Sep-29","Sep-30","Oct-1","Oct-2","Oct-3","Oct-4","Oct-5","Oct-6","Oct-7","Oct-8","Oct-9","Oct-10","Oct-11","Oct-12","Oct-13","Oct-14","Oct-15","Oct-16","Oct-17","Oct-18","Oct-19","Oct-20","Oct-21","Oct-22","Oct-23","Oct-24","Oct-25","Oct-26","Oct-27","Oct-28","Oct-29","Oct-30","Oct-31","Nov-1","Nov-2","Nov-3","Nov-4","Nov-5","Nov-6","Nov-7","Nov-8","Nov-9","Nov-10","Nov-11","Nov-12","Nov-13","Nov-14","Nov-15","Nov-16","Nov-17","Nov-18","Nov-19","Nov-20","Nov-21","Nov-22","Nov-23","Nov-24","Nov-25","Nov-26","Nov-27","Nov-28","Nov-29","Nov-30","Dec-1","Dec-2","Dec-3","Dec-4","Dec-5","Dec-6","Dec-7","Dec-8","Dec-9","Dec-10","Dec-11","Dec-12","Dec-13","Dec-14","Dec-15","Dec-16","Dec-17","Dec-18","Dec-19","Dec-20","Dec-21","Dec-22","Dec-23","Dec-24","Dec-25","Dec-26","Dec-27","Dec-28","Dec-29","Dec-30","Dec-31"],data:[{year:2016,tot:{label:"2016",data:[171890,178659,200421,445077,460734,466369,476689,406257,237887,245531,431511,443190,438874,412776,367827,214503,215058,375127,427068,431546,457788,403021,211667,238789,432153,443846,440777,440992,382815,226608,226382,432821,442385,445060,427130,382246,201528,208073,396889,472874,530050,527100,464495,257312,276496,476635,536865,555868,545878,464217,255433,275407,483005,502732,512326,519864,474888,254128,261281,478674,497794,510401,513479,518984,279921,289547,564183,564309,575935,574001,492551,263628,264844,516818,524934,526266,527497,485966,272815,267298,499323,525482,520641,486033,388043,245179,242495,433048,504827,502444,498208,498998,249959,243730,482784,514837,522399,619373,595470,386871,408805,640774,653359,651448,620650,595537,396331,389989,637081,674174,681030,677351,605793,388816,390273,647518,624257,588057,554346,481359,266339,264127,505420,539818,556298,505412,521697,273476,253577,524697,549724,544091,531938,472439,244494,246567,489420,548713,554301,550500,490428,252122,267940,552511,570891,552206,526869,456895,243744,258370,398749,524307,538378,544965,481812,250021,253368,538871,596994,588888,567982,516672,302202,291843,551039,588226,571865,556965,501501,272645,280739,576660,585001,581325,585425,561405,302845,331392,591791,600600,602114,593909,524590,289949,310775,447905,606132,576701,599773,523903,287404,298313,573453,602282,588320,561571,515823,262949,289059,572610,585804,596728,611679,564076,282112,288042,562701,697270,655943,571130,518341,268529,274629,574575,576413,563932,571468,508786,267819,279142,576686,578093,585790,559484,510081,239534,249598,499344,583439,590774,571914,566657,290622,327625,603185,599842,606866,610967,528933,261167,287185,567075,603925,598370,585953,499670,233123,245837,414770,572255,586015,587198,519621,280943,279247,552812,591519,563649,552826,513513,275253,290549,584180,618191,593590,585598,545802,284202,301440,616351,647533,747619,717829,630553,326814,315469,637724,663453,686437,685644,603571,318061,346646,659330,644445,169241,660323,661050,377055,333030,699480,731853,760161,752959,619905,337750,316058,708530,715868,700650,674736,628204,335826,336316,636819,667880,691898,753800,641344,316918,307033,649693,692841,684716,705172,627847,330937,326922,671166,735674,731322,719466,671722,364808,333590,670321,736837,718722,599821,556662,338057,326083,668997,722230,702933,679399,652889,348674,332376,659919,725510,745024,708913,751012,334049,322849,659395,705012,709183,669639,606954,313290,299291,612067,667757,658085,600699,458551,271151,254276,349614,430152,466871,475783,414993,273237]},avg:{label:"2016 (7-day Average)",data:[250521,251534,253819,272456,289305,308897,342834,376315,384776,391220,389282,386776,382848,373718,368228,364887,360534,352479,350176,349129,355559,360587,360182,363572,371718,374115,375434,373035,370148,372282,370510,370605,370397,371009,369028,368947,365364,362749,357615,361971,374112,388394,400144,408113,417888,429280,438421,442110,444792,444753,444484,444329,445239,440362,434142,430426,431950,431764,429746,429127,428422,428147,427235,433534,437219,441257,453472,462974,472336,480982,477206,474879,471350,464583,458958,451863,445219,444279,445591,445942,443442,443521,442717,436794,422805,418857,415313,405845,402895,400295,402034,417885,418568,418744,425850,427280,430130,447440,461221,480780,504362,526932,546721,565157,565339,565349,566700,564012,563485,566458,570684,578784,580249,579176,579216,580707,573576,560295,542722,524946,507449,489429,469129,457066,452529,445539,451301,452321,450814,453567,454983,453239,457028,449991,445851,444850,439810,439666,441124,443776,446346,447435,450489,459502,462670,462371,458995,454204,453008,451640,429674,423020,421044,423629,427189,428086,427371,447388,457772,464988,468276,473256,480711,486207,487945,486693,484261,482687,480520,476297,474711,478371,477910,479262,483328,491885,496200,503436,505597,507826,510796,512008,506748,504906,501961,481406,482196,478565,479403,479305,478941,477161,495097,494547,496206,490749,489595,486101,484779,484659,482305,483506,490664,497557,500295,500150,498734,514658,523117,517324,510791,508850,506934,508631,491365,478221,478269,476904,476803,477447,477749,477989,481112,479400,479585,475544,471323,460274,461038,461750,463526,471608,478906,490053,504888,507231,509530,515109,509720,505512,499735,494576,495159,493946,490372,486192,482185,476279,454521,449996,448231,448409,451259,458091,462864,482584,485336,482141,477231,476358,475545,477160,481641,485451,489728,494410,499023,500301,501857,506453,510645,532649,551539,563646,569734,571738,574791,577065,568325,563727,559873,558622,563076,566163,563447,489562,485945,494156,502584,500639,506374,518861,603278,616512,610634,605019,602595,603888,601604,593102,581928,583113,582838,585732,575488,568633,567382,578677,580554,577853,573670,575509,579075,578049,571102,569174,571177,574018,577085,583204,589862,591904,598172,603011,603964,603843,604009,602209,585117,568680,564858,563786,563597,561510,559254,570623,584369,585886,586785,585488,585957,591970,596186,610204,608114,606753,606678,603750,598630,593019,572440,569474,566109,559348,554025,546726,536877,515677,509657,503226,465733,431789,404473,386628,380405,380703]}},{year:2015,tot:{label:"2015",data:[92424,120192,101056,108490,168980,179636,174979,180462,172450,113410,112090,177606,190363,197193,193907,180219,117040,106964,169275,200787,210771,206343,202689,129219,118730,200184,231376,220083,234408,220494,135461,124171,220429,224897,236447,232886,207278,143086,132864,243890,359437,223927,247769,205644,127090,119714,186400,199991,202373,207451,202303,127120,123142,205513,222980,219069,225407,212218,148092,125364,17934,197193,225474,225536,227086,144380,135779,219038,235651,243520,263775,230459,143285,136022,244599,250953,253945,251477,245311,143516,137093,249129,280860,274193,295603,259407,162945,138082,252951,278114,270749,261795,212238,140080,137152,199717,254910,244996,244766,235848,127147,117948,229596,245880,245691,243735,226096,126344,136043,248609,252853,280185,315946,277625,220040,174455,333752,301413,307930,301171,244157,175912,163518,272441,293251,322770,333866,310257,212529,268931,341604,373542,342275,321343,296144,228615,249545,363625,332565,319723,328135,304081,209147,189610,262343,320643,328462,319907,340233,240045,275954,240569,332587,404256,440453,393511,281869,273935,374462,376120,379091,356759,333551,195871,195059,327500,330806,331169,336994,302780,201681,191050,304668,346918,353801,309703,257828,148511,209356,31524,247696,283723,259574,211225,158696,166488,282177,294210,295436,286185,289549,171610,148080,286503,297435,297790,303944,266196,141490,137854,284859,313438,313762,294750,270955,161433,150641,287002,313333,315958,323756,279090,163419,151115,286230,314249,300033,513474,268983,144077,135277,290880,302999,293743,300923,281184,148635,142615,289802,319480,317376,313793,293430,162605,170347,314098,329700,319161,320571,294644,151258,159994,294144,33301,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,284407,379901,374408,363805,334885,176106,174296,346513,369744,371322,355936,327162,165022,163639,364143,375118,380505,400825,343780,174977,173843,344195,402298,390458,397274,372997,188865,188872,380290,394756,391571,390877,343802,205525,193052,408144,403468,409251,413403,383537,193458,220059,427098,410959,412064,417195,360260,195948,204879,406290,399431,392254,396226,361864,188118,207938,399946,421781,418086,428726,377253,203062,209366,411152,470850,408779,333528,308043,200294,216800,434759,453101,427776,436390,444273,219471,236638,449750,461311,487658,479844,419188,218359,235530,485652,483571,475990,459877,405401,203308,222019,435326,418891,373204,252394,191022,171570,184423,314616,342797,329220,239134]},avg:{label:"2015 (7-day Average)",data:[118446,117767,117087,117743,120997,126859,135108,147685,155150,156915,157429,158661,160194,163367,165288,166398,166916,166184,164994,166483,168423,170199,173409,175149,176830,181246,185616,186946,190955,193499,194390,195168,198060,197134,199472,199255,197367,198456,199698,203049,222269,220481,222607,222373,220088,218210,209997,187219,184140,178380,177903,177907,178397,181127,184411,186796,189362,190778,193774,194091,167294,163611,164526,164544,166668,166138,167626,196355,201849,204427,209889,210371,210215,210250,213901,216087,217576,215820,217941,217974,218127,218774,223047,225939,232243,234257,237032,237174,237720,237327,236835,232006,225267,222001,221868,214263,210948,207269,204837,208209,206362,203618,207887,206597,206696,206549,205156,205041,207626,210342,211338,216266,226582,233943,247328,252816,264979,271916,275880,273769,268988,262684,261121,252363,251197,253317,257987,267430,272661,287720,297601,309071,311857,310068,308052,310350,307581,310727,304873,301651,302621,303755,300974,292412,277943,276240,277488,276313,281477,285891,298226,295116,296822,307650,324871,332482,338457,338168,357296,363515,359920,347963,339398,327112,315844,309135,302662,295816,292992,288597,289427,288854,285592,287894,291127,287228,280807,273211,275826,236805,222631,212620,205458,198801,200256,194132,229939,236584,238258,242059,253248,255093,252463,253081,253542,253878,256415,253079,248776,247316,247081,249367,251649,250335,251015,253864,255691,255997,255982,256296,260439,261601,261885,261953,261843,261973,259698,286801,285357,282594,280331,280996,279389,278490,248126,249869,250520,251568,251414,253768,257145,258983,260733,262728,266690,270161,271621,271876,272844,273018,271397,269918,267067,224724,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,219759,228235,239630,269994,294978,278116,298258,307130,305679,305238,304114,303011,301427,299905,302424,303191,304503,310916,313290,314712,316170,313320,317203,318625,318117,322291,324275,326422,331579,330501,330660,329746,325576,327956,328553,332532,333777,336302,339520,345197,343473,347331,350039,351109,351511,352052,348727,349083,346914,343942,342295,339465,336469,336698,335580,336017,335111,338303,341994,346637,348835,350970,351174,352775,359785,358455,344855,334968,334573,335635,339007,336472,339185,353880,373341,376081,378915,381057,382229,390784,396992,393408,393249,393091,398220,401400,399733,396881,394911,392761,390831,383641,374401,359718,330077,299452,294918,289547,272302,261432,255148,253254]}},{year:2014,tot:{label:"2014",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,106475,116479,117920,102612,72394,71766,107595,114862,118338,114744,107766,71106,66055,95440,106903,113806,109204,98857,64711,61422,96423,111009,113035,108170,103189,67751,60894,102157,112295,110249,104993,102658,62898,59501,102472,116621,109719,111920,104020,69619,66510,117288,117120,113601,115356,109763,72582,67679,106141,117254,117180,114254,93282,63074,64598,108883,112276,111745,114984,112584,75248,65119,110671,115671,114421,112600,108284,80707,75944,123877,130509,125327,124412,119544,82371,78666,123054,124052,127417,128831,128984,83033,81497,125602,139158,138741,141166,131073,78104,80433,134390,138289,141550,140794,125491,86591,76802,134654,153685,155447,146627,140153,85281,79632,134902,152158,139254,137080,126566,75595,74904,108250,134974,137908,137223,127331,72872,70852,118689,131375,137766,15656,116620,78186,76135,133710,142523,153130,143739,133510,100315,82478,149738,151963,152999,151132,143304,84972,87864,150940,154216,148787,140270,142715,86422,81970,155239,166045,189596,185e3,152372,100854,90034,156947,170967,165954,162669,155321,99110,93609,169206,177314,170053,176810,181091,115357,106258,187550,195719,194360,192215,168911,102579,98116,178189,190480,189784,192208,177387,110225,99954,175221,178997,197274,190464,185286,115529,110387,193423,203953,204524,198278,187070,114968,107109,204438,205536,194423,163791,150686,109521,105316,171905,209763,193532,206100,182773,111980,103750,178063,201181,195269,187280,173429,107767,102593,181063,195316,184484,196848,180350,113463,106437,163143,165336,156146,103773,124946,105815,103893,146202,138606,117237]},avg:{label:"2014 (7-day Average)",
data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,15210,31850,48696,63355,73697,83949,99320,100518,100783,100330,101066,100882,100066,98330,97193,96545,95754,94481,93568,92906,93046,93633,93523,93375,93994,94428,94353,95172,95355,94957,94504,94428,93734,93535,93580,94198,94123,95112,95307,96267,97268,99385,99456,100011,100502,101322,101745,101912,100320,100339,100850,100693,98338,96980,96540,96932,96221,95444,95548,98306,100045,100119,100375,100860,101242,100902,100287,101067,102614,104500,106620,108178,109865,111474,111712,112100,111983,111060,111359,111990,113339,113433,113838,114202,116360,117978,119740,120038,119334,119182,120437,120313,120715,120661,119864,121076,120558,120595,122795,124780,125613,127708,127521,127925,127961,127742,125429,124065,122124,120741,120065,116258,113803,113611,113631,113740,113351,112772,114264,113750,113729,96363,94832,95592,96346,98492,100085,102280,120577,122990,126151,127057,129347,130696,130677,131733,133132,130940,131710,131882,132203,131602,130050,129966,130173,129331,129945,131635,137465,143855,145234,147296,148448,148692,149395,146018,142828,143249,143e3,143511,145262,146169,146754,148774,152456,154777,156584,159204,161834,165306,167507,165767,163941,162778,161441,160692,160039,160038,161249,162341,162603,162179,160539,161609,161360,162488,163246,164736,167337,170902,171938,173054,173309,173229,172760,174334,174560,173117,168190,162993,162214,161958,157311,157915,157787,163831,168415,168767,168543,169423,168197,168445,165756,164421,163819,163654,164083,163245,161704,163071,164060,164873,165423,162863,158580,154531,141235,133320,132228,131864,129444,125625,120067]}}]},module.exports.totalsMonthly={labels:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],data:[{year:2014,tot:{label:"2014",data:[null,null,null,null,null,null,3276839,3707636,3580370,4678725,4835116,4808443]}},{year:2015,tot:{label:"2015",data:[5167281,5531588,6488674,6914710,8885173,8810078,7887142,8088239,null,10021043,10243008,10957704]}},{year:2016,tot:{label:"2016",data:[10951832,12061660,13876894,15687708,13771741,14707443,14908496,15339291,15017641,17043408,17665412,16156614]}}]},module.exports.versions={labels:["Jan-1","Jan-2","Jan-3","Jan-4","Jan-5","Jan-6","Jan-7","Jan-8","Jan-9","Jan-10","Jan-11","Jan-12","Jan-13","Jan-14","Jan-15","Jan-16","Jan-17","Jan-18","Jan-19","Jan-20","Jan-21","Jan-22","Jan-23","Jan-24","Jan-25","Jan-26","Jan-27","Jan-28","Jan-29","Jan-30","Jan-31","Feb-1","Feb-2","Feb-3","Feb-4","Feb-5","Feb-6","Feb-7","Feb-8","Feb-9","Feb-10","Feb-11","Feb-12","Feb-13","Feb-14","Feb-15","Feb-16","Feb-17","Feb-18","Feb-19","Feb-20","Feb-21","Feb-22","Feb-23","Feb-24","Feb-25","Feb-26","Feb-27","Feb-28","Feb-29","Mar-1","Mar-2","Mar-3","Mar-4","Mar-5","Mar-6","Mar-7","Mar-8","Mar-9","Mar-10","Mar-11","Mar-12","Mar-13","Mar-14","Mar-15","Mar-16","Mar-17","Mar-18","Mar-19","Mar-20","Mar-21","Mar-22","Mar-23","Mar-24","Mar-25","Mar-26","Mar-27","Mar-28","Mar-29","Mar-30","Mar-31","Apr-1","Apr-2","Apr-3","Apr-4","Apr-5","Apr-6","Apr-7","Apr-8","Apr-9","Apr-10","Apr-11","Apr-12","Apr-13","Apr-14","Apr-15","Apr-16","Apr-17","Apr-18","Apr-19","Apr-20","Apr-21","Apr-22","Apr-23","Apr-24","Apr-25","Apr-26","Apr-27","Apr-28","Apr-29","Apr-30","May-1","May-2","May-3","May-4","May-5","May-6","May-7","May-8","May-9","May-10","May-11","May-12","May-13","May-14","May-15","May-16","May-17","May-18","May-19","May-20","May-21","May-22","May-23","May-24","May-25","May-26","May-27","May-28","May-29","May-30","May-31","Jun-1","Jun-2","Jun-3","Jun-4","Jun-5","Jun-6","Jun-7","Jun-8","Jun-9","Jun-10","Jun-11","Jun-12","Jun-13","Jun-14","Jun-15","Jun-16","Jun-17","Jun-18","Jun-19","Jun-20","Jun-21","Jun-22","Jun-23","Jun-24","Jun-25","Jun-26","Jun-27","Jun-28","Jun-29","Jun-30","Jul-1","Jul-2","Jul-3","Jul-4","Jul-5","Jul-6","Jul-7","Jul-8","Jul-9","Jul-10","Jul-11","Jul-12","Jul-13","Jul-14","Jul-15","Jul-16","Jul-17","Jul-18","Jul-19","Jul-20","Jul-21","Jul-22","Jul-23","Jul-24","Jul-25","Jul-26","Jul-27","Jul-28","Jul-29","Jul-30","Jul-31","Aug-1","Aug-2","Aug-3","Aug-4","Aug-5","Aug-6","Aug-7","Aug-8","Aug-9","Aug-10","Aug-11","Aug-12","Aug-13","Aug-14","Aug-15","Aug-16","Aug-17","Aug-18","Aug-19","Aug-20","Aug-21","Aug-22","Aug-23","Aug-24","Aug-25","Aug-26","Aug-27","Aug-28","Aug-29","Aug-30","Aug-31","Sep-1","Sep-2","Sep-3","Sep-4","Sep-5","Sep-6","Sep-7","Sep-8","Sep-9","Sep-10","Sep-11","Sep-12","Sep-13","Sep-14","Sep-15","Sep-16","Sep-17","Sep-18","Sep-19","Sep-20","Sep-21","Sep-22","Sep-23","Sep-24","Sep-25","Sep-26","Sep-27","Sep-28","Sep-29","Sep-30","Oct-1","Oct-2","Oct-3","Oct-4","Oct-5","Oct-6","Oct-7","Oct-8","Oct-9","Oct-10","Oct-11","Oct-12","Oct-13","Oct-14","Oct-15","Oct-16","Oct-17","Oct-18","Oct-19","Oct-20","Oct-21","Oct-22","Oct-23","Oct-24","Oct-25","Oct-26","Oct-27","Oct-28","Oct-29","Oct-30","Oct-31","Nov-1","Nov-2","Nov-3","Nov-4","Nov-5","Nov-6","Nov-7","Nov-8","Nov-9","Nov-10","Nov-11","Nov-12","Nov-13","Nov-14","Nov-15","Nov-16","Nov-17","Nov-18","Nov-19","Nov-20","Nov-21","Nov-22","Nov-23","Nov-24","Nov-25","Nov-26","Nov-27","Nov-28","Nov-29","Nov-30","Dec-1","Dec-2","Dec-3","Dec-4","Dec-5","Dec-6","Dec-7","Dec-8","Dec-9","Dec-10","Dec-11","Dec-12","Dec-13","Dec-14","Dec-15","Dec-16","Dec-17","Dec-18","Dec-19","Dec-20","Dec-21","Dec-22","Dec-23","Dec-24","Dec-25","Dec-26","Dec-27","Dec-28","Dec-29","Dec-30","Dec-31"],data:{year:2016,"0.10":{label:"0.10",data:[41607,41860,50144,130191,140475,135955,138832,99845,56072,58363,104504,107202,95404,91214,83811,55713,49928,83016,92774,93800,96575,83353,42387,46494,90712,96343,98541,97831,81018,45055,48417,92953,96381,92994,90787,80895,41312,43512,82617,114223,148531,145637,123346,51748,54478,120685,138783,141714,141041,102859,42040,46883,85348,89200,86998,91728,82728,39754,44542,89417,91739,97044,99079,129728,47822,52477,138461,143680,150167,144722,107106,42139,42964,97670,94921,97028,94200,88577,54004,57527,93418,97189,101755,85380,73417,41686,41893,83653,86699,86260,80963,115241,47242,42010,77958,78273,80113,83124,72932,43232,46856,83384,85084,86359,84527,73526,46788,48758,83965,87166,86238,87092,75975,41585,45541,83230,83880,88589,92380,79192,50073,49160,82571,82285,99286,84632,117565,67814,45893,93512,101080,103202,95133,91632,46225,47229,76956,91706,91513,95325,87307,52052,57510,95186,94749,87060,84563,70668,43895,47334,66338,84545,86864,86308,76290,45015,45009,95405,123683,128872,126298,114384,86164,78582,112504,112296,108295,104016,93862,63337,62684,100861,103373,103699,110465,134076,66628,69229,112124,109965,114470,105172,98505,66221,75350,92984,117533,110429,111524,102240,70152,77363,106110,110199,101783,100932,94617,64382,69920,108327,112158,115517,107366,104497,75417,59099,90947,193099,161961,85301,64921,35441,38868,69955,70952,70379,72682,62163,37440,38801,72481,73475,74038,69233,66300,35449,38090,66414,69215,67152,68284,58317,34826,38453,64874,67253,69423,70335,59625,32081,36783,62317,63604,62942,61644,53064,29186,30989,45584,64141,61607,58190,53476,29401,38158,58990,59969,61370,60258,52702,29772,32346,63658,63891,63052,62019,60861,30631,33273,61225,66374,133460,125185,108065,50488,53766,112821,117997,138600,126565,107009,45304,54105,115202,116861,29734,114375,104204,47042,47357,105457,119819,118243,113616,89571,42498,41367,111886,78364,64871,66882,61875,36183,39957,61567,63198,70740,70912,56673,30254,34464,59950,69872,65285,66087,58046,33184,38151,60985,68388,68427,62418,60500,34159,36109,68244,70840,62627,54907,57022,32163,34433,61504,72426,66519,62987,73377,34795,38438,63733,72959,65676,61506,63543,33614,33556,59600,62546,62382,59527,51668,32265,28395,56446,60896,58284,53360,43178,30603,32501,38430,40377,43052,41786,38152,29121]},"0.10_avg":{label:"0.10",data:[65215,65468,66036,72062,78821,85887,97009,105328,107359,108533,104863,100110,94317,87514,85224,85173,83968,80898,78837,78608,79373,79308,77404,76914,78013,78523,79200,79380,79046,79427,79702,80022,80028,79235,78229,78211,77677,76976,75499,78048,85982,93818,99882,101373,102940,108378,111886,110913,110256,107329,105942,104857,99809,92726,84909,77865,74989,74662,74328,74909,75272,76707,77757,84471,85624,86758,93764,101184,108773,115293,112062,111250,109891,104064,97098,89507,82289,79642,81337,83418,82810,83134,83810,82550,80384,78624,76391,74996,73497,71284,70653,76627,77421,77438,76624,75421,74542,74851,68807,68234,68926,69702,70675,71567,71767,71852,72360,72632,72715,73012,72995,73361,73711,72968,72508,72403,71934,72270,73025,73485,74697,75214,75120,74892,76421,75314,80796,83330,82863,84426,87111,87671,89171,85466,82382,82573,80208,78869,77199,77226,76608,77441,78909,81514,81948,81312,79775,77398,76233,74779,70658,69200,69172,69421,70224,70384,70052,74205,79796,85797,91510,96952,102830,107626,110069,108442,105503,102320,99388,96127,93856,92193,90918,90261,91183,96927,97398,98333,99942,100883,102422,101666,96584,96526,97401,94666,95747,95170,96078,96611,97173,97460,99335,98288,97053,95539,94450,93626,92563,92880,93159,95121,96041,97452,99028,97483,95e3,106563,113198,110045,104392,98681,95791,92792,75342,62259,60456,60062,60348,60338,60699,61060,61582,61090,61681,61396,61295,60428,59819,58836,58700,57560,57471,57523,57303,57022,57347,57640,57827,57434,57196,56831,56309,55383,54142,53205,52791,51963,49573,49650,49459,48965,49024,49055,50079,51994,51398,51364,51660,51549,51602,50772,51439,51999,52239,52491,53657,53779,53912,53564,53919,63977,73001,79744,82581,85509,92879,100254,100988,101186,101035,100294,100343,100683,100520,84968,83227,82826,83074,82110,80718,81141,93785,93676,91586,90937,90081,91e3,85077,77453,70777,66820,65918,65716,58528,56361,57200,57776,57032,56185,55401,55170,56123,55344,54655,54851,55269,55796,55944,55732,56181,55657,56007,56146,55855,56892,57242,56413,55340,54844,54558,54319,53356,53583,54139,55293,57629,58005,58578,58896,58972,58852,58640,57235,57067,56369,55779,54291,53821,53538,51841,51649,50911,50461,50225,49640,48759,47546,47308,47895,45321,42390,40214,38561,37843,37631]},.12:{label:"0.12",data:[22186,25192,30053,68743,74470,72084,78450,62744,28487,30872,69032,75847,75567,75674,62315,28119,30808,63752,74004,75175,73535,64457,29057,31740,72189,73954,74532,73334,63833,27964,30575,72044,76610,74182,72616,63721,27505,28548,66556,70925,72455,72631,64212,28281,29689,65156,75596,75880,75835,67422,31005,32395,70580,72563,73554,70463,62657,29399,31324,69370,74115,74658,72213,69894,32471,34015,73849,73001,74583,74725,67401,31952,33101,71932,74349,72477,71952,62900,27774,29305,69167,73603,70353,67658,50708,28078,28298,56077,69014,69974,74913,70964,31240,31895,71734,76635,76647,71920,64708,28871,30120,66702,71619,71334,67404,60798,30541,30772,67721,70703,70204,72642,63018,28930,28024,65972,71190,71492,66975,57079,25139,26716,63121,66366,69255,59909,56838,26424,28218,64902,69376,66837,66972,55015,24832,26538,58466,67308,65740,62829,58104,23923,26392,65374,67553,64119,61526,52204,23183,26057,44355,62462,64352,64961,57617,24677,24836,58876,63659,62625,60225,55336,28083,25598,59245,64881,62327,62163,56992,38013,38073,73379,67555,60778,59796,50942,22124,24758,55635,59367,59320,63267,48051,23525,24304,41516,57706,55998,57098,48710,23663,23164,53628,56331,54670,51985,48194,20237,23693,53265,52427,52396,58390,55468,22469,23751,50620,53343,50735,50616,46457,21614,21950,50709,51522,54903,52652,48410,23262,23386,53169,52988,53814,50610,46173,21083,22864,45590,52027,50501,50617,44944,21860,25432,51918,52214,52454,54348,45527,21278,22719,46935,48496,48293,48438,41975,19635,20607,35517,46580,46437,48481,42186,20582,21138,45951,48226,46568,45161,42089,23214,23370,47178,49976,49680,45581,41239,21135,20407,45196,45442,48010,47933,41810,20438,20511,41262,41032,42941,45310,39497,20122,22229,43452,40771,10463,40186,40477,22746,19920,42308,44364,45996,43879,36932,21355,20270,39930,43275,42562,42202,37794,21188,21929,38711,38342,39725,43333,38684,20125,19488,38224,38898,36968,39501,37811,20393,21440,37045,41182,38638,37434,33193,19157,18362,34526,35999,37259,29865,28054,16960,19015,33908,36995,35125,35388,31827,19023,17911,33124,34640,34e3,33127,37289,17574,16319,31667,35145,34645,32110,29104,17943,17468,30203,33241,33519,31483,25395,15417,14672,19514,24675,24762,26404,24161,16499]},"0.12_avg":{label:"0.12",data:[37131,37396,38036,40732,43506,46633,53025,58819,59290,59407,59448,59645,60142,59746,59684,59632,59623,58868,58605,58549,58244,58550,58684,58817,60022,60015,59923,59894,59805,59649,59483,59462,59841,59791,59689,59673,59607,59318,58534,57721,57475,57477,57547,57658,57821,57621,58288,58777,59235,59694,60083,60469,61244,60811,60479,59711,59031,58801,58648,58475,58697,58855,59105,60139,60577,60962,61602,61443,61432,61791,61435,61360,61230,60956,61149,60848,60452,59809,59212,58669,58274,58168,57864,57251,55509,55553,55409,53539,52883,52829,53866,56759,57211,57725,59962,61050,62004,61576,60682,60344,60090,59371,58655,57896,57251,56692,56931,57024,57169,57039,56877,57625,57943,57712,57320,57070,57140,57324,56514,55666,55124,54937,54530,53841,53521,52512,52477,52661,52875,53130,53560,53214,54223,53963,53736,53496,52576,52281,52124,51532,51973,51844,51823,52810,52845,52613,52427,51584,51478,51430,48428,47700,47734,48224,48998,49211,49037,51111,51282,51035,50359,50033,50520,50628,50681,50856,50813,51090,51327,52745,54527,56546,56928,56707,56369,55505,53235,51333,48798,47628,47420,47916,47503,47703,47638,45621,45384,44909,44028,44122,44142,43979,45709,45513,45323,44593,44519,44029,44105,44053,43495,43171,44086,45125,45444,45452,45074,45205,44968,43857,42570,42448,42190,42203,41943,42538,42829,43108,43344,43549,43900,44110,43954,43662,43343,43031,42957,41874,41737,41264,41265,41089,41200,41567,42471,42498,42777,43310,43393,43310,42922,42210,41679,41085,40240,39733,39498,39197,37565,37292,37027,37033,37063,37198,37274,38765,39e3,39018,38544,38530,38906,39225,39400,39650,40095,40155,40034,39737,39313,39030,38382,38144,38480,38561,38462,38477,37915,37285,36561,36186,35855,35810,36056,36369,36331,31692,30960,31100,31474,31145,30981,31494,36571,37098,36592,36393,36443,36103,35948,35457,35218,35341,35317,35554,35380,34675,34270,34431,34558,34407,34058,33988,34068,33674,33126,33002,33040,33319,33150,33477,33715,33420,32760,32584,32144,31784,31044,30847,29765,29031,28717,28811,28722,28865,28560,29349,29888,30183,30025,29913,29576,29416,29093,29873,29666,29439,29230,29303,29395,29249,28080,28133,28297,28088,27816,27655,27565,27036,26675,26275,24748,23525,22274,21548,21372,21526]},"4.x":{label:"4 (LTS)",data:[57285,58937,61683,153645,149789,157256,142756,123284,64815,66942,143259,154688,164924,144135,126006,65466,64975,125393,148e3,152699,163781,148071,70356,85369,152085,158630,153263,155065,134482,83504,78666,151552,152850,160024,148002,132049,67482,68676,139173,170875,183741,182659,163643,104063,107240,172356,197140,208859,200905,177837,112171,117624,202e},"4.x_avg":{label:"4 (LTS)",data:[84517,84856,85539,93291,98060,103829,111621,121050,121889,122641,121157,121857,122952,123149,123538,123631,123350,120798,119842,118096,120902,124055,124753,127667,131480,132998,133079,131834,129892,131771,130813,130737,129911,130877,129868,129521,127232,125805,124036,126611,129999,134950,139464,144690,150199,154939,158691,162280,164886,166914,168072,169556,173790,174786,174813,174262,175796,176019,175532,173877,173038,171787,172320,171724,172263,173544,176697,178334,179351,180960,182391,182627,182100,181713,182887,184414,185293,186942,186564,184496,182846,181350,179272,175926,168415,166686,166388,162465,162594,162552,163586,167560,166316,164994,167323,166711,166672,165909,166367,166181,167471,169930,170942,172078,173753,175955,178106,178446,179021,181556,185809,189923,191094,192076,193555,195871,197317,197458,196111,194604,193503,192636,190495,188926,186527,183337,182798,181469,179847,179208,176709,174209,174147,172070,171218,170646,168983,169202,170336,171003,171985,171987,172252,174360,175489,175761,175493,175081,174741,174373,165839,163408,162303,162593,162480,162402,162543,170408,172900,174041,172832,173012,174856,175758,176041,175957,174869,176053,175790,173632,172572,173681,174578,177399,180048,184984,191050,199059,203210,204849,206007,207286,206422,204222,200134,188919,186770,183757,181438,179210,177959,176045,183404,183975,184922,183616,183423,182055,181220,181104,181094,182768,185401,186698,187828,189456,190785,194122,195979,197881,201051,203616,205503,208755,208592,206636,205946,205282,205085,205150,204187,203368,203371,201667,199139,196080,192419,186752,186739,188830,189956,197642,203587,211005,219222,220875,221671,225387,221507,218901,215285,211908,211588,211434,209870,206758,203478,200048,190087,185415,183883,183207,184348,189074,191276,199706,202467,199501,193995,191103,188598,188437,188245,187551,188172,190696,194209,196727,199905,204535,208758,216066,222821,225536,227297,227121,224940,221918,216876,212610,210222,208830,209081,208644,207037,181612,179963,182750,185966,185854,188870,193283,223116,228100,226896,224623,223345,224343,222622,212628,202604,195465,189529,185542,173464,164191,163690,167323,169734,169311,167472,167178,167830,165061,160498,155828,154253,153400,152372,153178,154955,154946,156980,159040,159877,160430,159744,157397,151082,142637,138542,137021,136185,135747,136731,141597,147794,149087,148882,148069,148381,148817,148626,150099,150218,150229,150682,149107,148533,147659,144782,144300,144170,142834,141244,137916,134941,127933,125594,123175,112130,102233,94859,90218,88347,88454]},"5.x":{label:"5",data:[27482,31453,35241,68711,70407,75548,89800,96608,66960,68398,90008,80143,78625,77316,69938,39912,43010,75145,84850,81832,94161,77437,42887,48925,88158,87126,86471,85515,75800,42716,42749,87411,87236,88519,86422,77147,40218,43038,81877,87765,96450,94569,85660,47222,49176,89351,97218,100824,99901,90112,46473,54064,98418,109149,116542,134719,115218,47845,47902,102429,107948,111695,115203,108956,58983,56256,113694,111771,117501,115397,97816,47482,46794,111452,112124,112108,117701,102325,49051,51769,113154,120913,117522,111774,84659,46886,45926,97398,114336,115787,113909,106651,52025,50880,117874,129435,135026,124710,112841,57866,66842,123993,123287,121269,121616,110093,53624,53718,125158,128431,129889,133984,116955,57570,57475,127454,121890,94779,90624,79576,28708,29340,80290,87729,88314,84165,80042,27723,29188,81773,89524,87550,84614,74458,28202,28133,83798,89305,87827,92162,78185,27193,29032,86371,89787,88363,81401,67904,27088,30867,57902,81317,85388,85523,73938,28617,28844,81139,86782,82423,82870,77488,29185,30029,82491,90548,88886,85631,75314,24761,27900,82647,83030,83036,82576,69457,26784,29730,81376,88175,84749,83492,72938,26703,27176,55535,92691,81901,84585,73715,25936,24924,77753,84555,82816,77506,69134,21913,27404,75588,78307,80544,83575,71660,22342,29055,76425,80762,76641,74533,70349,26155,26185,75685,75699,75309,77347,63919,22042,24130,74112,75364,78813,78811,72662,22617,24844,67401,73895,75078,72506,65034,22312,30954,76163,77568,75809,75592,66911,23918,26322,69696,76886,78413,74412,63663,19970,22209,49405,79222,77174,77225,68315,25629,24486,72119,81702,75308,74171,63276,23896,25653,72470,81503,76715,72121,66141,22665,23812,74608,77105,80946,74932,67642,23626,21137,68972,77701,75142,79945,69269,26660,30333,71807,68255,14254,67233,64967,23494,21136,64195,67527,68120,68175,55477,22926,20985,65646,75155,68913,66094,60930,21283,21457,63646,67618,66020,67967,61723,20080,21216,66799,71628,67050,68916,62270,21849,20812,65346,68285,71606,69527,64618,23734,20680,59334,68205,59272,41333,38097,16171,17366,56768,59499,60380,57428,52114,18839,20018,54264,60134,59502,57178,58997,19638,19103,56107,60177,60488,57232,49887,19526,17631,48379,52475,47434,42775,29291,13379,11722,18508,27574,30856,30791,27633,15367]},"5.x_avg":{label:"5",data:[39844,40214,40578,42846,45377,48937,56948,66824,71896,76633,79675,81066,81506,79722,75912,72048,68421,66298,66970,67429,69835,70906,71331,72176,74035,74360,75023,73788,73554,73530,72647,72541,72556,72849,72979,73171,72814,72855,72065,72140,73273,74437,75653,76654,77531,78599,79949,80574,81336,81972,81865,82563,83858,85563,87808,92782,96369,96565,95684,96257,96086,95393,92605,91711,93302,94495,96105,96651,97480,97508,95916,94273,92922,92601,92652,91881,92211,92855,93079,93790,94033,95288,96062,95215,92691,92382,91547,89296,88357,88109,88414,91556,92290,92998,95923,98080,100828,102371,103255,104090,106370,107244,106366,104401,103959,103566,102960,101085,101252,101987,103218,104985,105965,106529,107066,107394,106459,101443,95249,89909,85786,81767,75029,70149,69225,68303,68369,68229,68207,68419,68675,68566,68630,67832,67901,67750,68039,68008,68048,69126,69658,69514,69643,70010,70079,70156,68618,67150,67135,67397,63330,62120,61695,62284,63146,63364,63075,66395,67175,66752,66373,66880,66961,67130,67324,67862,68785,69179,68869,68237,67933,67955,66881,66045,65609,64772,65061,65322,65141,65876,66121,66251,66749,66737,66372,62681,63326,62919,63075,63186,63077,62755,65929,64767,64897,63886,63232,62657,63011,62702,61809,61485,62352,62713,62774,63010,63129,63480,62922,61631,61443,61988,61578,61472,60749,60559,60961,60042,59455,59161,58936,58889,59389,59598,60847,60929,61031,60073,59863,59329,58429,57339,57295,58168,59420,59945,60049,60490,60758,60987,60326,59402,59304,59676,59508,59044,58480,57892,54994,55327,55150,55552,56217,57025,57350,60595,60950,60683,60247,59527,59279,59446,59496,59468,59669,59376,59785,59609,59346,59652,59023,59628,60029,60244,60381,59999,59194,59279,58450,59166,59398,59832,61146,61551,60201,51503,49687,49072,48620,47306,46219,46115,53810,53944,52589,52508,52486,52693,53783,53896,53599,54378,54143,54211,53925,52848,52435,52703,52816,52644,52610,53060,53633,53780,53916,53994,54246,54189,53981,53504,54154,54242,54577,54846,54828,53969,53957,52195,48168,44379,43298,42825,42458,41215,41373,43672,45675,46056,46435,46077,46168,46042,46007,46990,47104,46973,47237,47243,47384,47391,46090,46074,45864,44760,43659,41794,39729,36787,35909,35065,30797,27240,24872,23160,22923,23207]},"6.x":{label:"6 (LTS)",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,22532,63310,50370,43115,30213,26694,44823,48140,46399,45386,46972,29037,28598,51014,52206,52156,52899,46417,28047,26840,49501,59719,65076,60450,51767,31757,31780,66270,68682,66362,60777,54181,31345,32644,51174,62787,63152,69212,63472,34214,34107,71500,73982,68626,65282,60346,36580,37873,70265,79495,79899,74731,72673,39392,39711,84015,82146,83204,82878,69615,36059,38105,79227,83874,83636,83865,73524,38442,43345,73180,89355,90367,96994,83432,41480,43830,99461,103707,104078,97390,87598,40475,46823,100336,99383,102337,111348,103766,5e4,56382,111838,111330,109530,107070,103066,53141,54288,122467,120216,118701,120260,105976,57169,59582,127777,124218,136061,125221,112296,52924,56091,111196,137784,140662,136307,132397,62643,70447,141615,138186,144152,139951,118366,52768,64720,144435,150910,144648,143069,125937,57582,61729,112433,151992,147946,149914,131212,65264,69690,144097,153128,149824,157319,151683,74995,84268,169297,178726,169432,173413,149903,69336,77264,172475,186339,196606,185531,165297,78815,74471,166493,176155,179268,183342,157983,82132,91799,181319,179023,48466,200022,202005,116556,95926,220723,228787,246275,252106,196869,99504,94670,217626,234455,242149,234029,219819,110629,112744,233348,249828,253713,267938,224288,111283,107121,244676,258677,250469,265954,230391,124607,115551,256355,284466,279576,285506,256677,137031,126458,263002,284986,278469,257545,235736,152441,132468,273380,283268,283272,273334,259562,130366,120643,265154,288406,306902,296001,312077,132945,126102,269163,289325,291408,277218,253662,125984,116132,251988,284444,273002,253857,198170,115604,105331,149123,186218,202704,204777,180028,114099]},"6.x_avg":{label:"6 (LTS)",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3218,12263,19458,25618,29934,33747,40151,43809,41393,40681,41232,41064,41336,42220,42801,43624,44697,44618,44476,44225,44009,45082,46928,48007,48771,49301,50007,52402,53683,53866,53913,54258,54199,54323,52166,51324,50865,52070,53398,53807,54016,56920,58519,59301,58740,58293,58631,59169,58993,59781,61391,62741,64502,64904,65166,67130,67509,67981,69145,68708,68232,68003,67319,67566,67627,67768,68327,68667,69416,68552,69335,70296,72172,73587,74021,74091,77845,79895,81854,81911,82506,82362,82790,82915,82297,82048,84042,86352,87713,89078,90722,92428,93456,92845,92745,93193,92894,94413,95682,96992,98877,99292,99868,100624,101383,101954,104434,105143,106046,105439,104941,102572,104510,105167,106751,109623,111011,113062,117407,117465,117963,118484,116480,115069,114251,114654,116471,116542,116988,118069,118757,118330,113758,113912,114384,115361,116115,117212,118350,122873,123035,123304,124362,127286,128676,130759,134359,138016,140817,143116,142862,142053,141053,141507,142594,146476,148207,150406,151761,151362,150507,149052,146575,146263,145218,145692,148167,150285,150695,132009,134392,140680,145598,146188,151817,158926,187184,194625,193891,191455,191276,190833,191643,191054,188471,191750,193339,195921,198167,200363,202015,206859,207498,207591,206788,208406,209670,209207,208924,209795,211699,212903,214572,218256,222414,225207,228962,230737,232295,233245,233319,233161,229166,226175,228376,229235,230717,230472,231158,233414,236817,233664,231975,230799,231533,234909,238147,245649,246018,246798,247370,247502,245288,242605,234260,233266,231841,229388,228690,226061,222724,214796,213313,211770,197075,183043,173001,165989,163397,163182]},"7.x":{label:"7",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24081,69661,61714,56053,37007,29078,51469,55628,53719,74424,50872,30143,27276,53101,54576,75393,66210,62319,37333,39199,72557,68823,69423,67717,67739,39574,34500,62887,73093,94772,62616,68087,39195,36203,65737,72746,64935,63932,61347,56518,50698,73391,71383,83420,75519,93565,40395,41684,68413,70738,69113,65529,59199,31365,36254,59744,61915,79052,60320,48453,26621,23975,37401,45033,51407,47655,42723,27941]},"7.x_avg":{label:"7",
data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,3440,13391,22208,30215,35502,39656,47009,51515,49238,51054,50313,49333,49075,49309,49158,52255,51081,52716,53744,55447,58226,60262,59409,59624,60398,60718,60047,58666,59276,62897,62168,62218,62164,62407,62814,62765,58502,58690,57727,60202,62273,63366,63172,65812,67468,72070,69767,68479,67768,67676,65632,64205,59295,58005,57230,55991,54731,56151,55407,53871,53194,51440,48248,45836,41887,40077,39259,39447]}}},module.exports.countries={labels:["Jan-1","Jan-2","Jan-3","Jan-4","Jan-5","Jan-6","Jan-7","Jan-8","Jan-9","Jan-10","Jan-11","Jan-12","Jan-13","Jan-14","Jan-15","Jan-16","Jan-17","Jan-18","Jan-19","Jan-20","Jan-21","Jan-22","Jan-23","Jan-24","Jan-25","Jan-26","Jan-27","Jan-28","Jan-29","Jan-30","Jan-31","Feb-1","Feb-2","Feb-3","Feb-4","Feb-5","Feb-6","Feb-7","Feb-8","Feb-9","Feb-10","Feb-11","Feb-12","Feb-13","Feb-14","Feb-15","Feb-16","Feb-17","Feb-18","Feb-19","Feb-20","Feb-21","Feb-22","Feb-23","Feb-24","Feb-25","Feb-26","Feb-27","Feb-28","Feb-29","Mar-1","Mar-2","Mar-3","Mar-4","Mar-5","Mar-6","Mar-7","Mar-8","Mar-9","Mar-10","Mar-11","Mar-12","Mar-13","Mar-14","Mar-15","Mar-16","Mar-17","Mar-18","Mar-19","Mar-20","Mar-21","Mar-22","Mar-23","Mar-24","Mar-25","Mar-26","Mar-27","Mar-28","Mar-29","Mar-30","Mar-31","Apr-1","Apr-2","Apr-3","Apr-4","Apr-5","Apr-6","Apr-7","Apr-8","Apr-9","Apr-10","Apr-11","Apr-12","Apr-13","Apr-14","Apr-15","Apr-16","Apr-17","Apr-18","Apr-19","Apr-20","Apr-21","Apr-22","Apr-23","Apr-24","Apr-25","Apr-26","Apr-27","Apr-28","Apr-29","Apr-30","May-1","May-2","May-3","May-4","May-5","May-6","May-7","May-8","May-9","May-10","May-11","May-12","May-13","May-14","May-15","May-16","May-17","May-18","May-19","May-20","May-21","May-22","May-23","May-24","May-25","May-26","May-27","May-28","May-29","May-30","May-31","Jun-1","Jun-2","Jun-3","Jun-4","Jun-5","Jun-6","Jun-7","Jun-8","Jun-9","Jun-10","Jun-11","Jun-12","Jun-13","Jun-14","Jun-15","Jun-16","Jun-17","Jun-18","Jun-19","Jun-20","Jun-21","Jun-22","Jun-23","Jun-24","Jun-25","Jun-26","Jun-27","Jun-28","Jun-29","Jun-30","Jul-1","Jul-2","Jul-3","Jul-4","Jul-5","Jul-6","Jul-7","Jul-8","Jul-9","Jul-10","Jul-11","Jul-12","Jul-13","Jul-14","Jul-15","Jul-16","Jul-17","Jul-18","Jul-19","Jul-20","Jul-21","Jul-22","Jul-23","Jul-24","Jul-25","Jul-26","Jul-27","Jul-28","Jul-29","Jul-30","Jul-31","Aug-1","Aug-2","Aug-3","Aug-4","Aug-5","Aug-6","Aug-7","Aug-8","Aug-9","Aug-10","Aug-11","Aug-12","Aug-13","Aug-14","Aug-15","Aug-16","Aug-17","Aug-18","Aug-19","Aug-20","Aug-21","Aug-22","Aug-23","Aug-24","Aug-25","Aug-26","Aug-27","Aug-28","Aug-29","Aug-30","Aug-31","Sep-1","Sep-2","Sep-3","Sep-4","Sep-5","Sep-6","Sep-7","Sep-8","Sep-9","Sep-10","Sep-11","Sep-12","Sep-13","Sep-14","Sep-15","Sep-16","Sep-17","Sep-18","Sep-19","Sep-20","Sep-21","Sep-22","Sep-23","Sep-24","Sep-25","Sep-26","Sep-27","Sep-28","Sep-29","Sep-30","Oct-1","Oct-2","Oct-3","Oct-4","Oct-5","Oct-6","Oct-7","Oct-8","Oct-9","Oct-10","Oct-11","Oct-12","Oct-13","Oct-14","Oct-15","Oct-16","Oct-17","Oct-18","Oct-19","Oct-20","Oct-21","Oct-22","Oct-23","Oct-24","Oct-25","Oct-26","Oct-27","Oct-28","Oct-29","Oct-30","Oct-31","Nov-1","Nov-2","Nov-3","Nov-4","Nov-5","Nov-6","Nov-7","Nov-8","Nov-9","Nov-10","Nov-11","Nov-12","Nov-13","Nov-14","Nov-15","Nov-16","Nov-17","Nov-18","Nov-19","Nov-20","Nov-21","Nov-22","Nov-23","Nov-24","Nov-25","Nov-26","Nov-27","Nov-28","Nov-29","Nov-30","Dec-1","Dec-2","Dec-3","Dec-4","Dec-5","Dec-6","Dec-7","Dec-8","Dec-9","Dec-10","Dec-11","Dec-12","Dec-13","Dec-14","Dec-15","Dec-16","Dec-17","Dec-18","Dec-19","Dec-20","Dec-21","Dec-22","Dec-23","Dec-24","Dec-25","Dec-26","Dec-27","Dec-28","Dec-29","Dec-30","Dec-31"],data:{year:2016,usa:{label:"USA",data:[103987,108808,118555,309234,320232,331077,329397,282956,157661,158873,285275,298267,284987,273013,244868,133989,130772,231133,277145,281024,289270,255135,123446,133013,284869,295252,291802,296934,251690,123854,129941,286222,292505,296882,286234,260238,127423,134518,275104,342852,382459,381260,336825,171480,173550,323592,380632,395277,388119,325124,168634,178143,329702,342668,352338,363606,339986,166693,170632,325960,340834,351840,349979,371066,184486,187082,396181,401689,413769,415170,349167,172777,173481,361407,365391,362246,366474,339795,177424,173927,339129,357854,361614,337649,269976,157042,154515,304457,342299,343846,334538,349087,151182,145632,325547,335129,341220,455097,445742,287239,298213,475134,489495,488664,462341,441586,291736,288375,471949,507826,518349,508089,450835,281230,282217,481587,446081,392964,383499,329830,162078,163913,356200,365752,380610,354084,374526,180921,161741,367794,390534,382241,377481,333422,158928,157818,341735,386365,388917,392357,354446,165821,178447,392523,405197,392696,363421,324965,157673,167273,249390,372705,380147,387300,343548,164473,166856,385505,429898,435846,423970,390516,207349,195319,394344,426371,408157,404954,367333,185921,188778,422107,428195,429092,434376,424685,220584,244210,442318,448826,448321,446514,394367,212611,220571,296484,420872,426244,428754,386858,200658,206578,412110,439495,426038,410643,377166,186871,201016,419785,434828,432775,408252,376750,197333,189162,406719,534043,497084,417863,375774,172941,180920,414013,409115,400543,412736,370560,167731,178988,408310,405519,410693,400899,366650,155803,167053,365034,421268,415416,400301,397638,187271,204998,423466,436644,440260,449564,391906,176276,187647,402041,434818,438522,435983,356414,148687,156768,263093,403796,426049,426649,381886,179539,177168,397497,433386,415315,406801,362855,172127,183196,415810,444541,425237,416927,392111,187117,201576,443482,467901,547405,518170,463445,212630,212472,485021,501014,520759,514489,453831,206041,225124,477060,479112,108299,474739,472338,235326,214860,487040,523926,530349,519418,429131,218840,198551,495712,517787,477671,460937,433073,207063,223844,447128,472410,493993,496474,451960,202807,198066,453001,493960,465899,502547,452358,219344,208780,459992,523920,529855,522496,476926,250996,228354,469102,529924,498263,394375,358558,219827,216625,467753,524122,511522,494597,476804,242696,232848,472837,525303,522483,517019,517384,229917,222950,477175,517276,524983,494819,450079,216736,200666,438432,487968,470056,428242,318071,184505,169327,216675,286675,319446,335911,286494,191198]},usa_avg:{label:"USA (7-day Average)",data:[160564,161627,163415,179014,191969,207801,231612,257179,264158,269918,266495,263358,256773,248718,243277,239896,235881,228147,225129,224563,226885,228352,226846,227166,234843,237429,238969,240064,239572,239630,239191,239385,238992,239718,238189,239410,239920,240574,238986,246178,258404,271979,282920,289214,294790,301716,307114,308945,309925,308253,307846,308503,309375,303952,297818,294316,296439,296162,295089,294554,294292,294221,292274,296714,299256,301606,311638,320331,329178,338491,335363,333690,331747,326780,321594,314234,307277,305938,306602,306666,303483,302407,302316,298198,288224,285313,282539,277586,275364,272826,272381,283683,282846,281577,284590,283565,283190,300413,314221,333658,355455,376824,398877,419940,420975,420381,421024,419618,419163,421782,426023,432558,433879,432379,431499,432876,424055,406143,388344,371058,354036,337136,319223,307748,305983,301781,308166,310858,310547,312204,315744,315977,319319,313447,310305,309745,306022,305427,306380,308506,311509,312494,315441,322696,325386,325926,321793,317581,316417,314821,294373,289731,287939,291350,294005,294976,294917,314362,322532,330489,335728,342437,348562,352629,353891,353387,349432,346715,343403,340342,339408,343374,343635,346625,350828,359022,363973,371892,374780,377727,380474,382208,377877,376738,373361,352527,348534,345380,342843,341770,340063,338064,354582,357242,357213,354625,353241,351271,350477,351573,350906,351869,351527,351468,352962,351269,349402,363576,372763,374136,373996,370512,369334,370376,352530,338738,338006,337261,336516,336240,335426,334912,336362,334671,334112,332408,330703,324521,326771,327446,327360,331787,336283,341703,350051,352247,355796,362834,362015,360444,357966,354905,354644,354396,352456,347385,343444,339033,319183,314751,312970,311636,315275,319682,322597,341797,346024,344491,341656,338937,337878,338739,341355,342949,344366,345813,349992,352134,354759,358713,362050,379502,393966,404156,407801,409357,415292,420022,416215,415690,414316,413375,415182,414045,410916,351993,346315,348959,353142,351676,353102,359504,419796,426179,420007,417652,415322,416561,415684,408158,399804,400367,398684,402298,395357,388875,391206,396283,398981,398373,394691,395530,398608,394595,395462,395519,397882,399412,400411,404691,413828,416677,420187,424709,427505,428807,429664,425151,406848,389938,385486,383810,383617,382789,384683,399e3,415892,419159,421477,422203,422372,423938,427141,432938,431113,429699,430318,429172,429529,426357,416742,414859,411676,406141,401954,394108,384597,365738,361134,356657,324977,296221,274705,261515,257004,257960]},europe:{label:"Europe",data:[32885,36037,36596,67432,70718,64219,75654,64971,38018,38237,73309,74168,75561,73965,69059,38642,38952,72741,75437,76248,75829,71654,39778,40806,76212,78045,75349,76189,70033,59104,51983,78799,82012,79810,80320,72320,39874,41597,77176,79928,83917,83651,75674,44160,43745,82980,82718,79977,81228,73365,42962,42960,78743,80814,79624,78301,70390,39370,39389,78624,77831,78298,81317,75019,42946,41551,77827,74336,81195,81742,74482,39215,37945,75698,79292,80038,77403,73925,45695,39934,78144,82552,77741,71270,56815,40152,36629,51025,74708,76902,79230,77204,44511,45496,83882,82997,81309,79629,75811,42797,40726,81141,79138,78871,78542,74922,45418,44033,81644,82457,78569,79280,75209,44658,46494,81421,84924,93926,83618,78940,43666,45009,73701,82262,80541,64791,69650,38718,36343,77088,82898,81787,79571,74069,37107,36661,64663,76966,82985,80023,73292,37639,37811,81015,80244,79548,82140,69203,38039,38750,71230,76615,78403,75551,71454,37347,37836,73941,86555,82202,80853,69225,39880,38783,78409,82975,82046,77683,70438,38018,37537,75793,75960,74734,72574,63206,33980,35264,72394,74522,73660,70594,65577,30991,33447,72115,74125,71640,72932,68813,39950,40043,74673,72736,73379,69901,63189,30329,35723,70060,69703,75957,71244,67764,34336,35091,71655,75909,75636,68489,63220,36429,34881,68589,71008,71694,67926,63081,36794,37524,71719,75237,75347,73020,69858,34692,33341,58612,67742,68750,72251,65880,32563,50661,76654,72298,71512,72211,63480,31752,32472,68583,75520,74641,73337,69568,32755,34243,73732,76060,75850,75110,67903,33795,33479,75623,77340,75111,75432,73958,38293,38311,81153,82769,80510,78934,75201,36455,36997,84695,83244,88130,84237,77698,38126,37684,77452,85468,82992,83083,76807,40159,39650,82301,83029,26446,86475,84885,44902,42107,89021,91357,94650,91150,79804,48755,47132,88661,90784,93063,88739,80609,49247,42548,80305,75553,92202,93013,83076,43272,42676,89557,91678,89714,92854,77427,41605,42147,94421,98894,98208,94010,84030,40762,42111,94809,93662,92506,89531,80172,43144,43089,89568,92275,87515,88402,81532,40003,41576,87154,94916,95183,90405,118802,40327,41870,90446,90722,91682,86827,78047,41586,41120,84154,85177,82277,76696,61329,33186,33848,46044,57867,60485,59450,51845,31663]},europe_avg:{label:"Europe (7-day Average)",data:[42729,42993,42903,45100,47280,49237,54769,59359,59639,59871,60709,61206,62820,62585,63169,63260,63359,63278,63458,63555,63819,64195,64355,64619,65114,65488,65360,65413,65180,67944,69534,69907,70474,71110,71704,72027,69281,67793,67570,67268,67857,68330,68807,69424,69730,70559,70957,70395,70046,69717,69541,69436,68831,68559,68505,68090,67664,67151,66638,66620,66197,66010,66438,67100,67610,67920,67808,67307,67719,67781,67704,67172,66653,66356,67058,66894,66279,66196,67121,67407,67751,68217,67890,67017,64572,63778,63308,59431,58312,58193,59329,62243,62864,64130,68827,70009,70639,70696,70499,70254,69573,69181,68630,68279,68126,67999,68374,68845,68916,69393,69350,69453,69498,69385,69738,69705,70059,72247,72868,73407,73261,73051,71948,71565,69659,66968,65638,64929,63694,64179,64264,64446,66551,67190,66961,67006,65232,64384,64556,64614,64507,64584,64745,67081,67552,67059,67362,66781,66837,66969,65571,65052,64891,63950,64265,64173,64041,64427,65848,66391,67147,66831,67189,67327,67964,67454,67434,66980,67154,66887,66709,66337,65336,64286,63559,62526,61947,61625,61135,60934,60779,60496,60837,60408,60145,60109,60052,59763,60097,60561,61837,62780,63142,62950,63196,62763,61957,60584,59966,59310,58877,59245,59437,60090,60662,60571,60801,61687,61639,61249,60601,60896,60866,60432,59732,59165,59083,59065,59118,59497,59945,60548,61067,61799,62763,62464,61865,59995,58922,57980,57872,57300,56999,59472,62049,62701,63094,63091,62750,62629,60031,58875,59339,59791,59952,60819,60959,61210,61950,62026,62202,62455,62217,62366,62256,62525,62708,62601,62650,63513,64153,64845,65633,66412,67183,67679,67861,67595,67409,67918,67985,69072,69827,70185,70429,70521,69489,69805,69073,68908,68782,69075,69350,70048,69698,61617,62100,63257,63934,64284,65246,66432,76179,76843,76125,76669,77391,77340,77258,77028,76680,76800,76869,76212,75020,72843,72724,73333,73687,72832,72851,74169,76473,76120,76097,75289,75050,74974,75671,76705,77914,78082,79025,78901,78896,78950,78208,77391,76752,76203,76539,76680,75933,75735,75023,74860,75054,74608,74389,74044,74422,75514,75806,81122,81173,81219,81686,81085,80589,80074,74252,74433,74331,73427,72630,71290,69841,67456,66257,65220,59774,55870,52758,50296,48940,48721]},china:{label:"China",data:[14162,10931,14953,23441,22122,24580,26951,21462,14851,18244,28090,26121,24386,21642,17928,14353,17431,25592,25751,28546,34158,23956,17218,16853,24121,23562,22127,20018,15558,11131,12458,17104,17573,15670,11165,8603,6332,4158,3810,5744,10320,12466,10341,10079,25518,20059,21251,26171,25967,22902,13596,20106,23938,26756,25284,24186,18942,15601,16662,24289,25197,28519,28796,27395,17952,24229,24967,26809,28091,25424,20991,16716,16771,26618,28169,29520,30550,23743,15941,19809,29689,34320,31440,32519,23664,15141,18892,28046,29135,26995,29122,22720,16574,14632,18315,40340,39923,29143,26094,19494,25288,28561,28351,29786,24703,22180,17364,16986,24507,23540,26512,30383,23443,18168,19584,25325,29068,33569,25676,17722,14025,11028,18074,30951,29010,28250,26148,17095,18284,26288,24202,26318,23588,21096,15665,17203,28629,28919,28026,26432,20179,15819,18233,26314,28755,27317,25751,19835,15206,17737,22764,23492,23672,25726,20978,14771,14695,24709,22954,15524,10815,9770,14650,22652,22620,23651,23348,21184,16231,13743,16644,23895,22044,23128,23136,19401,14223,16161,22917,24619,26286,22019,21223,14616,22896,27516,24523,28984,29935,23977,17111,19028,31659,35651,31746,27686,22532,13905,16221,27608,27639,33297,79640,76034,17781,18549,29643,28060,28590,27998,29013,24389,21140,35747,33739,33842,33963,27651,23418,23135,34985,32047,43456,32776,23540,14890,15921,29133,36858,50342,44636,46988,33660,37791,47693,35035,39474,36835,26092,18213,30101,40848,32278,28024,23461,24362,16004,17798,24254,33358,28125,29003,21574,18304,26026,26443,26233,17791,15208,24928,23790,29828,28270,29991,26738,30053,27264,22787,23183,28911,37911,51565,56376,40449,39365,28739,20565,21831,25432,20886,24028,33649,45597,46704,32266,14855,37943,42133,49889,33838,57996,50609,67328,75419,51139,29588,28800,58769,42418,58656,58459,56171,40585,31349,49538,58901,44058,81129,43593,29396,29155,44752,44170,64631,46249,40792,27554,37242,54012,48515,39066,40331,53059,33180,27124,43951,49146,64833,45997,60718,35483,28581,49879,44428,42960,36945,37831,25753,21761,37715,39319,62619,36767,40068,24332,20391,30394,32149,31528,28814,26895,17777,22698,31242,35457,47057,34045,32648,20814,20340,39482,34587,37792,31978,33281,18557]},china_avg:{label:"China (7-day Average)",data:[18133,17863,17863,17627,17591,17993,19591,20634,21194,21664,22328,22899,22872,22113,21608,21537,21421,21064,21011,21606,23394,24255,24664,24582,24371,24059,23142,21122,19922,19052,18425,17422,16567,15644,14379,13386,12700,11515,9615,7926,7161,7347,7595,8131,11182,13503,15719,17983,19912,21706,22209,21436,21990,22776,22649,22395,21829,22116,21624,21674,21451,21913,22572,23779,24115,25196,25293,25523,25462,24981,24066,23889,22824,23060,23254,23458,24190,24583,24473,24907,25345,26224,26498,26780,26768,26654,26523,26288,25548,24913,24427,24293,24497,23889,22499,24099,25946,25949,26431,26848,28371,29834,28122,26673,26039,25480,25176,23990,23411,22723,22256,23067,23247,23362,23733,23850,24640,25648,24976,24158,23567,22344,21308,21577,20926,21294,22498,22936,23973,25146,24182,23797,23131,22410,22205,22051,22385,23059,23303,23710,23579,23601,23748,23417,23394,23292,23195,23146,23058,22987,22480,21728,21208,21204,21367,21305,20871,21149,21072,19908,17778,16176,16159,17296,16997,17097,18215,19696,20619,20489,19631,19813,19584,19552,19831,20284,20353,20284,20144,20512,20963,20803,21064,21120,22082,22739,22725,23111,24241,24635,24991,24439,25031,26620,27015,26694,26487,26029,25628,25049,23905,24126,31548,39192,39745,40078,40369,40429,39756,32379,25662,26606,26976,27848,28659,29409,30261,30067,29928,30213,30104,29863,31236,31066,30479,29261,28230,27394,28082,29065,30760,34109,36791,39915,42566,42306,40753,39639,36654,34447,33349,32371,31977,30341,28431,28183,27868,26110,23740,23894,23908,24700,24302,24630,25806,26119,25101,23624,21654,22133,22917,23460,23721,24258,25536,27656,27990,27847,26898,26989,28121,31667,35428,37311,39680,40473,39281,36984,33251,28181,25835,25018,27426,31161,32651,31140,33577,36163,38483,36804,38417,41037,48533,53887,55174,52273,51554,51664,50494,49255,46832,47551,49122,49486,48168,50522,48437,51675,49879,48280,47967,47283,45179,48118,43135,42735,42471,43627,44950,45570,41918,41073,42825,43629,42183,40746,40836,44517,45327,46421,46750,46958,47805,47131,44006,42713,39443,38053,37079,35341,34612,37420,37395,37714,37511,37315,36270,35245,30804,29668,27786,26849,27179,27300,27773,29991,30738,31560,31994,31657,32834,32710,31386,31091,31182,30859]},developing:{label:"Developing Economies",data:[33024,31672,35431,57561,57603,58810,62072,51574,38943,42397,64836,61739,68450,56268,49296,39281,38865,62246,66179,65260,82272,70171,45664,59027,63895,62768,63675,57384,53991,38071,35326,57086,58499,59444,51341,43149,31148,25812,39163,43113,53799,52776,47291,37909,51339,61090,63362,69952,67310,60534,40809,45838,64517,68019,70794,68603,59795,44081,43368,64545,68201,68954,70793,65499,47569,51669,76386,72519,70253,66188,61809,47847,45221,69493,71138,76599,73946,66418,45522,47171,74070,77213,72520,69543,56998,44946,45941,68231,72491,70018,74056,66871,51650,46525,67978,88428,87937,75581,68880,53870,63740,75333,75467,75454,71192,75102,57960,52988,75578,76041,75828,80543,75773,61170,59322,78184,84833,95188,80422,70938,57444,50034,65413,81992,84508,80661,73464,50030,46106,66887,66900,70607,66442,59952,44168,43870,73770,70619,72466,69164,57428,45233,44741,71296,76108,69791,74804,58507,45149,44899,67032,65754,68361,71490,61019,43337,41194,70458,71446,60780,56496,51852,52049,51727,69317,69928,69991,65739,59008,45698,47390,69597,67611,67137,69545,68014,45041,45752,67313,67516,71384,67721,60169,42057,49579,70149,101292,68946,88753,62981,43385,47763,78133,80063,77021,70097,64839,39910,43446,73708,71554,76500,121093,113551,45156,54906,73987,75593,73456,71704,70759,54617,50989,82312,81985,79680,79788,67611,58827,53877,84497,83021,88310,76270,63706,44541,42349,65570,82853,94903,91264,91018,63693,63651,91810,79378,83738,78756,66033,48377,58446,84797,80700,74819,65916,67157,47664,47132,69924,80714,70406,72909,61329,61374,55648,68144,72132,63110,61308,72029,57736,61134,77607,78844,75710,78451,71777,56296,54543,79497,87829,100533,104173,83428,71673,58359,69325,69450,72067,77806,67261,70633,73630,93808,76493,30620,89987,99063,93116,71412,114180,106420,125851,129488,102327,66374,64859,114979,98786,118067,113804,105984,75636,64736,99797,109131,96014,136256,92587,68219,60676,95238,93972,114967,96946,87236,65382,68754,104313,100829,91218,91828,101574,68931,57371,95461,102208,118068,100559,109130,70489,59796,101172,94225,90512,85246,85167,60399,51166,88296,90584,114612,89637,109711,58810,52702,79966,83910,81695,77549,69954,50501,52178,77987,82777,94834,81082,74587,49513,46452,81580,78327,79505,73390,68082,44040]},developing_avg:{label:"Developing Economies (7-day Average)",data:[43879,43408,43185,43123,43325,44262,47966,50616,51662,52650,53689,54277,55654,54826,54504,54548,54049,53675,54313,53852,57565,60552,61461,64342,64577,64084,63869,60313,57998,56911,53529,52560,51947,51336,50486,48927,47940,46581,44022,41825,41015,41218,41809,42783,46427,49562,52454,54763,56837,58728,59140,58357,58844,59517,59628,59817,59713,60174,59820,59828,59850,59594,59904,60720,61220,62406,64099,64710,64902,64239,63712,63750,62835,61849,61646,62555,63661,64320,63988,64266,64923,65791,65201,64576,63230,63147,62972,62132,61463,61110,61759,63161,64121,64202,64172,66442,69006,69224,69516,69825,72290,73332,71486,69697,69077,69964,70545,69009,69046,69130,69183,70521,70619,71070,71978,72347,73615,76370,76357,75663,75127,73809,71980,71571,70055,70086,70444,69382,68826,69034,66879,64897,62859,60930,60096,59780,60760,61299,61555,61937,61586,61735,61862,61508,62294,61912,62717,62873,62859,62875,62268,60788,60584,60114,60468,60211,59679,60167,60986,59898,57759,56452,57696,59206,59038,58821,60139,61456,62481,61572,60950,60994,60671,60256,60797,62086,61987,61760,61429,61417,62017,61762,60644,60212,60763,61169,65989,65643,68652,69051,69240,68981,70120,67099,68241,65579,65843,65337,64730,64100,62883,62800,70090,77054,77799,79431,79476,80053,79617,72562,66446,67800,67241,68434,69346,70239,71387,70941,71537,71949,72271,72413,73644,73142,72586,70543,68899,66196,66169,67107,69258,73152,75896,78942,82688,82186,80594,78804,75237,73050,72303,71303,71493,70225,68382,68537,68439,66825,64702,64698,64075,65069,64238,66200,67418,67148,65932,64890,63238,64767,64243,65024,66384,67339,69142,71578,71554,71344,70404,70675,71953,75499,79179,80838,83043,83583,82130,79504,75436,71672,69361,69214,71393,74898,75904,69983,71715,76265,79478,79161,82064,86346,99941,105591,106062,102233,101297,101410,100325,99212,96971,97492,98816,98798,96631,98104,94954,98167,96250,95196,94615,93962,91788,94498,88886,88115,87711,88870,90171,91145,87752,87022,89069,89572,87941,86687,86878,90723,91971,93048,93261,93614,94432,93292,89356,87169,83740,82302,81067,79232,78709,82148,82781,86279,86056,86276,85087,84132,79441,77703,72031,70842,70769,70480,70320,72199,72703,73362,73223,72408,72916,72279,70092,68984,68061,67282]}}},module.exports.commits={labels:["Feb 2009","Mar 2009","Apr 2009","May 2009","Jun 2009","Jul 2009","Aug 2009","Sep 2009","Oct 2009","Nov 2009","Dec 2009","Jan 2010","Feb 2010","Mar 2010","Apr 2010","May 2010","Jun 2010","Jul 2010","Aug 2010","Sep 2010","Oct 2010","Nov 2010","Dec 2010","Jan 2011","Feb 2011","Mar 2011","Apr 2011","May 2011","Jun 2011","Jul 2011","Aug 2011","Sep 2011","Oct 2011","Nov 2011","Dec 2011","Jan 2012","Feb 2012","Mar 2012","Apr 2012","May 2012","Jun 2012","Jul 2012","Aug 2012","Sep 2012","Oct 2012","Nov 2012","Dec 2012","Jan 2013","Feb 2013","Mar 2013","Apr 2013","May 2013","Jun 2013","Jul 2013","Aug 2013","Sep 2013","Oct 2013","Nov 2013","Dec 2013","Jan 2014","Feb 2014","Mar 2014","Apr 2014","May 2014","Jun 2014","Jul 2014","Aug 2014","Sep 2014","Oct 2014","Nov 2014","Dec 2014","Jan 2015","Feb 2015","Mar 2015","Apr 2015","May 2015","Jun 2015","Jul 2015","Aug 2015","Sep 2015","Oct 2015","Nov 2015","Dec 2015","Jan 2016","Feb 2016","Mar 2016","Apr 2016","May 2016","Jun 2016","Jul 2016","Aug 2016","Sep 2016","Oct 2016","Nov 2016","Dec 2016"],data:{master:{label:"master",data:[15,34,64,114,137,52,85,133,109,76,96,107,143,216,183,145,129,130,130,138,179,266,188,234,162,120,75,82,99,249,310,270,244,240,261,207,311,254,195,187,286,182,197,143,171,67,168,209,219,289,173,161,112,173,218,84,111,104,106,143,114,77,53,86,57,74,81,79,101,83,123,321,207,210,158,174,154,115,188,180,194,202,189,260,270,214,256,309,217,178,223,261,235,208,404]},"v0.8":{label:"0.8",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,184,269,127,122,67,64,15,28,38,41,19,9,1,12,1,null,null,8,1,1,2,null,1,1,5,6,5,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},"v0.10":{label:"0.10",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,217,233,95,80,55,56,36,32,40,37,39,52,37,16,15,25,21,25,22,14,29,16,25,17,9,21,9,3,10,15,4,3,null,5,5,2,9,11,1,6,6,null,1,8,5,null,null]},"v0.12":{label:"0.12",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,62,48,54,15,31,33,37,9,10,2,10,8,2,10,13,2,6,11,null,1,7,6,1,4]},v4:{label:"4 (LTS)",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,178,167,157,164,160,198,185,135,127,163,121,97,86,75,76,88,95]},v5:{label:"5",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,177,185,187,177,220,225,168,103,7,5,null,null,null,null,null,null]},v6:{label:"6 (LTS)",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,213,255,290,195,183,194,240,171,145,177]},v7:{label:"7",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,257,223,196,364]}}},module.exports.committers={labels:["Feb 2009","Mar 2009","Apr 2009","May 2009","Jun 2009","Jul 2009","Aug 2009","Sep 2009","Oct 2009","Nov 2009","Dec 2009","Jan 2010","Feb 2010","Mar 2010","Apr 2010","May 2010","Jun 2010","Jul 2010","Aug 2010","Sep 2010","Oct 2010","Nov 2010","Dec 2010","Jan 2011","Feb 2011","Mar 2011","Apr 2011","May 2011","Jun 2011","Jul 2011","Aug 2011","Sep 2011","Oct 2011","Nov 2011","Dec 2011","Jan 2012","Feb 2012","Mar 2012","Apr 2012","May 2012","Jun 2012","Jul 2012","Aug 2012","Sep 2012","Oct 2012","Nov 2012","Dec 2012","Jan 2013","Feb 2013","Mar 2013","Apr 2013","May 2013","Jun 2013","Jul 2013","Aug 2013","Sep 2013","Oct 2013","Nov 2013","Dec 2013","Jan 2014","Feb 2014","Mar 2014","Apr 2014","May 2014","Jun 2014","Jul 2014","Aug 2014","Sep 2014","Oct 2014","Nov 2014","Dec 2014","Jan 2015","Feb 2015","Mar 2015","Apr 2015","May 2015","Jun 2015","Jul 2015","Aug 2015","Sep 2015","Oct 2015","Nov 2015","Dec 2015","Jan 2016","Feb 2016","Mar 2016","Apr 2016","May 2016","Jun 2016","Jul 2016","Aug 2016","Sep 2016","Oct 2016","Nov 2016","Dec 2016"],data:{year:2016,tot:{label:"Committers",data:[1,1,1,1,2,2,3,8,5,11,17,18,24,24,19,25,22,25,25,20,28,26,20,14,21,20,20,18,14,43,30,23,27,33,28,27,38,41,26,37,36,30,25,22,24,21,21,34,19,42,26,25,16,19,28,13,21,20,31,25,29,18,30,28,23,28,26,27,26,26,53,71,54,52,40,44,44,28,45,51,66,66,72,72,70,79,78,81,62,53,75,100,86,84,202]},avg:{label:"Average",data:[null,null,null,null,null,null,null,null,null,null,null,5,7,9,11,13,14,16,18,19,21,22,23,22,22,22,22,21,20,22,22,23,23,23,24,25,26,28,29,30,32,31,30,30,30,29,29,29,28,28,28,27,25,24,24,24,23,23,24,23,24,22,22,23,23,24,24,25,25,26,28,32,34,37,37,39,40,40,42,44,47,51,52,52,54,56,59,62,64,66,68,72,74,76,86]}}},module.exports.releases={labels:["May 2009","Jun 2009","Jul 2009","Aug 2009","Sep 2009","Oct 2009","Nov 2009","Dec 2009","Jan 2010","Feb 2010","Mar 2010","Apr 2010","May 2010","Jun 2010","Jul 2010","Aug 2010","Sep 2010","Oct 2010","Nov 2010","Dec 2010","Jan 2011","Feb 2011","Mar 2011","Apr 2011","May 2011","Jun 2011","Jul 2011","Aug 2011","Sep 2011","Oct 2011","Nov 2011","Dec 2011","Jan 2012","Feb 2012","Mar 2012","Apr 2012","May 2012","Jun 2012","Jul 2012","Aug 2012","Sep 2012","Oct 2012","Nov 2012","Dec 2012","Jan 2013","Feb 2013","Mar 2013","Apr 2013","May 2013","Jun 2013","Jul 2013","Aug 2013","Sep 2013","Oct 2013","Nov 2013","Dec 2013","Jan 2014","Feb 2014","Mar 2014","Apr 2014","May 2014","Jun 2014","Jul 2014","Aug 2014","Sep 2014","Oct 2014","Nov 2014","Dec 2014","Jan 2015","Feb 2015","Mar 2015","Apr 2015","May 2015","Jun 2015","Jul 2015","Aug 2015","Sep 2015","Oct 2015","Nov 2015","Dec 2015","Jan 2016","Feb 2016","Mar 2016","Apr 2016","May 2016","Jun 2016","Jul 2016","Aug 2016","Sep 2016","Oct 2016","Nov 2016","Dec 2016"],data:{year:2016,tot:{label:"Releases",data:[2,5,1,6,6,2,5,4,2,4,3,4,4,2,3,3,2,3,2,2,5,3,3,3,1,1,4,3,4,2,4,3,5,6,5,3,3,6,5,6,4,5,null,3,5,5,7,5,5,6,4,4,4,3,2,3,2,1,1,null,3,2,2,1,2,1,null,2,5,6,11,5,7,5,10,3,7,4,2,6,5,10,10,3,7,7,3,2,5,9,4,5]}}},module.exports.contributors={labels:["2009","2010","2011","2012","2013","2014","2015","2016"],data:{year:2016,tot:{label:"Contributors",data:[35,113,119,130,122,144,225,476]}}},module.exports.versionsPercentage={
labels:["2016-01-01","2016-01-02","2016-01-03","2016-01-04","2016-01-05","2016-01-06","2016-01-07","2016-01-08","2016-01-09","2016-01-10","2016-01-11","2016-01-12","2016-01-13","2016-01-14","2016-01-15","2016-01-16","2016-01-17","2016-01-18","2016-01-19","2016-01-20","2016-01-21","2016-01-22","2016-01-23","2016-01-24","2016-01-25","2016-01-26","2016-01-27","2016-01-28","2016-01-29","2016-01-30","2016-01-31","2016-02-01","2016-02-02","2016-02-03","2016-02-04","2016-02-05","2016-02-06","2016-02-07","2016-02-08","2016-02-09","2016-02-10","2016-02-11","2016-02-12","2016-02-13","2016-02-14","2016-02-15","2016-02-16","2016-02-17","2016-02-18","2016-02-19","2016-02-20","2016-02-21","2016-02-22","2016-02-23","2016-02-24","2016-02-25","2016-02-26","2016-02-27","2016-02-28","2016-02-29","2016-03-01","2016-03-02","2016-03-03","2016-03-04","2016-03-05","2016-03-06","2016-03-07","2016-03-08","2016-03-09","2016-03-10","2016-03-11","2016-03-12","2016-03-13","2016-03-14","2016-03-15","2016-03-16","2016-03-17","2016-03-18","2016-03-19","2016-03-20","2016-03-21","2016-03-22","2016-03-23","2016-03-24","2016-03-25","2016-03-26","2016-03-27","2016-03-28","2016-03-29","2016-03-30","2016-03-31","2016-04-01","2016-04-02","2016-04-03","2016-04-04","2016-04-05","2016-04-06","2016-04-07","2016-04-08","2016-04-09","2016-04-10","2016-04-11","2016-04-12","2016-04-13","2016-04-14","2016-04-15","2016-04-16","2016-04-17","2016-04-18","2016-04-19","2016-04-20","2016-04-21","2016-04-22","2016-04-23","2016-04-24","2016-04-25","2016-04-26","2016-04-27","2016-04-28","2016-04-29","2016-04-30","2016-05-01","2016-05-02","2016-05-03","2016-05-04","2016-05-05","2016-05-06","2016-05-07","2016-05-08","2016-05-09","2016-05-10","2016-05-11","2016-05-12","2016-05-13","2016-05-14","2016-05-15","2016-05-16","2016-05-17","2016-05-18","2016-05-19","2016-05-20","2016-05-21","2016-05-22","2016-05-23","2016-05-24","2016-05-25","2016-05-26","2016-05-27","2016-05-28","2016-05-29","2016-05-30","2016-05-31","2016-06-01","2016-06-02","2016-06-03","2016-06-04","2016-06-05","2016-06-06","2016-06-07","2016-06-08","2016-06-09","2016-06-10","2016-06-11","2016-06-12","2016-06-13","2016-06-14","2016-06-15","2016-06-16","2016-06-17","2016-06-18","2016-06-19","2016-06-20","2016-06-21","2016-06-22","2016-06-23","2016-06-24","2016-06-25","2016-06-26","2016-06-27","2016-06-28","2016-06-29","2016-06-30","2016-07-01","2016-07-02","2016-07-03","2016-07-04","2016-07-05","2016-07-06","2016-07-07","2016-07-08","2016-07-09","2016-07-10","2016-07-11","2016-07-12","2016-07-13","2016-07-14","2016-07-15","2016-07-16","2016-07-17","2016-07-18","2016-07-19","2016-07-20","2016-07-21","2016-07-22","2016-07-23","2016-07-24","2016-07-25","2016-07-26","2016-07-27","2016-07-28","2016-07-29","2016-07-30","2016-07-31","2016-08-01","2016-08-02","2016-08-03","2016-08-04","2016-08-05","2016-08-06","2016-08-07","2016-08-08","2016-08-09","2016-08-10","2016-08-11","2016-08-12","2016-08-13","2016-08-14","2016-08-15","2016-08-16","2016-08-17","2016-08-18","2016-08-19","2016-08-20","2016-08-21","2016-08-22","2016-08-23","2016-08-24","2016-08-25","2016-08-26","2016-08-27","2016-08-28","2016-08-29","2016-08-30","2016-08-31","2016-09-01","2016-09-02","2016-09-03","2016-09-04","2016-09-05","2016-09-06","2016-09-07","2016-09-08","2016-09-09","2016-09-10","2016-09-11","2016-09-12","2016-09-13","2016-09-14","2016-09-15","2016-09-16","2016-09-17","2016-09-18","2016-09-19","2016-09-20","2016-09-21","2016-09-22","2016-09-23","2016-09-24","2016-09-25","2016-09-26","2016-09-27","2016-09-28","2016-09-29","2016-09-30","2016-10-01","2016-10-02","2016-10-03","2016-10-04","2016-10-05","2016-10-06","2016-10-07","2016-10-08","2016-10-09","2016-10-10","2016-10-11","2016-10-12","2016-10-13","2016-10-14","2016-10-15","2016-10-16","2016-10-17","2016-10-18","2016-10-19","2016-10-20","2016-10-21","2016-10-22","2016-10-23","2016-10-24","2016-10-25","2016-10-26","2016-10-27","2016-10-28","2016-10-29","2016-10-30","2016-10-31","2016-11-01","2016-11-02","2016-11-03","2016-11-04","2016-11-05","2016-11-06","2016-11-07","2016-11-08","2016-11-09","2016-11-10","2016-11-11","2016-11-12","2016-11-13","2016-11-14","2016-11-15","2016-11-16","2016-11-17","2016-11-18","2016-11-19","2016-11-20","2016-11-21","2016-11-22","2016-11-23","2016-11-24","2016-11-25","2016-11-26","2016-11-27","2016-11-28","2016-11-29","2016-11-30","2016-12-01","2016-12-02","2016-12-03","2016-12-04","2016-12-05","2016-12-06","2016-12-07","2016-12-08","2016-12-09","2016-12-10","2016-12-11","2016-12-12","2016-12-13","2016-12-14","2016-12-15","2016-12-16","2016-12-17","2016-12-18","2016-12-19","2016-12-20","2016-12-21","2016-12-22","2016-12-23","2016-12-24","2016-12-25","2016-12-26","2016-12-27","2016-12-28","2016-12-29","2016-12-30","2016-12-31"],data:{"v0.10":{label:"0.10",data:[.28,.27,.28,.31,.32,.31,.31,.26,.26,.26,.26,.26,.23,.23,.25,.29,.26,.24,.23,.23,.23,.22,.23,.22,.23,.23,.24,.24,.23,.23,.24,.23,.23,.22,.23,.23,.23,.24,.22,.26,.3,.29,.28,.22,.23,.27,.27,.27,.27,.23,.18,.19,.19,.19,.18,.19,.18,.17,.19,.2,.19,.2,.2,.26,.19,.2,.26,.27,.27,.26,.23,.18,.18,.2,.19,.19,.19,.19,.22,.24,.2,.19,.21,.19,.2,.19,.19,.21,.18,.18,.17,.24,.21,.19,.17,.16,.16,.17,.17,.19,.19,.17,.17,.18,.18,.17,.19,.2,.17,.17,.16,.16,.16,.17,.18,.17,.16,.16,.17,.17,.21,.2,.17,.16,.19,.18,.24,.27,.2,.19,.19,.2,.19,.21,.21,.21,.17,.18,.17,.18,.19,.23,.24,.18,.18,.17,.17,.17,.2,.21,.18,.17,.17,.17,.17,.2,.2,.19,.22,.23,.24,.23,.3,.29,.21,.2,.2,.19,.2,.25,.24,.18,.18,.19,.2,.25,.24,.22,.2,.19,.2,.18,.2,.25,.26,.22,.2,.2,.2,.2,.26,.28,.19,.19,.18,.19,.19,.26,.26,.2,.2,.2,.18,.19,.27,.21,.16,.28,.25,.15,.13,.14,.15,.12,.13,.13,.13,.12,.14,.14,.13,.13,.13,.13,.13,.15,.16,.14,.12,.12,.12,.1,.12,.12,.11,.11,.12,.12,.11,.13,.13,.11,.11,.11,.11,.11,.13,.13,.11,.11,.11,.1,.1,.11,.14,.11,.1,.11,.11,.1,.11,.11,.11,.11,.11,.11,.11,.11,.11,.1,.1,.18,.18,.17,.16,.17,.18,.18,.2,.19,.18,.15,.16,.18,.18,.18,.18,.16,.13,.15,.15,.17,.16,.15,.15,.13,.13,.16,.11,.09,.1,.1,.11,.12,.1,.1,.1,.1,.09,.1,.12,.09,.1,.1,.1,.09,.1,.12,.09,.09,.09,.09,.09,.1,.11,.1,.1,.09,.09,.1,.1,.11,.09,.1,.1,.09,.11,.1,.12,.1,.1,.09,.09,.09,.1,.11,.09,.09,.09,.09,.09,.11,.1,.09,.09,.09,.09,.1,.12,.13,.11,.1,.09,.09,.09,.11]},"v0.12":{label:"0.12",data:[.15,.16,.17,.16,.17,.16,.17,.16,.13,.14,.17,.18,.18,.19,.18,.15,.16,.18,.19,.19,.17,.17,.16,.15,.18,.18,.18,.18,.18,.14,.15,.18,.19,.18,.18,.18,.16,.16,.18,.16,.14,.15,.15,.12,.12,.15,.15,.14,.15,.15,.13,.13,.15,.15,.15,.14,.14,.13,.13,.15,.16,.15,.15,.14,.13,.13,.14,.14,.14,.14,.14,.13,.14,.15,.15,.15,.14,.14,.11,.12,.15,.15,.14,.15,.14,.13,.13,.14,.14,.15,.16,.15,.14,.15,.16,.16,.15,.15,.15,.13,.12,.14,.15,.15,.14,.14,.13,.13,.14,.14,.13,.14,.14,.12,.11,.13,.13,.13,.13,.13,.1,.11,.13,.13,.13,.12,.11,.11,.12,.13,.13,.13,.13,.12,.11,.12,.13,.13,.13,.12,.13,.1,.11,.13,.12,.12,.12,.12,.11,.11,.12,.13,.13,.13,.13,.11,.11,.12,.11,.11,.11,.11,.1,.09,.11,.11,.11,.12,.12,.15,.15,.13,.12,.11,.11,.09,.08,.08,.1,.1,.1,.11,.1,.09,.08,.1,.1,.1,.1,.1,.09,.08,.1,.1,.1,.1,.1,.08,.09,.1,.09,.09,.1,.1,.08,.08,.09,.08,.08,.09,.09,.08,.08,.09,.09,.1,.09,.1,.09,.09,.09,.09,.09,.09,.09,.09,.09,.09,.09,.09,.09,.08,.08,.08,.09,.09,.09,.09,.09,.08,.08,.08,.08,.08,.08,.09,.09,.09,.09,.08,.08,.08,.08,.08,.08,.08,.08,.08,.08,.08,.09,.08,.08,.08,.08,.08,.08,.08,.07,.07,.07,.07,.07,.07,.06,.07,.07,.06,.06,.07,.07,.06,.07,.07,.06,.06,.06,.06,.06,.06,.06,.06,.06,.06,.06,.06,.07,.06,.06,.06,.06,.06,.06,.07,.06,.06,.06,.06,.06,.06,.07,.06,.06,.05,.06,.06,.06,.07,.06,.06,.05,.05,.05,.05,.06,.05,.05,.05,.05,.05,.05,.06,.05,.05,.05,.05,.05,.06,.06,.05,.05,.05,.05,.05,.05,.05,.05,.05,.05,.05,.05,.06,.06,.05,.05,.05,.05,.06,.06,.06,.06,.06,.05,.06,.06,0]},v4:{label:"4 (LTS)",data:[.39,.37,.35,.36,.34,.36,.32,.32,.3,.3,.35,.37,.4,.37,.37,.35,.34,.36,.37,.38,.38,.4,.38,.4,.38,.38,.37,.38,.38,.42,.39,.38,.37,.38,.37,.37,.38,.37,.38,.39,.37,.37,.37,.45,.45,.39,.39,.4,.39,.41,.48,.47,.44,.43,.43,.4,.42,.49,.48,.42,.42,.41,.41,.37,.46,.46,.39,.39,.38,.39,.42,.49,.49,.43,.44,.44,.43,.45,.47,.43,.42,.42,.41,.42,.42,.47,.47,.42,.44,.43,.43,.38,.42,.43,.41,.42,.41,.41,.42,.42,.42,.43,.43,.43,.43,.45,.46,.44,.43,.44,.46,.45,.45,.48,.47,.45,.44,.43,.43,.43,.45,.45,.44,.44,.43,.43,.39,.4,.43,.41,.4,.4,.41,.4,.42,.42,.42,.41,.41,.4,.4,.41,.4,.4,.41,.42,.42,.43,.42,.41,.4,.41,.41,.41,.4,.41,.42,.4,.39,.39,.38,.37,.36,.37,.39,.39,.38,.39,.38,.35,.36,.38,.4,.41,.4,.4,.46,.48,.42,.41,.41,.41,.42,.43,.41,.38,.38,.39,.39,.39,.4,.39,.39,.39,.39,.39,.39,.4,.38,.39,.4,.4,.39,.38,.38,.4,.4,.36,.38,.43,.44,.47,.47,.44,.44,.42,.42,.44,.46,.46,.42,.43,.41,.41,.4,.43,.42,.41,.42,.43,.42,.46,.5,.48,.44,.43,.43,.43,.44,.49,.46,.42,.43,.43,.43,.42,.44,.43,.4,.39,.42,.42,.42,.49,.44,.41,.41,.4,.38,.39,.43,.42,.39,.38,.39,.39,.41,.48,.47,.42,.41,.38,.38,.38,.46,.45,.38,.37,.36,.36,.37,.44,.41,.36,.36,.38,.35,.37,.43,.43,.37,.36,.36,.36,.38,.43,.42,.38,.35,.29,.29,.3,.31,.31,.29,.28,.29,.3,.32,.32,.3,.28,.28,.27,.27,.27,.27,.26,.26,.27,.27,.26,.27,.29,.28,.26,.26,.25,.24,.22,.22,.25,.26,.26,.26,.27,.26,.24,.24,.25,.26,.25,.25,.24,.25,.25,.25,.26,.26,.26,.26,.26,.26,.26,.25,.24,.25,.24,.24,.24,.23,.23,.23,.25,.23,.24]},v5:{label:"5",data:[.18,.2,.2,.16,.16,.17,.2,.25,.31,.3,.22,.19,.19,.2,.2,.21,.23,.22,.21,.2,.22,.21,.23,.23,.22,.21,.21,.21,.21,.21,.21,.22,.21,.21,.22,.22,.23,.23,.22,.2,.19,.19,.2,.2,.2,.2,.19,.19,.19,.21,.2,.22,.22,.23,.24,.27,.26,.21,.2,.23,.23,.23,.24,.22,.23,.21,.21,.21,.21,.21,.21,.2,.19,.23,.22,.22,.23,.22,.2,.21,.24,.24,.24,.24,.23,.21,.21,.24,.24,.24,.24,.22,.23,.23,.26,.27,.27,.26,.26,.26,.27,.26,.25,.25,.25,.25,.22,.23,.26,.25,.25,.25,.25,.24,.23,.25,.23,.17,.17,.17,.12,.12,.17,.17,.17,.18,.16,.11,.13,.16,.17,.17,.17,.17,.13,.13,.18,.17,.17,.18,.17,.12,.12,.17,.17,.17,.16,.16,.13,.13,.16,.16,.17,.17,.16,.13,.13,.16,.15,.15,.15,.16,.1,.11,.16,.16,.16,.16,.16,.1,.11,.15,.15,.15,.15,.13,.09,.1,.14,.15,.15,.15,.14,.1,.09,.13,.16,.15,.15,.15,.1,.09,.14,.15,.15,.14,.14,.09,.1,.14,.14,.14,.14,.13,.08,.1,.14,.12,.12,.13,.14,.1,.1,.13,.13,.14,.14,.13,.08,.09,.13,.13,.14,.14,.15,.1,.1,.14,.13,.13,.13,.12,.08,.1,.13,.13,.13,.13,.13,.09,.09,.13,.13,.13,.13,.13,.09,.09,.12,.14,.13,.13,.13,.09,.09,.13,.14,.14,.14,.13,.09,.09,.13,.13,.13,.12,.12,.08,.08,.12,.12,.11,.11,.11,.07,.07,.11,.12,.11,.12,.12,.09,.09,.11,.11,.09,.1,.1,.06,.07,.09,.09,.09,.09,.09,.07,.07,.09,.11,.1,.1,.1,.06,.07,.1,.1,.1,.09,.1,.06,.07,.1,.1,.1,.1,.1,.07,.07,.1,.09,.1,.1,.1,.07,.06,.09,.09,.08,.07,.07,.05,.05,.09,.08,.09,.09,.08,.06,.06,.08,.08,.08,.08,.08,.06,.06,.09,.09,.09,.09,.08,.06,.06,.08,.08,.07,.07,.06,.05,.05,.05,.07,.07,.07,.07,.06]},v6:{label:"6 (LTS)",data:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.04,.11,.1,.09,.12,.11,.09,.09,.09,.09,.09,.12,.12,.1,.1,.1,.1,.1,.13,.12,.11,.11,.12,.12,.11,.14,.13,.13,.13,.13,.12,.13,.14,.14,.14,.13,.12,.13,.14,.15,.15,.14,.13,.12,.12,.12,.13,.14,.13,.14,.15,.14,.15,.16,.15,.15,.15,.15,.15,.13,.13,.12,.14,.14,.14,.15,.15,.14,.15,.17,.15,.16,.17,.17,.15,.16,.18,.18,.18,.18,.18,.17,.17,.18,.17,.17,.19,.19,.18,.2,.2,.16,.17,.19,.2,.21,.2,.22,.21,.21,.21,.21,.22,.22,.23,.22,.24,.23,.22,.23,.23,.23,.24,.24,.24,.24,.22,.22,.24,.23,.24,.23,.23,.21,.23,.26,.25,.25,.25,.26,.25,.26,.28,.27,.26,.26,.26,.24,.26,.26,.26,.27,.29,.3,.28,.3,.29,.29,.29,.3,.28,.25,.26,.28,.29,.27,.26,.27,.25,.24,.26,.27,.26,.27,.27,.26,.27,.28,.28,.29,.31,.31,.32,.3,.32,.32,.33,.34,.32,.3,.31,.31,.33,.35,.35,.35,.34,.34,.37,.38,.37,.36,.35,.36,.36,.38,.38,.37,.38,.37,.38,.36,.39,.39,.39,.4,.39,.39,.39,.4,.39,.39,.44,.43,.46,.42,.41,.4,.41,.41,.4,.38,.37,.41,.4,.42,.42,.42,.41,.4,.41,.42,.42,.42,.42,.41,.4,.42,.43,.42,.43,.44,.44,.42,.44,.44,.44,.44,.44,.43]},v7:{label:"7",data:[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,.03,.1,.09,.09,.11,.09,.08,.08,.08,.1,.08,.1,.09,.08,.08,.11,.1,.1,.12,.12,.11,.09,.1,.1,.1,.11,.11,.09,.1,.13,.11,.12,.12,.11,.1,.1,.09,.1,.1,.17,.16,.11,.1,.11,.11,.13,.12,.13,.11,.1,.1,.1,.1,.1,.12,.1,.09,.12,.1,.11,.1,.1,.11,.11,.11,.1,.11,.1]}}}},{}],5:[function(require,module,exports){module.exports.stats={year:2017,total:257997686,totalTb:1819.76167,days:365,dayAverage:"706843",highest:1121568,highestDay:"2017-12-21",average:{Tuesday:864992,Friday:796176,Sunday:419502,Thursday:872745,Saturday:434663,Monday:786442,Wednesday:883855},osPercent:{linux:.763269,macos:.047196,windows:.189534,linuxDelta:"+6.5%",macosDelta:"-0.7%",windowsDelta:"-5.8%"},topDevelopingCountries:[{name:"China",downloads:11971018,downloadsDelta:"+16%"},{name:"Russia",downloads:4473551,downloadsDelta:"+244%"},{name:"India",downloads:3828299,downloadsDelta:"+45%"},{name:"Brazil",downloads:1602735,downloadsDelta:"+17%"},{name:"Vietnam",downloads:1197968,downloadsDelta:"+55%"}],newContributors:741,releasesMonthAverage:5.083333,totalDelta:"+49%",tbDelta:"+39%",newContributorsDelta:"+63%",releasesMonthAverageDelta:"-13%",topReleaseMonths:[{count:10,months:["Mar"]},{count:8,months:["Jan","Oct"]},{count:7,months:["Jul"]}]},module.exports.totals={labels:["Jan-1","Jan-2","Jan-3","Jan-4","Jan-5","Jan-6","Jan-7","Jan-8","Jan-9","Jan-10","Jan-11","Jan-12","Jan-13","Jan-14","Jan-15","Jan-16","Jan-17","Jan-18","Jan-19","Jan-20","Jan-21","Jan-22","Jan-23","Jan-24","Jan-25","Jan-26","Jan-27","Jan-28","Jan-29","Jan-30","Jan-31","Feb-1","Feb-2","Feb-3","Feb-4","Feb-5","Feb-6","Feb-7","Feb-8","Feb-9","Feb-10","Feb-11","Feb-12","Feb-13","Feb-14","Feb-15","Feb-16","Feb-17","Feb-18","Feb-19","Feb-20","Feb-21","Feb-22","Feb-23","Feb-24","Feb-25","Feb-26","Feb-27","Feb-28","Mar-1","Mar-2","Mar-3","Mar-4","Mar-5","Mar-6","Mar-7","Mar-8","Mar-9","Mar-10","Mar-11","Mar-12","Mar-13","Mar-14","Mar-15","Mar-16","Mar-17","Mar-18","Mar-19","Mar-20","Mar-21","Mar-22","Mar-23","Mar-24","Mar-25","Mar-26","Mar-27","Mar-28","Mar-29","Mar-30","Mar-31","Apr-1","Apr-2","Apr-3","Apr-4","Apr-5","Apr-6","Apr-7","Apr-8","Apr-9","Apr-10","Apr-11","Apr-12","Apr-13","Apr-14","Apr-15","Apr-16","Apr-17","Apr-18","Apr-19","Apr-20","Apr-21","Apr-22","Apr-23","Apr-24","Apr-25","Apr-26","Apr-27","Apr-28","Apr-29","Apr-30","May-1","May-2","May-3","May-4","May-5","May-6","May-7","May-8","May-9","May-10","May-11","May-12","May-13","May-14","May-15","May-16","May-17","May-18","May-19","May-20","May-21","May-22","May-23","May-24","May-25","May-26","May-27","May-28","May-29","May-30","May-31","Jun-1","Jun-2","Jun-3","Jun-4","Jun-5","Jun-6","Jun-7","Jun-8","Jun-9","Jun-10","Jun-11","Jun-12","Jun-13","Jun-14","Jun-15","Jun-16","Jun-17","Jun-18","Jun-19","Jun-20","Jun-21","Jun-22","Jun-23","Jun-24","Jun-25","Jun-26","Jun-27","Jun-28","Jun-29","Jun-30","Jul-1","Jul-2","Jul-3","Jul-4","Jul-5","Jul-6","Jul-7","Jul-8","Jul-9","Jul-10","Jul-11","Jul-12","Jul-13","Jul-14","Jul-15","Jul-16","Jul-17","Jul-18","Jul-19","Jul-20","Jul-21","Jul-22","Jul-23","Jul-24","Jul-25","Jul-26","Jul-27","Jul-28","Jul-29","Jul-30","Jul-31","Aug-1","Aug-2","Aug-3","Aug-4","Aug-5","Aug-6","Aug-7","Aug-8","Aug-9","Aug-10","Aug-11","Aug-12","Aug-13","Aug-14","Aug-15","Aug-16","Aug-17","Aug-18","Aug-19","Aug-20","Aug-21","Aug-22","Aug-23","Aug-24","Aug-25","Aug-26","Aug-27","Aug-28","Aug-29","Aug-30","Aug-31","Sep-1","Sep-2","Sep-3","Sep-4","Sep-5","Sep-6","Sep-7","Sep-8","Sep-9","Sep-10","Sep-11","Sep-12","Sep-13","Sep-14","Sep-15","Sep-16","Sep-17","Sep-18","Sep-19","Sep-20","Sep-21","Sep-22","Sep-23","Sep-24","Sep-25","Sep-26","Sep-27","Sep-28","Sep-29","Sep-30","Oct-1","Oct-2","Oct-3","Oct-4","Oct-5","Oct-6","Oct-7","Oct-8","Oct-9","Oct-10","Oct-11","Oct-12","Oct-13","Oct-14","Oct-15","Oct-16","Oct-17","Oct-18","Oct-19","Oct-20","Oct-21","Oct-22","Oct-23","Oct-24","Oct-25","Oct-26","Oct-27","Oct-28","Oct-29","Oct-30","Oct-31","Nov-1","Nov-2","Nov-3","Nov-4","Nov-5","Nov-6","Nov-7","Nov-8","Nov-9","Nov-10","Nov-11","Nov-12","Nov-13","Nov-14","Nov-15","Nov-16","Nov-17","Nov-18","Nov-19","Nov-20","Nov-21","Nov-22","Nov-23","Nov-24","Nov-25","Nov-26","Nov-27","Nov-28","Nov-29","Nov-30","Dec-1","Dec-2","Dec-3","Dec-4","Dec-5","Dec-6","Dec-7","Dec-8","Dec-9","Dec-10","Dec-11","Dec-12","Dec-13","Dec-14","Dec-15","Dec-16","Dec-17","Dec-18","Dec-19","Dec-20","Dec-21","Dec-22","Dec-23","Dec-24","Dec-25","Dec-26","Dec-27","Dec-28","Dec-29","Dec-30","Dec-31"],data:[{tot:{label:"2014",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,106475,116479,117920,102612,72394,71766,107595,114862,118338,114744,107766,71106,66055,95440,106903,113806,109204,98857,64711,61422,96423,111009,113035,108170,103189,67751,60894,102157,112295,110249,104993,102658,62898,59501,102472,116621,109719,111920,104020,69619,66510,117288,117120,113601,115356,109763,72582,67679,106141,117254,117180,114254,93282,63074,64598,108883,112276,111745,114984,112584,75248,65119,110671,115671,114421,112600,108284,80707,75944,123877,130509,125327,124412,119544,82371,78666,123054,124052,127417,128831,128984,83033,81497,125602,139158,138741,141166,131073,78104,80433,134390,138289,141550,140794,125491,86591,76802,134654,153685,155447,146627,140153,85281,79632,134902,152158,139254,137080,126566,75595,74904,108250,134974,137908,137223,127331,72872,70852,118689,131375,137766,15656,116620,78186,76135,133710,142523,153130,143739,133510,100315,82478,149738,151963,152999,151132,143304,84972,87864,150940,154216,148787,140270,142715,86422,81970,155239,166045,189596,185e3,152372,100854,90034,156947,170967,165954,162669,155321,99110,93609,169206,177314,170053,176810,181091,115357,106258,187550,195719,194360,192215,168911,102579,98116,178189,190480,189784,192208,177387,110225,99954,175221,178997,197274,190464,185286,115529,110387,193423,203953,204524,198278,187070,114968,107109,204438,205536,194423,163791,150686,109521,105316,171905,209763,193532,206100,182773,111980,103750,178063,201181,195269,187280,173429,107767,102593,181063,195316,184484,196848,180350,113463,106437,163143,165336,156146,103773,124946,105815,103893,146202,138606,117237]},avg:{label:"2014 (7-day Average)",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,15210,31850,48696,63355,73697,83949,99320,100518,100783,100330,101066,100882,100066,98330,97193,96545,95754,94481,93568,92906,93046,93633,93523,93375,93994,94428,94353,95172,95355,94957,94504,94428,93734,93535,93580,94198,94123,95112,95307,96267,97268,99385,99456,100011,100502,101322,101745,101912,100320,100339,100850,100693,98338,96980,96540,96932,96221,95444,95548,98306,100045,100119,100375,100860,101242,100902,100287,101067,102614,104500,106620,108178,109865,111474,111712,112100,111983,111060,111359,111990,113339,113433,113838,114202,116360,117978,119740,120038,119334,119182,120437,120313,120715,120661,119864,121076,120558,120595,122795,124780,125613,127708,127521,127925,127961,127742,125429,124065,122124,120741,120065,116258,113803,113611,113631,113740,113351,112772,114264,113750,113729,96363,94832,95592,96346,98492,100085,102280,120577,122990,126151,127057,129347,130696,130677,131733,133132,130940,131710,131882,132203,131602,130050,129966,130173,129331,129945,131635,137465,143855,145234,147296,148448,148692,149395,146018,142828,143249,143e3,143511,145262,146169,146754,148774,152456,154777,156584,159204,161834,165306,167507,165767,163941,162778,161441,160692,160039,160038,161249,162341,162603,162179,160539,161609,161360,162488,163246,164736,167337,170902,171938,173054,173309,173229,172760,174334,174560,173117,168190,162993,162214,161958,157311,157915,157787,163831,168415,168767,168543,169423,168197,168445,165756,164421,163819,163654,164083,163245,161704,163071,164060,164873,165423,162863,158580,154531,141235,133320,132228,131864,129444,125625,120067]}},{tot:{label:"2015",data:[92424,120192,101056,108490,168980,179636,174979,180462,172450,113410,112090,177606,190363,197193,193907,180219,117040,106964,169275,200787,210771,206343,202689,129219,118730,200184,231376,220083,234408,220494,135461,124171,220429,224897,236447,232886,207278,143086,132864,243890,359437,223927,247769,205644,127090,119714,186400,199991,202373,207451,202303,127120,123142,205513,222980,219069,225407,212218,148092,125364,17934,197193,225474,225536,227086,144380,135779,219038,235651,243520,263775,230459,143285,136022,244599,250953,253945,251477,245311,143516,137093,249129,280860,274193,295603,259407,162945,138082,252951,278114,270749,261795,212238,140080,137152,199717,254910,244996,244766,235848,127147,117948,229596,245880,245691,243735,226096,126344,136043,248609,252853,280185,315946,277625,220040,174455,333752,301413,307930,301171,244157,175912,163518,272441,293251,322770,333866,310257,212529,268931,341604,373542,342275,321343,296144,228615,249545,363625,332565,319723,328135,304081,209147,189610,262343,320643,328462,319907,340233,240045,275954,240569,332587,404256,440453,393511,281869,273935,374462,376120,379091,356759,333551,195871,195059,327500,330806,331169,336994,302780,201681,191050,304668,346918,353801,309703,257828,148511,209356,31524,247696,283723,259574,211225,158696,166488,282177,294210,295436,286185,289549,171610,148080,286503,297435,297790,303944,266196,141490,137854,284859,313438,313762,294750,270955,161433,150641,287002,313333,315958,323756,279090,163419,151115,286230,314249,300033,513474,268983,144077,135277,290880,302999,293743,300923,281184,148635,142615,289802,319480,317376,313793,293430,162605,170347,314098,329700,319161,320571,294644,151258,159994,294144,33301,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,284407,379901,374408,363805,334885,176106,174296,346513,369744,371322,355936,327162,165022,163639,364143,375118,380505,400825,343780,174977,173843,344195,402298,390458,397274,372997,188865,188872,380290,394756,391571,390877,343802,205525,193052,408144,403468,409251,413403,383537,193458,220059,427098,410959,412064,417195,360260,195948,204879,406290,399431,392254,396226,361864,188118,207938,399946,421781,418086,428726,377253,203062,209366,411152,470850,408779,333528,308043,200294,216800,434759,453101,427776,436390,444273,219471,236638,449750,461311,487658,479844,419188,218359,235530,485652,483571,475990,459877,405401,203308,222019,435326,418891,373204,252394,191022,171570,184423,314616,342797,329220,239134]},avg:{label:"2015 (7-day Average)",data:[118446,117767,117087,117743,120997,126859,135108,147685,155150,156915,157429,158661,160194,163367,165288,166398,166916,166184,164994,166483,168423,170199,173409,175149,176830,181246,185616,186946,190955,193499,194390,195168,198060,197134,199472,199255,197367,198456,199698,203049,222269,220481,222607,222373,220088,218210,209997,187219,184140,178380,177903,177907,178397,181127,184411,186796,189362,190778,193774,194091,167294,163611,164526,164544,166668,166138,167626,196355,201849,204427,209889,210371,210215,210250,213901,216087,217576,215820,217941,217974,218127,218774,223047,225939,232243,234257,237032,237174,237720,237327,236835,232006,225267,222001,221868,214263,210948,207269,204837,208209,206362,203618,207887,206597,206696,206549,205156,205041,207626,210342,211338,216266,226582,233943,247328,252816,264979,271916,275880,273769,268988,262684,261121,252363,251197,253317,257987,267430,272661,287720,297601,309071,311857,310068,308052,310350,307581,310727,304873,301651,302621,303755,300974,292412,277943,276240,277488,276313,281477,285891,298226,295116,296822,307650,324871,332482,338457,338168,357296,363515,359920,347963,339398,327112,315844,309135,302662,295816,292992,288597,289427,288854,285592,287894,291127,287228,280807,273211,275826,236805,222631,212620,205458,198801,200256,194132,229939,236584,238258,242059,253248,255093,252463,253081,253542,253878,256415,253079,248776,247316,247081,249367,251649,250335,251015,253864,255691,255997,255982,256296,260439,261601,261885,261953,261843,261973,259698,286801,285357,282594,280331,280996,279389,278490,248126,249869,250520,251568,251414,253768,257145,258983,260733,262728,266690,270161,271621,271876,272844,273018,271397,269918,267067,224724,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,219759,228235,239630,269994,294978,278116,298258,307130,305679,305238,304114,303011,301427,299905,302424,303191,304503,310916,313290,314712,316170,313320,317203,318625,318117,322291,324275,326422,331579,330501,330660,329746,325576,327956,328553,332532,333777,336302,339520,345197,343473,347331,350039,351109,351511,352052,348727,349083,346914,343942,342295,339465,336469,336698,335580,336017,335111,338303,341994,346637,348835,350970,351174,352775,359785,358455,344855,334968,334573,335635,339007,336472,339185,353880,373341,376081,378915,381057,382229,390784,396992,393408,393249,393091,398220,401400,399733,396881,394911,392761,390831,383641,374401,359718,330077,299452,294918,289547,272302,261432,255148,253254]}},{tot:{label:"2016",data:[171890,178659,200421,445077,460734,466369,476689,406257,237887,245531,431511,443190,438874,412776,367827,214503,215058,375127,427068,431546,457788,403021,211667,238789,432153,443846,440777,440992,382815,226608,226382,432821,442385,445060,427130,382246,201528,208073,396889,472874,530050,527100,464495,257312,276496,476635,536865,555868,545878,464217,255433,275407,483005,502732,512326,519864,474888,254128,261281,478674,497794,510401,513479,518984,279921,289547,564183,564309,575935,574001,492551,263628,264844,516818,524934,526266,527497,485966,272815,267298,499323,525482,520641,486033,388043,245179,242495,433048,504827,502444,498208,498998,249959,243730,482784,514837,522399,619373,595470,386871,408805,640774,653359,651448,620650,595537,396331,389989,637081,674174,681030,677351,605793,388816,390273,647518,624257,588057,554346,481359,266339,264127,505420,539818,556298,505412,521697,273476,253577,524697,549724,544091,531938,472439,244494,246567,489420,548713,554301,550500,490428,252122,267940,552511,570891,552206,526869,456895,243744,258370,398749,524307,538378,544965,481812,250021,253368,538871,596994,588888,567982,516672,302202,291843,551039,588226,571865,556965,501501,272645,280739,576660,585001,581325,585425,561405,302845,331392,591791,600600,602114,593909,524590,289949,310775,447905,606132,576701,599773,523903,287404,298313,573453,602282,588320,561571,515823,262949,289059,572610,585804,596728,611679,564076,282112,288042,562701,697270,655943,571130,518341,268529,274629,574575,576413,563932,571468,508786,267819,279142,576686,578093,585790,559484,510081,239534,249598,499344,583439,590774,571914,566657,290622,327625,603185,599842,606866,610967,528933,261167,287185,567075,603925,598370,585953,499670,233123,245837,414770,572255,586015,587198,519621,280943,279247,552812,591519,563649,552826,513513,275253,290549,584180,618191,593590,585598,545802,284202,301440,616351,647533,747619,717829,630553,326814,315469,637724,663453,686437,685644,603571,318061,346646,659330,644445,169241,660323,661050,377055,333030,699480,731853,760161,752959,619905,337750,316058,708530,715868,700650,674736,628204,335826,336316,636819,667880,691898,753800,641344,316918,307033,649693,692841,684716,705172,627847,330937,326922,671166,735674,731322,719466,671722,364808,333590,670321,736837,718722,599821,556662,338057,326083,668997,722230,702933,679399,652889,348674,332376,659919,725510,745024,708913,751012,334049,322849,659395,705012,709183,669639,606954,313290,299291,612067,667757,658085,600699,458551,271151,254276,349614,430152,466871,475783,414993,273237]},avg:{label:"2016 (7-day Average)",data:[250521,251534,253819,272456,289305,308897,342834,376315,384776,391220,389282,386776,382848,373718,368228,364887,360534,352479,350176,349129,355559,360587,360182,363572,371718,374115,375434,373035,370148,372282,370510,370605,370397,371009,369028,368947,365364,362749,357615,361971,374112,388394,400144,408113,417888,429280,438421,442110,444792,444753,444484,444329,445239,440362,434142,430426,431950,431764,429746,429127,428422,428147,427235,433534,437219,441257,453472,462974,472336,480982,477206,474879,471350,464583,458958,451863,445219,444279,445591,445942,443442,443521,442717,436794,422805,418857,415313,405845,402895,400295,402034,417885,418568,418744,425850,427280,430130,447440,461221,480780,504362,526932,546721,565157,565339,565349,566700,564012,563485,566458,570684,578784,580249,579176,579216,580707,573576,560295,542722,524946,507449,489429,469129,457066,452529,445539,451301,452321,450814,453567,454983,453239,457028,449991,445851,444850,439810,439666,441124,443776,446346,447435,450489,459502,462670,462371,458995,454204,453008,451640,429674,423020,421044,423629,427189,428086,427371,447388,457772,464988,468276,473256,480711,486207,487945,486693,484261,482687,480520,476297,474711,478371,477910,479262,483328,491885,496200,503436,505597,507826,510796,512008,506748,504906,501961,481406,482196,478565,479403,479305,478941,477161,495097,494547,496206,490749,489595,486101,484779,484659,482305,483506,490664,497557,500295,500150,498734,514658,523117,517324,510791,508850,506934,508631,491365,478221,478269,476904,476803,477447,477749,477989,481112,479400,479585,475544,471323,460274,461038,461750,463526,471608,478906,490053,504888,507231,509530,515109,509720,505512,499735,494576,495159,493946,490372,486192,482185,476279,454521,449996,448231,448409,451259,458091,462864,482584,485336,482141,477231,476358,475545,477160,481641,485451,489728,494410,499023,500301,501857,506453,510645,532649,551539,563646,569734,571738,574791,577065,568325,563727,559873,558622,563076,566163,563447,489562,485945,494156,502584,500639,506374,518861,603278,616512,610634,605019,602595,603888,601604,593102,581928,583113,582838,585732,575488,568633,567382,578677,580554,577853,573670,575509,579075,578049,571102,569174,571177,574018,577085,583204,589862,591904,598172,603011,603964,603843,604009,602209,585117,568680,564858,563786,563597,561510,559254,570623,584369,585886,586785,585488,585957,591970,596186,610204,608114,606753,606678,603750,598630,593019,572440,569474,566109,559348,554025,546726,536877,515677,509657,503226,465733,431789,404473,386628,380405,380703]}},{tot:{label:"2017",
data:[269626,403885,609139,688339,710566,634268,378505,359765,677199,711729,721705,733373,643562,357219,332890,613319,697581,721452,708708,707626,381822,341007,699128,746258,752831,701454,654472,330104,322014,633422,689964,701913,722127,679212,367919,352960,690183,753182,746546,739576,700729,355458,358841,699949,755660,778644,804113,722614,377140,572366,653571,803476,831189,835698,758235,451895,421150,795855,720505,838114,830958,739961,409600,376094,137513,630506,767779,798035,735545,391181,359702,739370,795265,794092,777465,699874,379342,364243,741760,798426,819556,787492,703916,383583,354874,759918,782717,773469,782743,709855,366861,347437,720047,699472,929330,908215,857758,510717,488983,876811,916968,917636,874729,716494,477394,456553,723315,892498,905017,894102,863792,538241,556159,923040,1009710,977904,927419,892299,525236,531126,728402,887191,924333,909869,845015,494353,478265,839940,924859,935898,983932,920942,526439,395470,795201,836829,809763,807461,725341,368758,342324,741045,838582,828105,730827,695358,368715,335404,580654,747278,881750,863781,773162,372300,339188,712819,831982,845964,830035,765214,381761,372858,798821,894069,888590,872978,790871,375978,349377,831608,885125,869657,862765,771207,385525,376688,802746,875506,860963,864297,803176,439254,424866,741793,726996,875537,881273,832807,420979,410940,843870,930085,923232,920501,830442,491931,457254,881055,933840,939504,940398,860602,563099,493596,889218,914955,910405,884335,789744,418331,387889,839119,892205,868760,865712,812272,445782,417124,828762,906959,870422,870136,807394,431189,410029,814059,817713,906037,885566,782071,396845,392514,795712,881909,864250,869420,769813,399492,401551,811451,894325,889401,865323,776609,406023,393793,675065,873790,928037,881281,801159,403659,434457,853161,908189,887546,911267,826584,426454,405222,860634,926835,910708,900986,833800,424385,412912,874299,938953,946302,898944,802528,410539,380887,790256,892501,899151,904428,851832,456258,464008,882172,978258,975847,975247,895162,450639,431813,891867,937378,921799,952756,879092,451660,433533,923563,995730,1026189,996976,913386,461042,435775,905262,935838,942481,976290,886627,463235,422571,922947,1046624,1062347,1035018,941514,499569,477190,982960,1037370,1042946,981533,920514,486210,443844,944447,1017173,958206,811125,744660,447072,470526,964813,1015871,994059,982755,926809,483277,461336,951484,998027,991228,984593,874802,473867,450314,954861,1033408,1015166,955717,858177,454575,431897,910166,997975,1048517,1121568,918571,606454,685416,842473,812234,851883,866918,753719,534657,646986]},avg:{label:"2017 (7-day Average)",data:[382896,390649,416219,447857,481397,512722,527761,540638,579683,594338,599105,602363,603691,600650,596811,587685,585664,585628,582104,591256,594771,595930,608189,615143,619625,618589,610996,603607,600894,591507,583465,576191,579145,582679,588081,592502,600611,609642,616018,618511,621585,619804,620645,622040,622394,626979,636199,639325,642423,672926,666301,673132,680638,685150,690239,700918,679316,699642,687789,688778,688101,685491,679449,673012,578963,566106,556058,551355,550724,548093,545751,631731,655268,659027,656088,650992,649301,649950,650291,650743,654380,655813,656390,656996,655658,658252,656008,649424,648745,649594,647205,646142,640447,628554,650820,668745,689874,710425,730646,753040,784111,782441,777657,757476,752716,748083,726155,722659,720857,723624,744667,753359,767589,796121,812865,823278,828037,832110,830252,826676,798870,781368,773715,771208,764453,760041,752489,768423,773804,775457,786037,796884,801467,789640,783248,770673,752653,727443,699500,676974,669382,661645,661896,664516,653568,649285,649279,648290,625377,612334,619998,638991,650106,650618,651159,670039,682140,677028,672207,671071,672423,677233,689519,698388,704478,710613,714278,713452,710097,714781,713503,710799,709340,706531,707894,711796,707673,706299,705057,705276,709843,717518,724401,715693,694477,696559,698985,703218,700607,698617,713200,742213,749026,754630,754292,764428,771045,776357,776893,779218,782060,786369,796536,801727,802893,800196,796039,788030,777907,757226,742125,734968,731718,725769,723108,726326,730248,734424,732945,735053,735290,735922,735225,733140,732127,730026,717277,722365,724569,720952,716045,713543,710922,720093,714123,711817,710066,710444,711735,713983,715757,719350,718765,719736,720669,719560,700077,697143,702662,704942,708449,708112,713921,739363,744277,738493,742776,746409,749665,745489,746556,749220,752529,751060,752091,751795,752894,754846,756577,761662,761370,756903,754925,750350,738344,731708,724972,725755,732799,739330,751204,764335,776586,787543,797660,803850,803047,798448,799833,793993,786272,783059,780763,780909,781155,785683,794019,808931,815249,820148,821488,821808,819194,810638,798680,795724,791902,792215,790329,792855,808682,825805,834195,842036,847227,855029,863603,862281,859509,851868,848868,846960,842196,836694,833809,821703,797359,772237,766646,770458,773367,773181,778303,802822,828843,834015,832702,830798,828249,827845,828107,820678,819333,817759,818241,823296,826715,822590,820215,817459,814828,808443,803381,808146,831839,840467,862164,898381,888710,862176,834085,797707,774156,763900,758410]}}]},module.exports.totalsMonthly={labels:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],data:[{tot:{label:"2014",data:[null,null,null,null,1877033,2877055,3276839,3707636,3580370,4678725,4835116,4808443]}},{tot:{label:"2015",data:[5167281,5531588,6488674,6914710,8885173,8810078,7887142,8088239,8515752,10021043,10243008,10957704]}},{tot:{label:"2016",data:[10951832,12061660,13876894,15687708,13771741,14707443,14908496,15339291,15017641,17043408,17665412,16156614]}},{tot:{label:"2017",data:[17932932,18150706,19962948,18507913,20488130,21249011,22797850,22864198,21934121,24290305,24922497,24897075]}}]},module.exports.versions={labels:["Jan-1","Jan-2","Jan-3","Jan-4","Jan-5","Jan-6","Jan-7","Jan-8","Jan-9","Jan-10","Jan-11","Jan-12","Jan-13","Jan-14","Jan-15","Jan-16","Jan-17","Jan-18","Jan-19","Jan-20","Jan-21","Jan-22","Jan-23","Jan-24","Jan-25","Jan-26","Jan-27","Jan-28","Jan-29","Jan-30","Jan-31","Feb-1","Feb-2","Feb-3","Feb-4","Feb-5","Feb-6","Feb-7","Feb-8","Feb-9","Feb-10","Feb-11","Feb-12","Feb-13","Feb-14","Feb-15","Feb-16","Feb-17","Feb-18","Feb-19","Feb-20","Feb-21","Feb-22","Feb-23","Feb-24","Feb-25","Feb-26","Feb-27","Feb-28","Mar-1","Mar-2","Mar-3","Mar-4","Mar-5","Mar-6","Mar-7","Mar-8","Mar-9","Mar-10","Mar-11","Mar-12","Mar-13","Mar-14","Mar-15","Mar-16","Mar-17","Mar-18","Mar-19","Mar-20","Mar-21","Mar-22","Mar-23","Mar-24","Mar-25","Mar-26","Mar-27","Mar-28","Mar-29","Mar-30","Mar-31","Apr-1","Apr-2","Apr-3","Apr-4","Apr-5","Apr-6","Apr-7","Apr-8","Apr-9","Apr-10","Apr-11","Apr-12","Apr-13","Apr-14","Apr-15","Apr-16","Apr-17","Apr-18","Apr-19","Apr-20","Apr-21","Apr-22","Apr-23","Apr-24","Apr-25","Apr-26","Apr-27","Apr-28","Apr-29","Apr-30","May-1","May-2","May-3","May-4","May-5","May-6","May-7","May-8","May-9","May-10","May-11","May-12","May-13","May-14","May-15","May-16","May-17","May-18","May-19","May-20","May-21","May-22","May-23","May-24","May-25","May-26","May-27","May-28","May-29","May-30","May-31","Jun-1","Jun-2","Jun-3","Jun-4","Jun-5","Jun-6","Jun-7","Jun-8","Jun-9","Jun-10","Jun-11","Jun-12","Jun-13","Jun-14","Jun-15","Jun-16","Jun-17","Jun-18","Jun-19","Jun-20","Jun-21","Jun-22","Jun-23","Jun-24","Jun-25","Jun-26","Jun-27","Jun-28","Jun-29","Jun-30","Jul-1","Jul-2","Jul-3","Jul-4","Jul-5","Jul-6","Jul-7","Jul-8","Jul-9","Jul-10","Jul-11","Jul-12","Jul-13","Jul-14","Jul-15","Jul-16","Jul-17","Jul-18","Jul-19","Jul-20","Jul-21","Jul-22","Jul-23","Jul-24","Jul-25","Jul-26","Jul-27","Jul-28","Jul-29","Jul-30","Jul-31","Aug-1","Aug-2","Aug-3","Aug-4","Aug-5","Aug-6","Aug-7","Aug-8","Aug-9","Aug-10","Aug-11","Aug-12","Aug-13","Aug-14","Aug-15","Aug-16","Aug-17","Aug-18","Aug-19","Aug-20","Aug-21","Aug-22","Aug-23","Aug-24","Aug-25","Aug-26","Aug-27","Aug-28","Aug-29","Aug-30","Aug-31","Sep-1","Sep-2","Sep-3","Sep-4","Sep-5","Sep-6","Sep-7","Sep-8","Sep-9","Sep-10","Sep-11","Sep-12","Sep-13","Sep-14","Sep-15","Sep-16","Sep-17","Sep-18","Sep-19","Sep-20","Sep-21","Sep-22","Sep-23","Sep-24","Sep-25","Sep-26","Sep-27","Sep-28","Sep-29","Sep-30","Oct-1","Oct-2","Oct-3","Oct-4","Oct-5","Oct-6","Oct-7","Oct-8","Oct-9","Oct-10","Oct-11","Oct-12","Oct-13","Oct-14","Oct-15","Oct-16","Oct-17","Oct-18","Oct-19","Oct-20","Oct-21","Oct-22","Oct-23","Oct-24","Oct-25","Oct-26","Oct-27","Oct-28","Oct-29","Oct-30","Oct-31","Nov-1","Nov-2","Nov-3","Nov-4","Nov-5","Nov-6","Nov-7","Nov-8","Nov-9","Nov-10","Nov-11","Nov-12","Nov-13","Nov-14","Nov-15","Nov-16","Nov-17","Nov-18","Nov-19","Nov-20","Nov-21","Nov-22","Nov-23","Nov-24","Nov-25","Nov-26","Nov-27","Nov-28","Nov-29","Nov-30","Dec-1","Dec-2","Dec-3","Dec-4","Dec-5","Dec-6","Dec-7","Dec-8","Dec-9","Dec-10","Dec-11","Dec-12","Dec-13","Dec-14","Dec-15","Dec-16","Dec-17","Dec-18","Dec-19","Dec-20","Dec-21","Dec-22","Dec-23","Dec-24","Dec-25","Dec-26","Dec-27","Dec-28","Dec-29","Dec-30","Dec-31"],keys:["0.10","0.10 (7-day Average)","0.12","0.12 (7-day Average)","4.x","4.x (7-day Average)","5.x","5.x (7-day Average)","6.x","6.x (7-day Average)","7.x","7.x (7-day Average)","8.x","8.x (7-day Average)","9.x","9.x (7-day Average)"],data:{"0.10":{label:"0.10",data:[37539,47577,52435,58324,63153,49169,32436,38341,58032,51801,53118,51315,49780,29542,33001,53005,48954,49011,59362,96333,81359,54261,99317,100159,100650,96682,85087,25532,27478,41531,43416,41889,42119,39806,24402,25456,40642,43225,45416,45425,43438,25494,24901,41344,46866,45752,43963,41468,23169,56302,40529,43730,42683,43429,39917,24006,23994,38664,42111,46397,44277,37765,24178,23043,8259,29917,38655,45455,38200,21280,20878,41567,48830,47697,46560,41700,26616,24463,42100,44803,42461,38086,37844,23413,23397,38548,38924,38286,38763,33974,20394,20072,34901,38112,43839,40049,38857,20897,21227,36384,37226,37022,34953,26459,19920,18979,31612,35727,34913,34140,32046,19995,20577,34182,46e3,41821,40776,40428,25444,25890,32822,38192,37808,33883,34019,18987,18924,31631,35252,36805,36594,38308,27385,25187,37181,39517,40321,40809,33283,22815,19845,33101,40212,39869,38995,33568,22281,19144,26597,30504,32077,29826,28204,18481,17355,28444,31186,30686,30028,26872,16962,18839,32047,39457,36305,37937,35546,21904,19999,34121,35303,35070,36152,30772,19665,20299,32497,32373,32655,37279,35574,30065,30149,34649,34960,40107,40706,41159,22795,23251,38019,39234,34913,38428,33648,27235,27398,34010,37725,38589,36952,33650,32268,28523,36152,36522,36175,36236,29382,20931,19697,34153,28799,27427,27028,27901,16735,16203,25672,27311,26887,27379,28023,19934,18515,28334,27979,30703,30603,25966,16328,16331,24708,28557,27255,27434,22737,16044,16432,25845,27526,26555,24420,21973,14807,13842,20181,25023,23808,22712,20378,12532,17594,22262,23121,22668,28261,23012,14248,12370,22166,24328,24735,25359,23274,16772,16179,25726,22854,24441,22102,19454,11732,11115,18016,19866,21166,20183,21181,14400,16117,24745,23660,24393,22389,21335,12999,13265,20340,20550,19584,19999,17638,11465,11103,19069,19372,22614,20720,18392,12422,12404,19725,21470,22975,22657,19572,13333,11840,20667,21593,24908,21087,18591,12951,11983,19707,21265,24048,21409,20789,12176,11998,17839,18845,18561,15056,15003,10747,10278,21700,24707,18697,17910,16760,11527,10677,16346,17824,17548,18034,17269,11063,10820,16850,19421,19729,17021,15791,11335,10381,16500,17085,17186,19429,14005,10106,9899,10874,12533,13340,13146,12717,10002,9581]},"0.10_avg":{label:"0.10 (7-day Average)",data:[38351,39657,41380,43562,46614,48188,48661,48776,50270,50179,49435,47744,47831,47418,46655,45937,45530,44944,46093,52744,60146,63183,69799,77114,84491,89823,88216,80241,76415,68159,60053,51659,43864,37395,37234,36945,36818,36791,37295,37767,38286,38442,38363,38463,38983,39031,38822,38541,38209,42694,42578,42130,41692,41615,41394,41513,36898,36631,36400,36931,37052,36744,36769,36633,32290,30548,29442,29610,29672,29258,28949,33707,36409,37701,37858,38358,39121,39633,39709,39134,38386,37175,36624,36167,36014,35507,34667,34071,34167,33615,33183,32708,32187,32071,32865,33048,33746,33818,33983,34195,34068,33094,32366,30595,30455,30134,29453,29238,28937,28821,29619,29630,29858,30225,31693,32680,33628,34825,35604,36363,36168,35053,34480,33495,32579,31657,30662,30492,30072,29928,30316,30928,32128,33023,33816,34425,34927,35529,34811,34159,33395,32813,32912,32847,32588,32629,32553,32452,31523,30136,29023,27713,26947,26404,26149,26413,26510,26311,26340,26150,25933,26145,26660,27841,28644,29774,31013,31719,31885,32181,31587,31411,31156,30474,30154,30197,29965,29546,29201,29362,30048,31534,32941,33249,33618,34683,35172,35970,34932,33946,34428,35038,34296,33971,32898,33532,34125,33552,33336,33861,33651,33651,34370,34531,34837,34665,34320,34218,33608,31988,30727,30442,29339,28089,26773,26562,25962,25463,24252,24039,23962,24012,24030,24487,24817,25197,25293,25838,26298,26004,25489,25177,24659,24742,24249,23797,23335,23295,23309,23472,23324,23224,22794,22685,22508,22138,21329,20971,20579,20335,20107,19782,20318,20615,20343,20181,20973,21350,21595,20848,20835,21007,21302,20888,20925,21286,21830,22339,22128,22086,21621,21075,20355,19632,18530,18103,17635,17361,17608,17989,18704,19665,20207,20668,20983,21005,20805,20398,19768,19324,18637,18296,17767,17548,17239,17058,16890,17322,17425,17533,17670,17856,17949,18249,18301,18577,18746,18876,18796,18930,18948,19224,19e3,18859,18805,18825,18688,18641,18518,18564,18878,18768,18770,18503,18157,17373,16466,15639,15435,15189,15741,16578,16598,17006,17257,17368,17425,16660,15677,15513,15530,15603,15537,15557,15629,15857,16169,16024,15813,15852,15789,15739,15406,15042,15386,15131,14956,14887,14083,13433,12883,11986,11802,11787,11741]},.12:{label:"0.12",data:[14962,21097,33859,34899,35804,30466,19554,18856,32133,33472,33957,36059,30243,19675,18199,29242,32960,33733,32349,31586,18725,19237,31564,32327,31601,30243,28909,18441,17672,28879,32571,31333,33655,32566,21438,19501,32334,34130,33844,32742,31961,19953,17964,31189,33066,32797,35217,32867,19796,33628,31208,33918,38036,33145,32155,21050,19364,32093,31740,35709,35597,33181,21312,20193,6619,25778,29508,29874,28722,16845,15242,26345,28438,28610,27774,24813,15260,14346,28864,29179,28594,28780,25072,15899,13345,26453,27537,26945,27072,24314,13899,12852,25369,23459,25862,27514,26389,15655,14654,27526,28328,28285,27591,24320,17800,16654,23170,28905,29428,28004,26405,16253,16204,26860,30626,28034,27705,26281,18169,16046,22200,26885,27645,29936,26316,17769,14347,24774,27850,28746,27666,29271,17276,16724,30912,31386,28605,28686,24440,16734,17069,28413,31625,31012,24757,25397,18774,16996,23278,24260,28793,28779,26258,15946,16425,25342,28720,26315,28422,26028,16866,18316,28432,34458,29217,29218,27824,16623,14909,27665,30441,30302,28428,26733,19303,22477,28211,31517,30410,27132,27098,19771,20119,30192,27283,31561,31944,30506,18796,18036,30544,37186,30057,28982,26203,22998,19004,28040,31174,34577,30634,31919,24186,19469,32432,29504,30657,32497,28317,18440,15820,30206,29577,28929,30231,27452,18485,17385,27775,31588,31736,30745,27881,21205,22491,27763,29727,29449,30614,28368,20064,16181,29525,30727,31447,32748,26613,15995,18198,27076,31824,29863,31891,28182,17703,19344,28388,31317,33360,33849,29936,19990,23827,30320,39288,32035,32442,32395,23032,20449,32234,32616,34468,32632,31903,23018,20309,30143,29904,29441,26065,27908,21596,18973,22544,28987,27532,28220,28034,25254,20904,32559,35338,29621,32443,27963,22008,21313,29368,29090,29024,27140,25605,21378,19517,24751,27027,28309,27055,27949,18270,18621,27763,30534,27060,27570,24480,17680,15752,24649,26749,30938,27593,26463,17437,20240,26320,26735,29647,25953,26045,23167,20056,22736,23531,25996,21571,20191,19853,15485,24333,26454,24647,23379,22233,17352,14629,23138,24041,21141,24833,19354,12842,12301,19215,19729,19006,19505,18351,13485,11847,19783,22057,24059,22774,19435,12862,11619,11896,13883,14699,15419,13859,10825,20028]},"0.12_avg":{label:"0.12 (7-day Average)",data:[21568,21794,23106,24554,25897,26798,27234,27790,29367,29312,29177,29213,29182,29199,29105,28692,28619,28587,28057,28249,28113,28261,28593,28503,28198,27897,27515,27474,27251,26867,26902,26864,27351,27873,28302,28563,29056,29279,29638,29507,29421,29209,28989,28826,28674,28524,28878,29007,28985,31222,31225,31347,32095,31799,31698,31877,29839,29965,29654,29322,29672,29819,29856,29975,26335,25484,24598,23780,23143,22505,21798,24616,24996,24868,24568,24009,23783,23655,24015,24120,24118,24262,24299,24390,24247,23903,23668,23433,23189,23080,22795,22724,22569,21987,21832,21895,22192,22442,22700,23008,23704,24050,24061,23765,24072,24357,23735,23817,23981,24040,24338,24117,24052,24579,24825,24626,24583,24566,24839,24817,24151,23617,23561,23880,23885,23828,23585,23953,24091,24248,23924,24346,24275,24615,25492,25997,25977,26122,25432,25355,25404,25047,25081,25425,24864,25001,25292,25282,24548,23496,23179,23753,23876,23472,23391,23686,24323,23969,23918,23885,24016,24287,24728,25548,25962,26076,26333,26298,25811,25702,25128,25283,25170,25014,25397,26478,26556,26710,26725,26540,26592,26659,26322,26605,26e3,26165,26852,27339,27200,26902,26952,28367,28152,27729,27114,27715,27853,27495,26636,27282,27518,28335,28504,28571,29198,28960,28400,28666,28151,27330,26809,26491,26502,26255,25931,25807,25814,26037,25690,25977,26378,26452,26513,26902,27631,27629,27364,27037,27018,27088,26925,26023,26275,26418,26703,27008,26757,26176,26464,26114,26271,26045,25922,26147,26391,26554,26742,26669,27169,27449,27699,28026,28666,28942,30081,29892,29691,30042,30477,29994,30267,29314,29662,29689,29619,29617,29597,29298,28911,28192,27254,26684,26480,26290,25204,25073,24800,25108,25126,25649,25925,27355,28263,28561,29164,29154,28690,28749,28293,27400,27315,26558,26221,26131,25874,25215,24920,24818,24806,25140,24696,24568,24999,25500,25321,25395,24899,24815,24405,23960,23420,23974,23977,24260,24225,24867,25105,25103,24919,24685,24625,25443,25417,24905,24447,23926,23300,22464,21990,21337,21565,21983,21790,22048,22340,21983,21861,21690,21345,20844,21052,20641,19996,19664,19103,18487,18182,17421,17278,17370,17305,17386,17719,18441,18908,19062,18973,18941,17814,16646,15309,14259,13462,13171,14372]},"4.x":{label:"4.x",data:[57589,85802,134214,164730,164828,153161,87434,80796,155247,163428,165900,165626,140639,74615,71462,131468,152400,161650,155164,138946,62335,58968,133489,147079,158004,149563,141657,79221,77e3,148091,156293,156306,154253,145455,77467,75426,146213,160647,157578,156492,150920,80901,80762,144736,158554,151979,153941,145936,76349,113101,128989,151226,168496,220611,194707,139348,124858,207079,139207,164058,159642,140945,72326,69807,24931,118524,148666,144823,135051,69779,64861,137975,151408,150740,151524,134723,70800,67281,141268,148273,152035,146758,130505,69614,66385,141371,145294,141809,143136,130101,65436,62935,129199,128769,142641,140862,132808,68629,64313,130285,140812,140148,136025,104964,65631,61311,104047,133894,133223,135701,138919,68201,70633,135545,167576,152643,136248,123527,68741,71450,102601,125822,137780,123745,112810,59312,58205,112274,121023,125415,127928,124514,69472,69519,127461,128124,119043,117723,102415,48991,44687,102991,121087,119717,104219,99888,46140,42700,85522,101461,118006,117745,106598,54499,50819,102536,116544,116346,106764,106653,61685,63129,112340,125774,121687,119174,103519,50374,46850,108290,114848,107801,110759,95998,51148,49389,102096,110367,110733,109763,99950,58079,56921,101314,103110,120128,119359,116164,66210,65925,110807,123029,118385,116324,111013,81191,74481,125303,126316,128326,132431,120192,99943,85932,119797,120074,119013,119165,105429,65647,60049,112530,113318,111293,110502,109602,70228,64626,108667,117559,112664,108741,108835,65718,64747,109648,111748,121854,116818,105790,62392,63239,110313,125330,113198,114398,105949,65550,65874,107728,116888,114779,111436,103847,65027,62057,88881,113554,124816,116929,111409,63327,68890,113354,119029,113209,116804,110706,65178,62927,108427,117905,111890,109435,103783,61371,56615,101749,107801,106361,102970,92018,53078,50041,89665,101666,98379,100693,97951,58493,63815,103118,114164,108417,105296,99713,52897,52111,95080,103328,100349,97238,91098,52168,50187,93071,100737,104544,100522,93160,53825,54596,92100,98681,101538,100544,93124,52470,49498,91081,102934,101383,101812,94579,55967,51499,93788,101283,104184,98372,90197,51893,51949,88071,97834,89898,75943,75627,47952,48962,92071,94026,93137,91044,87782,51175,47810,81664,88404,87091,86026,79791,49795,46297,79608,87902,86211,81087,74375,47966,46210,77083,81412,80379,81176,72153,48055,47648,48857,57009,62566,66160,62601,49307,49029]},"4.x_avg":{label:"4.x (7-day Average)",data:[88105,89057,94211,102430,109232,117747,121108,124423,134344,138517,138684,138798,137010,135178,133845,130448,128872,128265,126771,126529,124775,122990,123278,122518,121997,121197,121585,123997,126573,128659,129975,129733,130403,130945,130695,130470,130201,130823,131005,131325,132106,132596,133359,133148,132849,132049,131684,130972,130322,134942,132692,131645,134005,143529,150497,159496,161176,172332,170615,169981,161271,153591,144016,136152,110130,107176,104977,102860,102018,101654,100947,117097,121794,122091,123048,123001,123147,123493,123963,123515,123700,123019,122417,122247,122119,122134,121708,120248,119730,119672,119076,118583,116844,114483,114602,114277,114664,115120,115317,115472,117192,116836,116145,112168,111739,111310,107562,106574,105585,105538,110389,110756,112088,116588,121399,124174,124252,122053,122130,122247,117540,111576,109452,107666,106135,104788,102896,104278,103592,101826,102423,104095,105547,107163,109333,110347,109437,107979,104822,101896,98349,94853,93848,93944,92015,91654,91247,90963,88467,85663,85419,87351,88310,89504,90664,93094,95249,95012,93443,93451,94478,96236,97637,98955,99718,101491,101044,99428,97102,96524,94963,92979,91777,90702,90813,91176,90291,89651,90070,89927,90492,91482,92558,92446,91410,92752,94123,96439,97600,98887,100243,103088,102839,102406,101670,103810,105032,107103,107573,108993,111294,112605,115284,116920,116133,115242,113911,112016,109907,105008,101310,100272,99307,98204,96966,97563,98217,98871,98319,98925,99121,98869,98760,98115,98133,98273,97443,98755,99909,99474,98999,98784,98879,100819,99582,99237,99259,99711,100087,99718,98512,98738,98314,98014,97939,97394,94702,94225,95659,96444,97524,97281,98258,101754,102536,100878,100860,100759,101024,100172,99468,99308,99119,98066,97077,96534,95632,94678,93234,92445,91521,89840,88656,87716,85990,85114,83973,83648,84496,85269,87237,89159,90944,92378,93036,93288,92488,90816,89668,88120,86967,85816,84585,84481,84206,83919,83549,84149,84618,84912,85149,85779,85640,85346,84917,84920,84915,84721,83993,83848,84455,84433,84614,84822,85322,85607,85994,85758,86158,85667,85041,84459,84523,83707,83214,81173,77969,75887,75324,74898,75469,74925,75388,77545,79282,79742,79577,78091,77288,76424,75707,74565,74368,74152,73858,73787,73661,72955,72182,71920,71908,71547,70620,69787,69800,69482,69495,69700,65668,62182,59637,57492,56128,56306,56504]},"5.x":{label:"5.x",data:[14481,22473,42302,50474,51600,45822,20942,17994,46524,51270,50875,55093,44795,17223,14780,39043,48077,51037,49706,49273,15956,14809,45313,49153,51929,46813,41961,16955,16094,41623,48123,45062,46174,44191,15890,17675,43276,46750,46840,46182,41704,17557,23841,41535,47576,45801,46426,42427,17232,39228,37341,44674,47787,43383,40116,16581,15106,40235,39290,47122,42804,40611,15949,13240,4929,37916,42294,42060,41006,15698,13931,40415,40848,44900,44478,35850,15324,13348,38821,42329,43269,41744,36252,14456,12972,40443,39978,38806,39813,35050,13323,12252,34923,34641,38098,35460,37024,15018,12878,33942,35618,35211,32992,24883,11120,10201,22156,32880,34634,35472,33356,13250,15416,35436,47464,48132,42422,38928,17723,21081,30962,38425,37476,34301,32768,13287,12530,30621,32596,34080,38265,35962,17567,17664,36281,38090,37170,38477,31143,13540,11523,31585,39491,39625,33168,31177,13182,11523,22197,30556,33413,31383,27327,11423,9332,25574,32265,31615,29803,28228,11365,12256,33156,37896,34934,35579,30290,13026,11408,30444,32005,32124,31584,26675,12157,11803,29778,31255,33110,30714,28685,17214,16263,26249,25988,31913,30531,31237,12641,13303,26494,32800,30635,29108,27915,15057,15400,32183,33490,36231,36897,33163,29548,23002,32952,30814,32361,30986,26593,13250,11292,29959,29692,27391,28722,27747,15556,17369,29133,30224,26947,27517,27389,14667,14900,28915,28223,32431,30182,25479,11822,12786,27324,29677,28220,28644,23783,12692,13579,26752,32748,28879,28129,24523,12217,12155,22229,29428,29152,27040,24723,11331,13408,27259,27715,27814,30339,25056,13201,12267,26832,29409,27612,27355,25771,11496,11599,27273,29946,29679,30400,27001,11072,10197,25121,28355,30588,31011,29689,16402,18108,36422,38482,39211,38641,36295,13044,12647,33664,36458,35543,37179,32971,11694,10747,32084,35146,30354,29170,24470,10327,10576,25310,27285,28205,26989,24074,9329,8316,23853,26813,27139,26489,25097,12869,10639,26056,27347,29335,23519,21125,9652,9488,21095,25843,24282,19122,19683,9791,10390,25906,24898,24285,25424,21438,11086,10587,22391,23493,22253,22578,20154,10063,8782,20240,22634,22581,20901,19253,12237,9460,21164,23413,21507,20896,18902,9854,8760,9409,12126,13493,14896,15142,9871,8667]},"5.x_avg":{label:"5.x (7-day Average)",data:[23601,24167,26271,29074,32047,34645,35442,35943,39379,40660,40718,41217,41070,40539,40080,39011,38555,38578,37808,38448,38267,38271,39167,39321,39448,39035,37990,38133,38316,37789,37642,36661,36570,36888,36736,36962,37198,37002,37256,37257,36902,37140,38021,37772,37890,37742,37777,37880,37834,40032,39433,39018,39302,38867,38537,38444,34998,35411,34642,34547,34464,34535,34445,34178,29135,28938,28249,28142,28199,28163,28262,33331,33750,34122,34468,33731,33678,33594,33367,33578,33345,32955,33012,32888,32834,33066,32730,32093,31817,31645,31483,31380,30592,29829,29728,29106,29388,29630,29720,29580,29719,29307,28954,27220,26663,26281,24597,24206,24123,24478,25688,25992,26737,28634,30718,32646,33639,34435,35074,35883,35244,33953,32431,31270,30390,29757,28535,28486,27654,27169,27735,28191,28803,29536,30345,31129,31571,31601,30913,30337,29460,28789,28989,29340,28582,28587,28535,28535,27194,25918,25030,24775,24225,23974,23661,24144,24388,24131,23905,24034,24026,24443,25526,26331,26805,27630,27925,28162,28041,27653,26812,26410,25840,25323,25199,25256,25160,25053,25194,25070,25357,26079,26717,26212,25460,25289,25263,25627,24974,24551,24586,25559,25377,25174,24699,25044,25344,26156,26255,27054,28167,28917,30987,32073,32183,31801,31248,30403,29465,27136,25464,25036,24876,24166,23842,24007,24337,25205,25087,25163,25099,24927,24876,24749,24396,24365,24079,24863,25243,24971,24564,24262,24035,24243,23641,23421,23179,23303,23417,23335,23774,23868,23794,23900,23832,23629,22982,22508,22547,22392,22420,22294,22473,23191,22946,22755,23227,23274,23541,23378,23317,23559,23530,23104,23206,22963,22867,22930,23007,23302,23737,23913,23852,23652,23345,23117,23247,23335,23719,24480,25610,27225,28671,29903,30993,31937,31457,30677,30283,29994,29470,29261,28786,28593,28322,28096,27909,27167,26023,24809,24614,24589,23621,22498,22191,21880,21823,21681,21358,21150,21082,20930,20859,21005,21510,21842,22157,22233,22547,22123,21555,21096,20931,20223,20008,19286,18658,18452,18472,18600,19288,19153,19153,20053,20304,20489,20517,20015,19814,19524,19118,18934,18788,18530,18223,18100,18147,17907,17779,18089,18186,18318,18429,18276,18275,18225,17885,17785,16105,14493,13348,12491,11954,11956,11943]},"6.x":{label:"6.x",data:[113501,177677,271019,299346,307970,276504,168538,156705,309359,326191,322285,324054,288370,150082,139832,273497,318215,325133,316741,306638,154901,147066,304594,321129,325589,299451,285386,148543,142943,298015,325762,329453,344600,320589,172786,163867,330196,361778,356710,352576,334105,161690,161748,343457,362301,395487,409462,355003,176122,216917,308091,413376,402268,376029,337715,187676,179515,365521,353985,400537,406486,373482,209690,192289,72792,317728,388373,396235,368252,196164,177344,367145,394823,384307,375479,346863,182487,175166,368551,399145,414111,396045,352735,194076,177010,378953,398270,383728,386974,350031,180118,170775,359608,308283,386162,376853,342459,173776,160270,350221,375300,373500,350660,279825,156585,144161,287632,375031,393254,380376,351912,208283,219775,409854,403941,400382,384289,375301,176768,170515,282502,367945,388102,394729,359409,172122,163473,362218,412290,416672,444103,397885,232690,179997,399530,425683,410624,409054,375966,172448,159912,375396,415250,413193,364058,343776,170227,164310,288504,388470,441045,439997,395529,183615,168578,364694,429602,444968,435312,391488,184554,172412,397279,443115,439647,426553,384907,174781,167147,421441,446652,434492,429586,387282,179483,171582,397944,448754,430107,431497,391407,185464,176463,349782,337744,421466,426330,389725,184033,176947,411532,447490,455377,456695,403279,202750,191915,419233,445608,438237,427459,385995,206535,186170,410006,442073,429692,416595,385004,183558,175383,399061,446770,436332,425842,391715,194389,182008,399488,439289,432847,418454,380380,188549,178226,385271,389631,425799,417456,374776,177242,170054,377402,423262,414497,413237,365869,175156,172803,379610,422464,420595,407719,359288,170480,168716,304972,413175,445010,428483,382938,185902,182709,407360,433845,427204,429566,391951,185199,176569,410473,438309,425863,427091,391388,184563,176368,414629,444486,445070,424984,377628,185884,173402,379984,429538,435459,437772,408055,206313,204736,406931,454369,453724,442507,407400,202125,183767,418536,438147,435501,460039,431561,217157,206058,442471,480492,481141,458656,423442,215616,191437,412815,424316,348152,368216,345438,166799,152429,349019,395565,386945,379542,337912,164897,153905,352200,379396,370569,366178,338235,161446,150912,334987,363646,334367,281142,249814,138975,149924,334097,367464,377487,380401,367311,177413,170054,357608,378527,368957,367716,318385,156601,151726,339967,371852,362211,351597,317205,152804,148536,318986,368413,435751,499337,373589,240888,313139,437578,329082,315214,322685,301586,228021,222168]},"6.x_avg":{label:"6.x (7-day Average)",
data:[164350,168429,180543,194349,209091,222873,230650,236822,255634,263516,266793,269091,270786,268149,265739,260616,259476,259883,258839,261448,262137,263170,267613,268029,268094,265624,262588,261680,261091,260151,260813,261365,267815,272844,276307,279296,283893,289038,292932,294072,296003,294417,294115,296009,296084,301623,309750,312735,314797,322678,317626,324923,325891,321115,318645,320296,314953,323157,314673,314425,318776,323886,327031,328856,287037,281858,280120,278656,277908,275976,273841,315892,326905,326324,323359,320304,318350,318039,318239,318857,323115,326053,326891,328547,328810,330296,330171,325831,324535,324149,322155,321264,318501,305645,305993,304547,303465,302559,301059,299718,309292,307483,303741,294793,292337,290036,281095,281056,283878,288123,298422,305807,316609,334069,338199,339218,339777,343118,338616,331579,313385,308243,306489,307980,305710,305046,304040,315428,321763,325845,332898,338395,347047,349408,354738,356651,355787,350780,347649,339043,336174,332726,331236,331603,325175,320576,320259,320887,308474,304648,308627,319476,326869,328781,329391,340275,346151,346712,346043,345465,345599,346147,350802,352733,351972,350721,349781,348385,347633,351084,351590,350853,351287,351626,352298,352931,349574,349875,349248,349521,350111,350965,351662,344782,328923,327689,326951,326711,326506,326575,335397,351075,355919,360257,362193,364867,367005,368106,367837,365388,361212,358742,359283,358462,357144,356639,355419,353867,353725,350443,348902,347338,348009,348958,350279,351237,352785,353731,353792,352723,352225,351170,349551,348716,348176,346145,339051,338044,337902,337101,335486,334318,333194,337999,336384,335781,334509,334211,334604,334919,334805,335676,334888,333948,333280,332696,322033,320706,324194,327161,330539,332742,334741,349368,352321,349777,349932,351220,351119,350242,350687,351324,351133,350779,350699,350608,350579,351173,352055,354799,354498,352533,352721,352298,347348,345213,343840,345667,350013,352932,357408,361258,364805,367414,368091,367997,367399,364403,366061,363744,361140,363645,367097,369244,372428,375848,381897,388417,388219,387060,386839,384751,380514,372489,353491,340571,329427,322453,316881,307767,303660,309202,310820,309744,309473,309684,310138,307828,305489,303580,303626,303133,302705,300246,297996,292824,280676,268045,264835,264694,264566,265112,271272,285452,302237,307728,310604,313963,315543,314324,312512,305523,302550,299931,297411,296458,295494,293191,293023,292480,292025,289027,288536,299042,320147,328202,340786,364300,381242,375623,358404,333168,322882,321044,308048]},"7.x":{label:"7.x",data:[25150,42713,66349,71030,78642,71182,40931,38204,68389,76977,88173,92551,80876,59068,49227,79563,89513,93500,88411,77367,41221,39080,76212,88854,76269,71391,64592,35327,33304,67874,76241,90496,93651,87836,48731,44123,89926,98591,97551,98054,90737,42442,43224,89937,99800,98861,106001,97556,57947,67396,99008,109061,123501,110996,105970,56570,52013,104528,107103,136813,135123,108451,60679,53701,18912,95870,115164,134427,119103,67428,63600,120995,126024,132418,126069,109934,64251,65592,116468,129578,130501,130733,116851,62256,58423,125599,127069,137786,140384,131887,69587,64982,131458,124864,141407,140254,131624,69659,66553,148591,154006,157972,146923,112620,62725,56559,107329,138116,132440,135149,135539,66157,65283,131567,143542,145906,136030,130198,65981,66470,101463,137643,146402,148684,132712,69541,64805,131214,149977,147179,163267,139225,71442,72153,148371,157365,158461,157063,146815,83723,80977,160651,171844,170076,149830,149370,85524,75644,128403,149584,122209,119137,104463,41471,36593,86884,101964,105360,103163,93768,41124,39858,97007,105754,109738,105259,92166,39657,38285,98144,107324,107601,107738,95489,46155,43762,99095,106588,103366,105961,99444,49434,48345,88742,90328,104451,103902,99359,49077,49719,102500,113943,112048,108011,102814,60588,52569,101704,109867,112238,113431,105127,71034,59297,103797,104060,109403,101798,87791,43402,38922,92486,95422,93963,97087,88653,45926,42718,91295,103511,96374,97823,88185,37232,35938,84378,85815,93326,94843,81832,36810,38145,84104,90229,94803,94713,84050,42756,45260,96855,103845,105315,105144,94846,52111,50010,79985,99096,100185,88648,77949,37298,40058,83529,88141,88022,91653,85969,47153,47114,91660,98003,91007,90688,85654,42902,45107,92026,95364,94899,93392,81397,36727,36532,79879,85330,88486,87543,81601,36890,38719,77725,93306,97382,89463,82949,42388,39796,82467,86845,87196,88757,78648,43154,44806,87401,92180,91329,92241,83089,47034,49170,88959,80719,77415,80274,71832,44498,38634,78834,90076,87034,83374,78171,44597,49402,90458,80992,84484,79983,71638,39350,44215,86338,82958,81073,66158,57643,35685,42024,73427,81415,71357,69607,63588,39390,44729,77572,76234,74966,73702,69908,44858,47530,83355,88799,79820,64269,61579,37546,36788,69742,69286,63061,60857,53074,30659,29060,31329,37317,44865,46974,42543,30576,31666]},"7.x_avg":{label:"7.x (7-day Average)",data:[39615,40374,43419,46223,50649,54715,56571,58435,62103,63622,66071,68058,69443,72034,73608,75205,76995,77756,77165,76664,74114,72665,72186,72092,69630,67199,65374,64532,63707,62515,60714,62746,65926,69247,71161,72707,75857,79050,80058,80687,81101,80203,80075,80076,80249,80436,81571,82545,84760,88214,89509,90832,94352,95066,96268,96071,93874,94662,94383,96284,99731,100085,100672,100914,88683,87078,83985,83886,85408,86372,87786,102369,106677,109142,107948,106638,106184,106469,105822,106330,106056,106722,107710,107425,106401,107705,107347,108388,109766,111914,112962,113899,114736,114421,114938,114919,114882,114892,115117,117564,121727,124094,125046,122332,121341,119913,114019,111749,108101,106419,109693,110184,111430,114893,115668,117591,117717,116954,116929,117099,112798,111955,112026,113834,114193,114702,114464,118714,120476,120587,122670,123601,123872,124922,127373,128428,130040,129154,130238,131993,133253,135007,137076,138735,137702,138067,138324,137562,132955,129775,122937,118553,112137,105844,100265,94334,87531,85124,82842,81314,81265,81731,83177,83719,84344,84644,84415,84205,83980,84143,84367,84062,84416,84891,85819,86601,86737,86632,86027,85773,86338,86807,87461,85982,83660,83815,83520,83508,83457,83654,85619,88993,90078,90665,91158,92803,93210,93096,92514,92541,93315,93646,95138,96099,96398,95569,95164,93502,91025,87078,84167,82551,81317,79112,78439,78562,78922,79465,79294,80450,80794,80900,80833,79591,78622,77634,75106,74671,74245,73337,73277,73592,73553,74184,74395,74376,74693,75542,76559,78380,80326,81827,83317,84860,86196,86875,84465,83786,83053,80697,78283,76167,74745,75251,73686,71949,72378,73524,74932,75940,77101,78510,78937,78799,78754,78146,77860,77912,77535,78091,78477,77869,76987,75762,74027,72593,71677,70842,70871,70894,71206,70899,72038,73309,73583,73776,74561,74715,75393,74470,73014,72914,72299,72409,73124,73829,74591,75182,75679,76314,76868,77492,77714,76077,74089,72380,70771,70409,68904,67458,68794,70168,70611,71517,71531,73069,74730,73432,73068,72583,71650,70901,70160,69571,69852,69365,67390,65390,64867,64554,62709,62489,61101,61594,62443,62972,63359,63951,63211,63726,64311,65214,65995,66395,67221,69016,69710,68362,67172,66128,64593,62649,59861,57467,56979,55764,54781,53677,48189,43622,41023,39039,37535,37523,37895]},"8.x":{label:"8.x",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17638,100967,91239,80232,42809,37207,74570,84712,84204,90815,87822,44659,40900,86782,91034,100261,99379,97380,44002,38214,93621,101938,104330,100326,92934,45024,41444,94219,97934,101421,105662,102082,51877,45401,91653,87792,101379,105176,96261,49627,45535,106427,115980,126112,126634,107920,60923,52626,117988,127332,126571,137572,125502,63712,58779,128391,131734,131914,127511,111397,56973,53305,120439,132356,128982,130884,120863,67355,60351,128142,141098,128707,145455,128029,62843,57198,131257,128616,154497,148513,126570,60266,62759,128857,139299,141131,142161,128259,57440,54459,132571,143163,148254,142798,130246,60008,54156,115836,145914,157294,150279,140946,61818,67625,154106,163809,164446,164457,144182,65947,61238,155250,173031,182209,176023,158922,72083,74416,169426,194705,201163,185599,164539,78657,68876,162345,185814,183934,184902,169422,82258,81291,181190,200995,204492,226820,202053,92357,96139,199355,209710,201974,209385,189244,82261,79716,213055,228236,252553,256108,229039,90660,86706,225551,226214,242442,252884,225177,110878,102574,250915,288894,299036,296787,275287,136045,128354,287194,308940,300835,278862,264043,130321,109256,272165,294390,284058,240750,226158,127007,136307,294571,304039,295957,291501,266853,124815,116003,288059,304827,314962,307849,270080,131741,116900,299999,322271,316570,305264,265565,116806,110970,288147,306439,291664,290230,233131,109943,94184,117007,160436,193560,195492,175707,124540,255309]},"8.x_avg":{label:"8.x (7-day Average)",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2519,16943,29977,41439,47555,52870,63523,73105,70710,70649,71734,71998,72526,74270,75173,77467,78691,80056,79962,79578,80555,82113,82694,82830,82195,82341,82802,82887,82315,81900,82662,83969,84948,85513,85147,83698,83692,83622,82791,82469,82489,84599,88626,92159,95225,96890,98504,99517,101169,102790,102856,104418,106930,107329,108208,109694,110323,111086,109649,107634,106671,105889,104753,104842,104423,104905,106257,107740,108747,109847,111096,111057,113138,114162,113517,113067,113512,111729,115413,115850,115642,115273,116068,115725,117251,115342,114434,114676,114272,113086,113617,114169,115186,115277,115561,115928,115885,113494,113887,115178,116247,117776,118034,119958,125426,127982,129004,131029,131491,132081,131169,131332,132650,135187,136840,138945,139822,141704,143730,146826,149534,150902,151704,152643,151852,150840,149570,147109,147009,147707,148221,149995,152687,154856,157792,163781,168442,169885,172006,174601,175846,175486,172996,171166,169724,167377,169335,171981,179207,185881,191566,192766,193765,195550,195261,193817,193356,192804,195693,197960,201583,210537,218622,224894,232053,235648,239331,244513,247377,247634,245073,243467,242649,239921,237774,235696,233299,227854,222442,221969,225833,229034,230412,232112,239362,245176,244863,241962,241032,241145,243860,246195,246656,247645,247774,249479,251971,252201,251832,251187,249053,248206,246513,244251,240693,238545,233912,232932,230534,206085,185227,171213,157679,149475,151560,174578]},"9.x":{label:"9.x",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,13503,78740,84207,71229,36179,32116,70545,80827,91005,83885,71636,42109,38583,72742,77841,81554,73685,75289,45702,33010,87485,95924,86315,77477,66095,44276,45188,78753,72492,73607,70185,67112,38107,34970,72300,72698,72022,72212,67290,45821,43989,83493,85640,96141,84855,74473,50997,46923,87015,97954,103080,113617,122322,133049,160022,164665,177908,183125,180949,118023,60511,39808]},"9.x_avg":{label:"9.x (7-day Average)",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1929,13177,25207,35382,40551,45139,55217,64834,66586,66540,66599,67446,68370,68683,68257,66907,65450,65971,66485,65689,67795,70378,71058,71600,70286,70083,71822,70575,67228,65412,64370,64516,63634,62175,61253,61282,61056,61345,61371,62473,63761,65360,67209,70655,72461,73487,74226,74646,75149,76908,77899,82008,88844,100565,116722,127815,139237,150672,160291,159677,149314,132141]}}},module.exports.countries={labels:["Jan-1","Jan-2","Jan-3","Jan-4","Jan-5","Jan-6","Jan-7","Jan-8","Jan-9","Jan-10","Jan-11","Jan-12","Jan-13","Jan-14","Jan-15","Jan-16","Jan-17","Jan-18","Jan-19","Jan-20","Jan-21","Jan-22","Jan-23","Jan-24","Jan-25","Jan-26","Jan-27","Jan-28","Jan-29","Jan-30","Jan-31","Feb-1","Feb-2","Feb-3","Feb-4","Feb-5","Feb-6","Feb-7","Feb-8","Feb-9","Feb-10","Feb-11","Feb-12","Feb-13","Feb-14","Feb-15","Feb-16","Feb-17","Feb-18","Feb-19","Feb-20","Feb-21","Feb-22","Feb-23","Feb-24","Feb-25","Feb-26","Feb-27","Feb-28","Mar-1","Mar-2","Mar-3","Mar-4","Mar-5","Mar-6","Mar-7","Mar-8","Mar-9","Mar-10","Mar-11","Mar-12","Mar-13","Mar-14","Mar-15","Mar-16","Mar-17","Mar-18","Mar-19","Mar-20","Mar-21","Mar-22","Mar-23","Mar-24","Mar-25","Mar-26","Mar-27","Mar-28","Mar-29","Mar-30","Mar-31","Apr-1","Apr-2","Apr-3","Apr-4","Apr-5","Apr-6","Apr-7","Apr-8","Apr-9","Apr-10","Apr-11","Apr-12","Apr-13","Apr-14","Apr-15","Apr-16","Apr-17","Apr-18","Apr-19","Apr-20","Apr-21","Apr-22","Apr-23","Apr-24","Apr-25","Apr-26","Apr-27","Apr-28","Apr-29","Apr-30","May-1","May-2","May-3","May-4","May-5","May-6","May-7","May-8","May-9","May-10","May-11","May-12","May-13","May-14","May-15","May-16","May-17","May-18","May-19","May-20","May-21","May-22","May-23","May-24","May-25","May-26","May-27","May-28","May-29","May-30","May-31","Jun-1","Jun-2","Jun-3","Jun-4","Jun-5","Jun-6","Jun-7","Jun-8","Jun-9","Jun-10","Jun-11","Jun-12","Jun-13","Jun-14","Jun-15","Jun-16","Jun-17","Jun-18","Jun-19","Jun-20","Jun-21","Jun-22","Jun-23","Jun-24","Jun-25","Jun-26","Jun-27","Jun-28","Jun-29","Jun-30","Jul-1","Jul-2","Jul-3","Jul-4","Jul-5","Jul-6","Jul-7","Jul-8","Jul-9","Jul-10","Jul-11","Jul-12","Jul-13","Jul-14","Jul-15","Jul-16","Jul-17","Jul-18","Jul-19","Jul-20","Jul-21","Jul-22","Jul-23","Jul-24","Jul-25","Jul-26","Jul-27","Jul-28","Jul-29","Jul-30","Jul-31","Aug-1","Aug-2","Aug-3","Aug-4","Aug-5","Aug-6","Aug-7","Aug-8","Aug-9","Aug-10","Aug-11","Aug-12","Aug-13","Aug-14","Aug-15","Aug-16","Aug-17","Aug-18","Aug-19","Aug-20","Aug-21","Aug-22","Aug-23","Aug-24","Aug-25","Aug-26","Aug-27","Aug-28","Aug-29","Aug-30","Aug-31","Sep-1","Sep-2","Sep-3","Sep-4","Sep-5","Sep-6","Sep-7","Sep-8","Sep-9","Sep-10","Sep-11","Sep-12","Sep-13","Sep-14","Sep-15","Sep-16","Sep-17","Sep-18","Sep-19","Sep-20","Sep-21","Sep-22","Sep-23","Sep-24","Sep-25","Sep-26","Sep-27","Sep-28","Sep-29","Sep-30","Oct-1","Oct-2","Oct-3","Oct-4","Oct-5","Oct-6","Oct-7","Oct-8","Oct-9","Oct-10","Oct-11","Oct-12","Oct-13","Oct-14","Oct-15","Oct-16","Oct-17","Oct-18","Oct-19","Oct-20","Oct-21","Oct-22","Oct-23","Oct-24","Oct-25","Oct-26","Oct-27","Oct-28","Oct-29","Oct-30","Oct-31","Nov-1","Nov-2","Nov-3","Nov-4","Nov-5","Nov-6","Nov-7","Nov-8","Nov-9","Nov-10","Nov-11","Nov-12","Nov-13","Nov-14","Nov-15","Nov-16","Nov-17","Nov-18","Nov-19","Nov-20","Nov-21","Nov-22","Nov-23","Nov-24","Nov-25","Nov-26","Nov-27","Nov-28","Nov-29","Nov-30","Dec-1","Dec-2","Dec-3","Dec-4","Dec-5","Dec-6","Dec-7","Dec-8","Dec-9","Dec-10","Dec-11","Dec-12","Dec-13","Dec-14","Dec-15","Dec-16","Dec-17","Dec-18","Dec-19","Dec-20","Dec-21","Dec-22","Dec-23","Dec-24","Dec-25","Dec-26","Dec-27","Dec-28","Dec-29","Dec-30","Dec-31"],keys:["USA","USA (7-day Average)","Europe","Europe (7-day Average)","China","China (7-day Average)","Developing Economies","Developing Economies (7-day Average)"],data:{usa:{label:"USA",data:[180907,261684,413722,479515,495994,458814,251937,251164,487599,511984,526894,536248,472645,248436,233477,425385,506081,534530,531334,542456,276770,234357,517179,560391,585204,549306,517639,241233,231932,479056,528398,526072,539403,503178,246041,241189,486512,544964,539708,539694,508345,241319,224314,496282,556666,570075,587185,523528,253572,460384,434826,579913,594247,627318,570074,331164,312261,586040,499761,609186,594433,539027,277799,264591,95199,453259,560136,575201,537788,267662,244974,536381,582642,582216,568256,512398,259009,247289,538980,585662,585549,564515,513002,269593,246880,537513,581286,562140,570202,522110,248576,237750,528422,513385,718772,702652,668031,396053,378130,665564,707958,710543,682816,562889,361536,348734,563500,687911,705301,685942,648765,422873,440361,720685,770905,774222,734602,707900,408671,431551,609862,698573,705960,707178,656984,379767,369035,647012,713346,730432,761438,726890,410529,285368,584051,627309,604770,593806,526007,244283,221176,517994,609730,603850,538898,503474,235588,215614,369324,534222,612963,597939,542456,240073,219226,503097,586593,593296,580294,535412,242772,242492,562140,653925,645401,635456,570333,248995,228055,585021,627919,615628,614707,550185,254793,247574,575757,628594,619286,623273,576477,303963,294053,483232,457656,609173,621315,592325,249145,249612,574794,629904,628703,645095,576271,319156,288387,605779,667006,671429,662403,576940,246378,232491,562585,612545,613347,607819,545497,252490,240438,555843,619998,603987,605608,551768,265252,250281,560644,633978,612886,606558,560971,266032,251248,559603,579049,628857,621627,546139,249704,247665,532902,608968,611177,612602,540474,255674,247929,557728,623924,622519,604267,544157,254417,241204,414889,595094,626304,611418,562256,253994,250427,582996,638260,612922,626714,574384,264725,251004,586840,647560,638735,631705,581843,264490,265111,600179,659192,662277,635542,568682,270798,255448,566816,643095,643025,637171,597876,277783,269823,577449,669089,668648,655562,616382,288185,278961,616999,658410,650109,685128,632025,301201,289449,643645,707162,709362,681692,631411,307667,289427,615184,659848,635376,672369,611992,276605,256798,618982,723165,717363,700787,631034,324798,299017,656099,717066,716739,678685,635052,296909,274364,625930,699061,651328,510240,466150,292621,316235,675073,702471,689708,686008,643249,321688,312130,648563,705992,689237,676499,618437,316061,300166,655852,726894,710188,673825,605892,305200,285354,623748,713782,771493,834003,672762,467356,562951,680519,618052,631988,656263,568358,411574,520605]},usa_avg:{label:"USA (7-day Average)",data:[259615,266045,284194,307061,329930,354547,363224,373261,405535,419572,426340,432091,434067,433567,431040,422152,421309,422400,421698,431671,435719,435844,448958,456716,463955,466523,462978,457901,457554,452108,447538,439090,437676,435610,436297,437619,438684,441051,442999,443040,443779,443104,440693,442089,443761,448099,454883,457052,458803,492527,483748,487069,490522,496255,502904,513989,492829,514431,502980,505114,500417,495981,488358,481548,411428,404784,397777,395030,394853,393405,390602,453628,472112,475266,474274,470647,469410,469741,470112,470544,471020,470486,470572,472084,472025,471816,471191,467847,468659,469960,466958,465653,464355,454655,477031,495952,516798,537866,557920,577512,605308,604133,601299,586279,581348,577148,562568,559704,558955,559401,571669,580432,593521,615976,627833,637679,644630,653078,651049,649790,633959,623625,613874,609956,602682,598553,589622,594929,597040,600536,608287,618274,622668,610716,601722,589431,571479,547531,518834,495084,485914,476477,473966,473835,465991,462772,461530,460735,439496,428710,430011,438446,444015,444655,445171,464282,471763,468954,466433,465427,465812,469136,477571,487190,494633,502514,507502,508391,506329,509598,505882,501629,498665,495787,496615,499403,498080,498176,498699,499923,503679,510703,517343,504125,479705,478261,477981,480245,472414,466065,479145,503752,506542,509939,507646,517647,523187,527613,532913,539017,541490,541585,531188,523203,517033,509253,500955,493157,488666,489539,490674,489711,490776,489438,489123,490018,491842,493248,493934,495931,497202,497338,498652,498764,498902,498753,490906,493188,495341,493222,490889,490377,486563,490837,488311,487022,486213,487066,487103,490650,492786,494407,493216,493742,493563,492602,472196,468078,468618,469640,472226,472165,473483,497498,503665,501753,503938,505671,507204,507286,507835,509164,512851,513564,514630,514596,516612,518517,520179,523542,524090,522210,523111,521731,516965,514665,511915,512147,516318,517316,519369,520888,524602,528262,530890,533533,535019,536325,541975,540449,537801,542024,544259,546119,547617,551423,558388,566853,566362,566274,567198,567195,563129,556370,545800,544468,541694,537257,532596,533138,542183,553896,557956,560676,567561,573592,578894,578023,577934,574776,575350,571366,567844,563535,560962,551618,527554,503426,502813,508795,515815,516302,521785,546895,572195,576347,575761,571973,572476,572409,571051,567506,566702,564993,566034,569020,572013,571631,569839,568288,566172,561585,559712,568470,591353,600906,624071,663727,671838,658162,638233,612841,597926,589957,583908]},europe:{label:"Europe",data:[33678,74795,89529,94021,84689,70838,49506,43784,89276,91732,91159,92242,83884,45301,43043,90334,93120,89924,87124,82543,43155,42986,90425,97462,92549,89008,81434,44312,49156,92258,93102,98696,98822,94676,48268,47831,96943,97112,96338,93603,89094,50556,46665,94367,98751,101787,113183,100125,52942,52654,110316,111957,102512,96752,87667,48779,45683,98481,106881,107043,102240,90090,50548,45877,9313,89310,94029,99770,97266,54053,52820,100455,98742,97733,97467,89980,47924,47375,95847,98139,104261,101587,91872,46907,46052,99974,99849,103138,107782,92870,48409,52179,105308,102080,102123,98150,90515,45403,44848,99534,101876,98438,91609,69787,48461,44907,58732,98437,100662,103202,95346,52306,51479,103926,111933,106007,101794,106234,62057,50927,54906,95809,102344,104914,97431,49431,49023,94561,103340,107422,118487,98696,50197,49144,108417,109641,105825,113845,108502,63686,60362,120920,124063,121990,98450,99841,62314,64072,120798,128095,133770,137030,115430,50499,50310,87095,118003,124088,130680,113686,54447,53693,120309,122201,124353,117054,115117,60451,61747,131556,139144,134624,138387,117298,64400,65770,127202,131073,129909,130829,123377,66504,67844,130989,135024,132532,132635,127237,88198,87112,143033,162804,150128,138019,137943,87465,89120,147322,131982,134316,144573,163088,230971,183763,196744,172009,175822,149229,136675,88306,74269,164004,145287,136318,139872,150763,102438,95058,150026,147296,132556,133554,133226,78492,78513,130879,121155,144525,141401,121644,65688,71468,139756,148628,133480,137109,124686,70185,72731,138167,147985,146949,141335,131013,76831,77062,138254,150591,159543,140373,121537,62361,103222,137733,135018,137591,147278,132214,72683,74684,146727,149292,143968,144314,134292,75468,74145,149914,153441,152978,154483,136790,65265,67531,139657,144426,163713,165417,164236,104049,125736,185825,184265,184933,184358,170939,85935,85285,160025,165911,161215,157344,143579,75429,79198,167279,173598,172446,180981,160636,80476,76227,170145,149979,148041,163088,147746,89348,78929,158293,170961,173383,174740,160164,82522,83884,178924,170107,171819,159997,147692,78569,82393,172230,178183,166197,163765,164686,76298,74042,164607,173690,171924,167507,156120,79099,79412,173562,162713,167316,167052,140740,70166,72507,170629,180478,168942,161369,145698,78783,80489,170403,165794,160245,157700,133994,67280,63441,80744,94289,114569,112990,102013,66085,60464]},europe_avg:{label:"Europe (7-day Average)",data:[48696,52805,57324,62120,65719,68438,70991,72430,74497,74812,74404,75484,77352,76749,76640,76788,76992,76812,76083,75890,75585,75575,75591,76214,76585,76856,76694,76862,77741,78002,77383,78257,79663,81554,82116,81926,82598,83170,82834,82093,81292,81620,81452,81081,81315,82096,84889,86472,86811,87665,89946,91831,91936,89586,87811,87214,86215,84528,83799,84447,85228,85577,85830,85856,73120,70612,68745,68399,69419,69924,70914,83939,85283,85812,85481,84441,83569,82788,82127,82044,82975,83567,83837,83693,83499,84091,84334,84173,85064,85203,85418,86293,87056,87373,87230,85853,85516,85089,84038,83216,83184,82657,81721,78763,79201,79210,73379,72890,73205,74863,78514,79065,80005,86458,88388,89149,88948,90501,91897,91825,84820,82514,81990,82431,81179,79375,79104,84763,85842,86568,88507,88686,88796,88815,90795,91693,91465,90803,92205,94128,95731,97520,99581,101888,99691,98449,98257,98785,98766,99343,101025,106537,108766,107079,105109,100298,98853,97472,96566,96318,96882,97365,102108,102709,102745,100799,101007,101862,103015,104617,107039,108503,111552,111862,112430,113003,112382,111229,110556,109478,110344,110642,110941,111484,112048,112422,112681,113233,116329,119083,120804,124770,127284,128054,129579,129477,129765,130376,125974,123715,124653,128245,148744,162267,169327,175043,180974,181637,177865,157489,141845,137164,133347,127710,126369,128383,130399,133372,131373,131661,131123,130222,127714,124293,121929,119195,115465,117168,118285,116639,114806,113801,115068,118991,117419,116808,117237,117880,118060,117834,117739,119670,120273,121173,122121,122743,122754,123125,124925,124787,123435,121367,125103,125032,122810,119670,120655,122181,123658,119575,120865,122903,123813,123392,123685,124085,124009,124465,125053,126342,127799,128152,126693,125750,124284,122995,124529,126096,130016,135551,143866,150463,156155,159189,161894,162852,160265,154483,150798,148178,144787,140926,137020,135517,134649,135683,136785,138386,141769,144202,144922,144500,144912,141538,138047,135493,133651,134920,135303,133614,136608,140228,141893,143667,142691,143397,146346,146226,146e3,143895,142115,141550,141338,140377,141538,140732,141267,143696,143369,142179,141091,140446,141265,141803,140577,140979,141742,143023,141452,140798,140733,138535,137256,136270,135855,138390,138621,137809,138519,139749,140892,140858,138762,137515,136996,135325,133680,131249,118436,108219,101696,95309,90738,90571,90145]},china:{label:"China",data:[22659,17030,40659,53454,64773,48455,36163,24952,39032,42373,40237,39897,28743,22447,19211,31689,30252,29782,26343,23578,19056,22825,23258,22911,13044,9103,4799,4830,5465,6323,5633,14093,16830,22202,31386,21805,41296,44482,45350,42633,37536,19144,47112,45650,35588,40910,36717,36368,25136,21071,42823,41951,60985,44466,37840,29141,23276,47244,47627,53227,64037,46754,36239,26264,14410,34931,46271,55471,38216,26827,23871,37840,42804,43862,38749,32143,27285,27777,41979,44913,58188,49950,35130,22358,19350,34717,31576,38316,36261,30582,26100,14544,14059,16951,38922,34576,30799,21994,21520,40862,34572,36626,33655,32322,22468,22205,38545,32985,30659,32584,55369,21293,16506,30643,60543,29079,26312,22540,15443,13451,14389,30652,51846,33792,36300,23584,24119,34939,37117,31559,32433,33415,22024,19682,33247,31293,30737,30548,27890,20120,19500,33493,31926,29749,26326,30074,30720,16819,17201,14486,49270,42251,33912,26901,19047,37273,40508,42452,41049,40498,27166,23190,39060,40583,44482,46623,38082,23545,21046,39777,39337,38623,35920,38146,23223,22714,37430,39811,41035,38051,39375,25688,22714,44536,43832,42234,40769,35674,25007,19920,40335,45261,49233,41033,35703,25035,25006,42171,42012,40442,41781,35877,23272,21348,41276,39521,33317,37131,28353,17545,16806,32882,37264,35580,33860,29489,20734,17802,34870,38321,36972,41608,35382,23641,21244,36583,38310,44234,35171,32462,21811,13640,35088,30770,30915,32748,27784,16626,22200,27494,32827,29713,31743,26697,16114,20673,36760,36731,41492,38287,35192,27369,24673,38801,42097,40686,41965,35224,25713,22864,40887,37486,37178,34300,35130,25393,23796,41231,37190,47759,31656,30290,27841,16891,14658,27391,13118,21193,16980,20867,19362,42072,38777,36858,48168,32437,27043,21163,36180,32372,36337,36120,33189,24136,22429,33614,31688,41492,42744,44422,24487,24791,39550,40789,66746,52936,41903,30480,24919,47062,54631,65396,57972,51114,28295,29890,48213,46879,53630,45549,45719,36485,28107,48149,41812,42519,38388,34780,26790,19578,39186,40418,41364,43734,34066,26283,18804,39468,39292,39191,48999,38830,30683,24245,38461,34480,43754,33577,26688,16216,15256,28144,29050,31524,44257,36703,21567,16374,30300,30989,30108,29893,26865,15454,25037]},china_avg:{label:"China (7-day Average)",
data:[31190,27983,28850,31088,35773,37941,40456,40783,43926,44171,42283,38729,35913,33954,33134,32085,30353,28860,26923,26186,25701,26217,25013,23964,21573,19110,16428,14395,11915,9496,7028,7178,8281,10768,14561,16896,21892,27442,31907,35593,37784,36035,39650,40272,39001,38367,37522,37355,38211,34491,34087,34996,37864,38971,39181,39753,40068,40700,41511,40403,43198,44472,45486,45913,41222,39408,38415,37191,35971,34627,34285,37632,38757,38413,36024,35156,35222,35780,36371,36672,38719,40319,40746,40042,38838,37800,35895,33056,31101,30451,30986,30299,27348,25259,25345,25104,25135,24549,25545,29374,31892,31564,31432,31650,31717,31815,31484,31258,30405,30252,33545,33377,32563,31434,35371,35145,34249,29559,28723,28287,25965,21695,24947,26016,27981,29144,30668,33604,34528,31630,31435,31023,30800,30167,29925,29093,28975,28706,27917,27645,27619,27654,27744,27603,27e3,27312,28826,28443,26116,23625,26413,28688,29237,28691,29009,31877,35594,34620,34448,35389,35427,36019,36274,36285,36575,37371,37026,36509,36203,36305,36127,35290,33761,33770,33724,33962,33627,33695,34039,34344,34519,34872,34872,35887,36461,36632,37021,36492,36395,35996,35395,35600,36599,36637,36641,36645,37372,37634,37170,35914,36021,36046,35794,35271,35144,34788,33770,33106,32031,31213,30564,29365,29042,29365,28898,29060,29516,29658,29942,30093,30292,31399,32241,32656,33148,33393,33391,34428,33509,33092,32830,31744,31530,30453,28551,28204,27536,26795,28018,26933,27227,27056,26912,26757,26684,26465,27789,28347,30030,30964,32178,33786,34357,34649,35415,35300,35826,35830,35594,35335,35633,34975,34473,33378,33365,33319,33452,33502,33459,34971,34593,33902,34251,33265,29469,28069,23120,21626,19724,18728,19081,22997,24624,28015,31869,34077,34959,35216,34375,33460,33385,31664,31772,31356,31537,31171,31073,31809,32756,34360,34410,34748,35596,36896,40504,41960,41600,42456,42474,43547,45525,45332,46051,47367,47055,47765,47930,46822,45141,43367,42596,43766,43511,43502,42778,41191,40168,38605,37220,36002,34721,34522,34357,35121,35019,34947,34836,34876,34715,34405,35157,35838,36466,37244,37100,36412,37064,34861,33126,31060,29776,28302,27526,25779,27305,28735,29500,29659,29967,30244,30042,27990,26585,25711,26949]},developing:{label:"Developing Economies",data:[48835,64699,97444,103316,112969,92117,71382,57127,90334,95293,92446,92409,77946,59323,50312,84545,83714,83120,76709,71918,55970,55905,79286,77672,65801,57961,51891,40854,36648,57444,60229,68368,72517,76686,70266,59795,96346,100588,98518,95622,95773,61330,82728,98825,87628,93789,91831,90298,65974,53548,97883,98418,121490,97051,89700,68498,58022,100542,102647,109626,121002,99025,76313,59480,24452,82661,96637,110081,90847,66557,57775,91751,101793,101178,98642,85674,67544,63533,97650,102465,114718,110048,89742,61095,55755,98456,88332,96397,93848,85628,64548,52065,77321,73173,97842,95562,83099,63665,59030,101763,96447,96273,89020,79986,63019,58707,89504,94644,87034,91199,106910,59232,58435,83666,116548,86003,79619,71413,51477,44231,51903,81856,106537,89652,85221,61943,55534,87796,95166,88945,94012,86515,61226,54536,93488,91551,90185,88641,82479,56345,53194,92918,91902,88567,83035,81916,66665,53407,75435,77517,118435,110054,96869,68111,54977,100999,108859,107937,107752,103722,69595,59709,103784,109260,111723,109373,99623,63235,57139,107658,107768,112550,103290,98206,63043,59100,95171,104743,105563,104796,99541,67414,59635,114736,114606,113806,109068,96164,69751,59169,107269,117646,124578,113339,98478,69718,63877,114346,115707,114393,121579,143761,228652,171240,173646,146991,145808,124096,105516,88326,64952,133415,126406,113940,112869,125142,102842,80546,127192,124055,110118,115048,113522,88582,80283,118733,109417,131057,117668,102089,71275,62760,115148,119546,103328,102302,89137,62430,68888,103229,108943,104147,102186,85014,60653,59858,104010,111169,121321,110558,99050,72894,104043,118012,115128,117349,120816,103894,75960,66220,115801,110223,108855,107969,101114,75927,64848,116476,115393,126680,105416,96381,74358,55880,87254,108765,100516,112691,115389,105734,115949,164148,155456,150981,161348,133135,86436,74858,120296,119761,114833,114180,105522,74347,64747,111577,112730,144366,132959,123416,78770,72534,123611,128840,161089,138352,123002,96204,77938,133638,149888,165340,156635,150671,86821,87446,147917,148689,156718,135696,131359,104452,83586,144761,145043,140860,137391,124802,80519,77333,127385,139683,138832,134860,139548,86436,72243,138009,131052,140608,142845,115154,82529,71344,130576,133074,142098,120906,108422,68321,62226,118414,118939,117591,129703,118679,68840,56640,87608,101959,106536,102565,90063,57471,62340]},developing_avg:{label:"Developing Economies (7-day Average)",data:[67626,65216,67941,71343,76992,80431,84337,85521,89179,88876,87321,84383,82362,80641,79667,78832,77180,75848,73612,72744,72267,73062,72321,71451,68974,66302,63440,61284,58531,55407,52925,53284,55370,58910,63109,66412,71973,77737,82046,85343,88075,86790,90070,90423,88574,87899,87352,86569,87237,83066,82930,84474,88434,89176,89100,89454,90091,90478,91081,89384,92797,94138,95250,95458,84589,81736,79882,78321,77149,75757,75513,85131,87861,88509,86877,86132,86281,87102,87943,88038,89971,91602,92188,91263,90157,90267,88246,85628,83317,82727,83225,82694,79678,77510,77719,77962,77599,77473,78470,81957,85280,85062,84127,83686,83590,83554,81790,81535,80216,80532,84371,83830,83789,82958,86085,85941,84286,79214,78110,76077,71540,66582,69514,70944,72928,74419,76032,81158,83063,80552,81172,81360,81253,81109,81924,81410,81583,80822,80247,79542,79350,79275,79326,79089,78287,78208,79683,79710,77213,75164,79428,83286,85429,85636,85858,89511,93983,92485,92162,93138,93347,94020,94419,94478,95018,95251,94668,93756,93386,93941,93733,93848,92974,92767,92750,93029,91247,90810,89813,90032,90219,90846,90924,93720,95126,96300,96918,96435,96767,96698,95629,96062,97602,98211,98541,98537,99212,100225,99943,98490,99667,106138,128838,144180,152656,157122,161606,161967,156511,136466,121275,115530,112582,108034,106427,109231,111304,113540,112646,112308,111765,112075,110411,108376,108342,107138,105049,108035,108403,106778,104304,101803,101286,102733,98778,96575,94728,93463,94332,92638,91121,91241,91228,90633,90379,89089,89199,89516,91970,93168,95164,96923,103234,105236,105801,105234,106696,107388,107833,102423,102111,101407,100189,98354,97964,97960,97758,97860,98593,101132,100779,100101,99876,98596,94419,93476,89736,90769,93492,97971,106551,117541,124216,131418,138367,140902,138152,132275,126015,120918,115750,109008,105071,103339,101892,100647,99648,103862,106547,109101,109737,110851,112566,114874,117253,118027,117967,120462,121234,122659,125669,126278,128896,132844,131505,132862,134903,134727,133494,130505,127745,130272,129714,129260,128747,126480,126723,125780,122367,121474,118989,118226,117933,117570,119683,120521,119795,121314,120077,120338,121472,117988,117427,117304,116246,116531,116744,113606,112645,110612,109317,107571,105557,102057,103318,104779,104857,104054,99653,97229,95648,91768,87686,86059,86879]}}},module.exports.commits={labels:["Feb 2009","Mar 2009","Apr 2009","May 2009","Jun 2009","Jul 2009","Aug 2009","Sep 2009","Oct 2009","Nov 2009","Dec 2009","Jan 2010","Feb 2010","Mar 2010","Apr 2010","May 2010","Jun 2010","Jul 2010","Aug 2010","Sep 2010","Oct 2010","Nov 2010","Dec 2010","Jan 2011","Feb 2011","Mar 2011","Apr 2011","May 2011","Jun 2011","Jul 2011","Aug 2011","Sep 2011","Oct 2011","Nov 2011","Dec 2011","Jan 2012","Feb 2012","Mar 2012","Apr 2012","May 2012","Jun 2012","Jul 2012","Aug 2012","Sep 2012","Oct 2012","Nov 2012","Dec 2012","Jan 2013","Feb 2013","Mar 2013","Apr 2013","May 2013","Jun 2013","Jul 2013","Aug 2013","Sep 2013","Oct 2013","Nov 2013","Dec 2013","Jan 2014","Feb 2014","Mar 2014","Apr 2014","May 2014","Jun 2014","Jul 2014","Aug 2014","Sep 2014","Oct 2014","Nov 2014","Dec 2014","Jan 2015","Feb 2015","Mar 2015","Apr 2015","May 2015","Jun 2015","Jul 2015","Aug 2015","Sep 2015","Oct 2015","Nov 2015","Dec 2015","Jan 2016","Feb 2016","Mar 2016","Apr 2016","May 2016","Jun 2016","Jul 2016","Aug 2016","Sep 2016","Oct 2016","Nov 2016","Dec 2016","Jan 2017","Feb 2017","Mar 2017","Apr 2017","May 2017","Jun 2017","Jul 2017","Aug 2017","Sep 2017","Oct 2017","Nov 2017","Dec 2017"],keys:["master","0.8","0.10","0.12","4.x","5.x","6.x","7.x","8.x","9.x"],data:{master:{label:"master",data:[15,34,64,114,137,52,85,133,109,76,96,107,143,216,183,145,129,130,130,138,179,266,188,234,162,120,75,82,99,249,310,270,244,240,261,207,311,254,195,187,286,182,197,143,171,67,168,209,219,289,173,162,112,173,218,84,111,104,106,147,114,77,53,86,57,74,81,79,101,83,123,321,217,210,158,178,154,115,188,182,196,203,189,262,270,215,260,317,218,182,232,268,249,224,458,329,358,291,413,330,367,323,322,291,633,456,null]},.8:{label:"0.8",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,184,269,127,122,67,64,15,28,38,41,19,9,1,12,1,null,null,8,1,1,2,null,1,1,5,6,5,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},"0.10":{label:"0.10",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,217,233,95,80,55,56,36,32,40,37,39,52,37,16,15,25,21,25,22,14,29,16,25,17,9,21,9,3,10,15,4,3,null,5,5,2,9,11,1,6,6,null,1,8,5,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},.12:{label:"0.12",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,62,48,54,15,31,33,37,9,10,2,10,8,2,10,13,2,6,11,null,1,7,6,1,4,null,null,null,null,null,null,null,null,null,null,null,null]},"4.x":{label:"4.x",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,178,168,159,164,161,201,186,135,128,165,124,100,91,80,85,100,192,87,58,12,6,16,4,6,5,2,7,4,null]},"5.x":{label:"5.x",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,177,185,187,177,220,225,168,103,7,5,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},"6.x":{label:"6.x",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,213,255,291,198,184,200,248,193,183,360,190,142,116,178,112,115,94,67,49,246,55,null]},"7.x":{label:"7.x",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,262,233,207,426,277,284,187,178,3,2,2,null,null,null,null,null]},"8.x":{label:"8.x",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,410,324,332,296,277,221,516,102,null]},"9.x":{label:"9.x",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,613,399,null]}}},module.exports.committers={labels:["Feb 2009","Mar 2009","Apr 2009","May 2009","Jun 2009","Jul 2009","Aug 2009","Sep 2009","Oct 2009","Nov 2009","Dec 2009","Jan 2010","Feb 2010","Mar 2010","Apr 2010","May 2010","Jun 2010","Jul 2010","Aug 2010","Sep 2010","Oct 2010","Nov 2010","Dec 2010","Jan 2011","Feb 2011","Mar 2011","Apr 2011","May 2011","Jun 2011","Jul 2011","Aug 2011","Sep 2011","Oct 2011","Nov 2011","Dec 2011","Jan 2012","Feb 2012","Mar 2012","Apr 2012","May 2012","Jun 2012","Jul 2012","Aug 2012","Sep 2012","Oct 2012","Nov 2012","Dec 2012","Jan 2013","Feb 2013","Mar 2013","Apr 2013","May 2013","Jun 2013","Jul 2013","Aug 2013","Sep 2013","Oct 2013","Nov 2013","Dec 2013","Jan 2014","Feb 2014","Mar 2014","Apr 2014","May 2014","Jun 2014","Jul 2014","Aug 2014","Sep 2014","Oct 2014","Nov 2014","Dec 2014","Jan 2015","Feb 2015","Mar 2015","Apr 2015","May 2015","Jun 2015","Jul 2015","Aug 2015","Sep 2015","Oct 2015","Nov 2015","Dec 2015","Jan 2016","Feb 2016","Mar 2016","Apr 2016","May 2016","Jun 2016","Jul 2016","Aug 2016","Sep 2016","Oct 2016","Nov 2016","Dec 2016","Jan 2017","Feb 2017","Mar 2017","Apr 2017","May 2017","Jun 2017","Jul 2017","Aug 2017","Sep 2017","Oct 2017","Nov 2017","Dec 2017"],data:{tot:{label:"Committers",data:[1,1,1,1,2,2,3,8,5,11,17,18,24,24,19,25,22,25,25,20,28,26,20,14,21,20,20,18,14,43,30,23,27,33,28,27,38,41,26,37,36,30,25,22,24,21,21,34,19,42,26,25,16,19,28,13,21,20,31,25,29,18,29,27,23,28,26,27,26,26,53,68,53,52,40,44,44,28,45,51,66,66,72,70,69,77,76,80,61,53,75,99,86,82,198,97,85,94,96,89,87,120,115,89,292,196,95]},avg:{label:"Average",data:[null,null,null,null,null,null,null,null,null,null,null,5,7,9,11,13,14,16,18,19,21,22,23,22,22,22,22,21,20,22,22,23,23,23,24,25,26,28,29,30,32,31,30,30,30,29,29,29,28,28,28,27,25,24,24,24,23,23,24,23,24,22,22,23,23,24,24,25,25,26,28,31,33,36,37,38,40,40,42,44,47,50,52,52,53,56,59,62,63,65,68,72,73,75,85,87,89,90,92,92,95,100,104,103,120,129,121]}}},module.exports.releases={labels:["May 2009","Jun 2009","Jul 2009","Aug 2009","Sep 2009","Oct 2009","Nov 2009","Dec 2009","Jan 2010","Feb 2010","Mar 2010","Apr 2010","May 2010","Jun 2010","Jul 2010","Aug 2010","Sep 2010","Oct 2010","Nov 2010","Dec 2010","Jan 2011","Feb 2011","Mar 2011","Apr 2011","May 2011","Jun 2011","Jul 2011","Aug 2011","Sep 2011","Oct 2011","Nov 2011","Dec 2011","Jan 2012","Feb 2012","Mar 2012","Apr 2012","May 2012","Jun 2012","Jul 2012","Aug 2012","Sep 2012","Oct 2012","Nov 2012","Dec 2012","Jan 2013","Feb 2013","Mar 2013","Apr 2013","May 2013","Jun 2013","Jul 2013","Aug 2013","Sep 2013","Oct 2013","Nov 2013","Dec 2013","Jan 2014","Feb 2014","Mar 2014","Apr 2014","May 2014","Jun 2014","Jul 2014","Aug 2014","Sep 2014","Oct 2014","Nov 2014","Dec 2014","Jan 2015","Feb 2015","Mar 2015","Apr 2015","May 2015","Jun 2015","Jul 2015","Aug 2015","Sep 2015","Oct 2015","Nov 2015","Dec 2015","Jan 2016","Feb 2016","Mar 2016","Apr 2016","May 2016","Jun 2016","Jul 2016","Aug 2016","Sep 2016","Oct 2016","Nov 2016","Dec 2016","Jan 2017","Feb 2017","Mar 2017","Apr 2017","May 2017","Jun 2017","Jul 2017","Aug 2017","Sep 2017","Oct 2017","Nov 2017","Dec 2017"],data:{tot:{label:"Releases",data:[2,5,1,6,6,2,5,4,2,4,3,4,4,2,3,3,2,3,2,2,5,3,3,3,1,1,4,3,4,2,4,3,5,6,5,3,3,6,5,6,4,5,null,3,5,5,7,5,5,6,4,4,4,3,2,3,2,1,1,null,3,2,2,1,2,1,null,2,5,6,11,5,7,5,10,3,7,4,2,6,5,10,10,3,7,7,3,2,5,9,4,5,8,2,10,3,2,4,7,3,4,8,5,5]}}},module.exports.contributors={labels:["2009","2010","2011","2012","2013","2014","2015","2016","2017"],data:{tot:{label:"Contributors",data:[35,113,119,130,121,137,219,454,741]}}}},{}],6:[function(require,module,exports){module.exports.stats={year:2018,total:368985988,totalTb:2646.00864,days:365,dayAverage:1010921,highest:1574123,highestDay:"2018-10-30",average:{Tuesday:1243744,Friday:1124155,Sunday:531011,Thursday:1235302,Saturday:564416,Monday:1135513,Wednesday:1239903},osPercent:{linux:.778759,macos:.048143,windows:.173098,linuxDelta:"+1.6%",macosDelta:"+0.1%",windowsDelta:"-1.7%"},topDevelopingCountries:[{name:"China",downloads:15885213,downloadsDelta:"+32%"},{name:"Russia",downloads:6042352,downloadsDelta:"+35%"},{name:"India",downloads:5175382,downloadsDelta:"+35%"},{name:"Brazil",downloads:2216578,downloadsDelta:"+39%"},{name:"Indonesia",downloads:1570921,downloadsDelta:"+38%"}],newContributors:578,releasesMonthAverage:5.25,totalDelta:"+40%",tbDelta:"+46%",newContributorsDelta:"-22%",releasesMonthAverageDelta:"0%",topReleaseMonths:[{count:12,months:["March"]},{count:8,months:["December"]},{count:7,months:["June","November"]}]},module.exports.totals={labels:["Jan-1","Jan-2","Jan-3","Jan-4","Jan-5","Jan-6","Jan-7","Jan-8","Jan-9","Jan-10","Jan-11","Jan-12","Jan-13","Jan-14","Jan-15","Jan-16","Jan-17","Jan-18","Jan-19","Jan-20","Jan-21","Jan-22","Jan-23","Jan-24","Jan-25","Jan-26","Jan-27","Jan-28","Jan-29","Jan-30","Jan-31","Feb-1","Feb-2","Feb-3","Feb-4","Feb-5","Feb-6","Feb-7","Feb-8","Feb-9","Feb-10","Feb-11","Feb-12","Feb-13","Feb-14","Feb-15","Feb-16","Feb-17","Feb-18","Feb-19","Feb-20","Feb-21","Feb-22","Feb-23","Feb-24","Feb-25","Feb-26","Feb-27","Feb-28","Mar-1","Mar-2","Mar-3","Mar-4","Mar-5","Mar-6","Mar-7","Mar-8","Mar-9","Mar-10","Mar-11","Mar-12","Mar-13","Mar-14","Mar-15","Mar-16","Mar-17","Mar-18","Mar-19","Mar-20","Mar-21","Mar-22","Mar-23","Mar-24","Mar-25","Mar-26","Mar-27","Mar-28","Mar-29","Mar-30","Mar-31","Apr-1","Apr-2","Apr-3","Apr-4","Apr-5","Apr-6","Apr-7","Apr-8","Apr-9","Apr-10","Apr-11","Apr-12","Apr-13","Apr-14","Apr-15","Apr-16","Apr-17","Apr-18","Apr-19","Apr-20","Apr-21","Apr-22","Apr-23","Apr-24","Apr-25","Apr-26","Apr-27","Apr-28","Apr-29","Apr-30","May-1","May-2","May-3","May-4","May-5","May-6","May-7","May-8","May-9","May-10","May-11","May-12","May-13","May-14","May-15","May-16","May-17","May-18","May-19","May-20","May-21","May-22","May-23","May-24","May-25","May-26","May-27","May-28","May-29","May-30","May-31","Jun-1","Jun-2","Jun-3","Jun-4","Jun-5","Jun-6","Jun-7","Jun-8","Jun-9","Jun-10","Jun-11","Jun-12","Jun-13","Jun-14","Jun-15","Jun-16","Jun-17","Jun-18","Jun-19","Jun-20","Jun-21","Jun-22","Jun-23","Jun-24","Jun-25","Jun-26","Jun-27","Jun-28","Jun-29","Jun-30","Jul-1","Jul-2","Jul-3","Jul-4","Jul-5","Jul-6","Jul-7","Jul-8","Jul-9","Jul-10","Jul-11","Jul-12","Jul-13","Jul-14","Jul-15","Jul-16","Jul-17","Jul-18","Jul-19","Jul-20","Jul-21","Jul-22","Jul-23","Jul-24","Jul-25","Jul-26","Jul-27","Jul-28","Jul-29","Jul-30","Jul-31","Aug-1","Aug-2","Aug-3","Aug-4","Aug-5","Aug-6","Aug-7","Aug-8","Aug-9","Aug-10","Aug-11","Aug-12","Aug-13","Aug-14","Aug-15","Aug-16","Aug-17","Aug-18","Aug-19","Aug-20","Aug-21","Aug-22","Aug-23","Aug-24","Aug-25","Aug-26","Aug-27","Aug-28","Aug-29","Aug-30","Aug-31","Sep-1","Sep-2","Sep-3","Sep-4","Sep-5","Sep-6","Sep-7","Sep-8","Sep-9","Sep-10","Sep-11","Sep-12","Sep-13","Sep-14","Sep-15","Sep-16","Sep-17","Sep-18","Sep-19","Sep-20","Sep-21","Sep-22","Sep-23","Sep-24","Sep-25","Sep-26","Sep-27","Sep-28","Sep-29","Sep-30","Oct-1","Oct-2","Oct-3","Oct-4","Oct-5","Oct-6","Oct-7","Oct-8","Oct-9","Oct-10","Oct-11","Oct-12","Oct-13","Oct-14","Oct-15","Oct-16","Oct-17","Oct-18","Oct-19","Oct-20","Oct-21","Oct-22","Oct-23","Oct-24","Oct-25","Oct-26","Oct-27","Oct-28","Oct-29","Oct-30","Oct-31","Nov-1","Nov-2","Nov-3","Nov-4","Nov-5","Nov-6","Nov-7","Nov-8","Nov-9","Nov-10","Nov-11","Nov-12","Nov-13","Nov-14","Nov-15","Nov-16","Nov-17","Nov-18","Nov-19","Nov-20","Nov-21","Nov-22","Nov-23","Nov-24","Nov-25","Nov-26","Nov-27","Nov-28","Nov-29","Nov-30","Dec-1","Dec-2","Dec-3","Dec-4","Dec-5","Dec-6","Dec-7","Dec-8","Dec-9","Dec-10","Dec-11","Dec-12","Dec-13","Dec-14","Dec-15","Dec-16","Dec-17","Dec-18","Dec-19","Dec-20","Dec-21","Dec-22","Dec-23","Dec-24","Dec-25","Dec-26","Dec-27","Dec-28","Dec-29","Dec-30","Dec-31"],data:[{tot:{label:"2015",data:[92424,120192,101056,108490,168980,179636,174979,180462,172450,113410,112090,177606,190363,197193,193907,180219,117040,106964,169275,200787,210771,206343,202689,129219,118730,200184,231376,220083,234408,220494,135461,124171,220429,224897,236447,232886,207278,143086,132864,243890,359437,223927,247769,205644,127090,119714,186400,199991,202373,207451,202303,127120,123142,205513,222980,219069,225407,212218,148092,125364,17934,197193,225474,225536,227086,144380,135779,219038,235651,243520,263775,230459,143285,136022,244599,250953,253945,251477,245311,143516,137093,249129,280860,274193,295603,259407,162945,138082,252951,278114,270749,261795,212238,140080,137152,199717,254910,244996,244766,235848,127147,117948,229596,245880,245691,243735,226096,126344,136043,248609,252853,280185,315946,277625,220040,174455,333752,301413,307930,301171,244157,175912,163518,272441,293251,322770,333866,310257,212529,26980,312636,373542,342275,321343,296144,228615,249545,363625,332565,319723,328135,304081,209147,189610,262343,320643,328462,319907,340233,240045,275954,240569,332587,404256,440453,393511,281869,273935,374462,376120,379091,356759,333551,195871,195059,327500,330806,331169,336994,302780,201681,191050,304668,346918,353801,309703,257828,148511,209356,31524,247696,283723,259574,211225,158696,166488,282177,294210,295436,286185,289549,171610,148080,286503,297435,297790,303944,266196,141490,137854,163161,313438,313762,294750,270955,161433,150641,287002,313333,315958,323756,279090,163419,151115,286230,314249,300033,513474,268983,144077,135277,290880,302999,293743,300923,281184,148635,142615,289802,319480,317376,313793,293430,162605,170347,314098,329700,319161,320571,294644,151258,159994,294144,33301,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,284407,379901,374408,363805,334885,176106,174296,346513,369744,371322,355936,327162,165022,163639,364143,375118,380505,400825,343780,174977,173843,344195,173302,361539,397274,372997,188865,188872,380290,394756,391571,390877,343802,205525,193052,408144,403468,409251,413403,383537,193458,220059,427098,410959,412064,417195,360260,195948,204879,406290,399431,392254,396226,361864,188118,207938,399946,421781,418086,428726,377253,203062,209366,411152,470850,408779,333528,308043,200294,216800,434759,453101,427776,436390,444273,219471,236638,449750,461311,487658,479844,419188,218359,235530,485652,483571,475990,459877,405401,203308,222019,435326,418891,373204,252394,191022,171570,184423,314616,342797,329220,239134]},avg:{label:"2015 (7-day Average)",data:[118446,117767,117087,117743,120997,126859,135108,147685,155150,156915,157429,158661,160194,163367,165288,166398,166916,166184,164994,166483,168423,170199,173409,175149,176830,181246,185616,186946,190955,193499,194390,195168,198060,197134,199472,199255,197367,198456,199698,203049,222269,220481,222607,222373,220088,218210,209997,187219,184140,178380,177903,177907,178397,181127,184411,186796,189362,190778,193774,194091,167294,163611,164526,164544,166668,166138,167626,196355,201849,204427,209889,210371,210215,210250,213901,216087,217576,215820,217941,217974,218127,218774,223047,225939,232243,234257,237032,237174,237720,237327,236835,232006,225267,222001,221868,214263,210948,207269,204837,208209,206362,203618,207887,206597,206696,206549,205156,205041,207626,210342,211338,216266,226582,233943,247328,252816,264979,271916,275880,273769,268988,262684,261121,252363,251197,253317,257987,267430,272661,253156,258898,270368,273155,271366,269349,271647,303442,310727,304873,301651,302621,303755,300974,292412,277943,276240,277488,276313,281477,285891,298226,295116,296822,307650,324871,332482,338457,338168,357296,363515,359920,347963,339398,327112,315844,309135,302662,295816,292992,288597,289427,288854,285592,287894,291127,287228,280807,273211,275826,236805,222631,212620,205458,198801,200256,194132,229939,236584,238258,242059,253248,255093,252463,253081,253542,253878,256415,253079,248776,247316,229695,231981,234263,232950,233630,236479,238305,255997,255982,256296,260439,261601,261885,261953,261843,261973,259698,286801,285357,282594,280331,280996,279389,278490,248126,249869,250520,251568,251414,253768,257145,258983,260733,262728,266690,270161,271621,271876,272844,273018,271397,269918,267067,224724,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,219759,228235,239630,269994,294978,278116,298258,307130,305679,305238,304114,303011,301427,299905,302424,303191,304503,310916,313290,314712,316170,313320,284489,281780,281272,285446,287430,289577,294734,326370,330660,329746,325576,327956,328553,332532,333777,336302,339520,345197,343473,347331,350039,351109,351511,352052,348727,349083,346914,343942,342295,339465,336469,336698,335580,336017,335111,338303,341994,346637,348835,350970,351174,352775,359785,358455,344855,334968,334573,335635,339007,336472,339185,353880,373341,376081,378915,381057,382229,390784,396992,393408,393249,393091,398220,401400,399733,396881,394911,392761,390831,383641,374401,359718,330077,299452,294918,289547,272302,261432,255148,253254]}},{tot:{label:"2016",data:[171890,178659,200421,445077,460734,466369,476689,406257,237887,245531,431511,443190,438874,412776,367827,214503,215058,375127,427068,431546,457788,403021,211667,238789,432153,443846,440777,440992,382815,226608,226382,432821,442385,445060,427130,382246,201528,208073,396889,472874,530050,527100,464495,257312,276496,476635,536865,555868,545878,464217,255433,275407,483005,502732,512326,519864,474888,254128,261281,478674,497794,510401,513479,518984,279921,289547,564183,564309,575935,574001,492551,263628,264844,516818,524934,526266,527497,485966,272815,267298,499323,525482,520641,486033,388043,245179,242495,433048,504827,502444,498208,498998,249959,243730,482784,514837,522399,619373,595470,386871,408805,640774,653359,651448,620650,595537,253874,389989,637081,674174,681030,677351,605793,388816,390273,647518,624257,588057,554346,481359,266339,264127,505420,539818,556298,505412,521697,273476,253577,524697,549724,544091,531938,472439,244494,246567,489420,548713,554301,550500,490428,252122,267940,552511,570891,552206,526869,456895,243744,258370,398749,524307,538378,544965,481812,250021,253368,538871,596994,588888,567982,516672,302202,291843,551039,588226,571865,556965,501501,272645,280739,576660,585001,581325,585425,561405,302845,331392,591791,600828,602404,594177,524855,289974,310775,447905,606132,576701,599773,523903,287404,298313,573453,602282,588320,561571,515823,262949,289059,572610,585804,596728,611679,564076,282112,288042,562701,697526,656417,571670,518756,268675,274629,574575,576413,563932,571468,508786,267819,279142,576686,578093,585790,559484,510081,239534,249598,499344,583439,590774,571914,566657,290622,327625,603185,600207,607452,611399,529443,261366,287185,567075,603925,598370,585953,499670,233123,245837,414770,572255,586015,587198,519621,280943,279247,552812,591519,563649,552826,513513,275253,290549,584180,618191,593590,585598,545802,284202,301440,616351,647533,747619,717829,630553,326814,315469,637724,663453,686437,685644,604656,319642,349102,662950,646149,170002,662129,662635,379906,335008,701198,735976,762898,757927,622954,339410,317154,712055,718151,704046,677068,630855,337370,337332,639707,670816,693865,761389,642718,318182,308081,652382,695455,687697,708580,630384,332461,328696,673771,737736,733203,721176,674418,366301,334696,673024,738666,722227,602010,559651,339155,327330,670714,724380,704949,681554,654751,349722,333245,661893,727571,747555,711482,754252,334942,323485,661189,706556,711465,671830,608539,315040,301267,613930,668023,658085,600699,458551,271151,254276,349614,430152,466871,475783,416058,274207]},avg:{label:"2016 (7-day Average)",data:[250521,251534,253819,272456,289305,308897,342834,376315,384776,391220,389282,386776,382848,373718,368228,364887,360534,352479,350176,349129,355559,360587,360182,363572,371718,374115,375434,373035,370148,372282,370510,370605,370397,371009,369028,368947,365364,362749,357615,361971,374112,388394,400144,408113,417888,429280,438421,442110,444792,444753,444484,444329,445239,440362,434142,430426,431950,431764,429746,429127,428422,428147,427235,433534,437219,441257,453472,462974,472336,480982,477206,474879,471350,464583,458958,451863,445219,444279,445591,445942,443442,443521,442717,436794,422805,418857,415313,405845,402895,400295,402034,417885,418568,418744,425850,427280,430130,447440,461221,480780,504362,526932,546721,565157,565339,565349,546349,543661,543134,546107,550333,558433,559898,579176,579216,580707,573576,560295,542722,524946,507449,489429,469129,457066,452529,445539,451301,452321,450814,453567,454983,453239,457028,449991,445851,444850,439810,439666,441124,443776,446346,447435,450489,459502,462670,462371,458995,454204,453008,451640,429674,423020,421044,423629,427189,428086,427371,447388,457772,464988,468276,473256,480711,486207,487945,486693,484261,482687,480520,476297,474711,478371,477910,479262,483328,491885,496200,503436,505597,507858,510870,512120,506898,505060,502114,481559,482317,478645,479445,479309,478941,477161,495097,494547,496206,490749,489595,486101,484779,484659,482305,483506,490664,497557,500295,500150,498734,514694,523221,517506,511032,509112,507196,508892,491590,478378,478349,476925,476803,477447,477749,477989,481112,479400,479585,475544,471323,460274,461038,461750,463526,471608,478906,490053,504888,507283,509666,515306,509990,505811,500033,494875,495406,494109,490473,486220,482185,476279,454521,449996,448231,448409,451259,458091,462864,482584,485336,482141,477231,476358,475545,477160,481641,485451,489728,494410,499023,500301,501857,506453,510645,532649,551539,563646,569734,571738,574791,577065,568325,563727,560028,559003,563808,567412,564940,491163,487804,496087,504696,502682,508146,520979,605678,619364,613695,607910,605359,606910,604364,595956,584405,585534,585242,588125,577789,571027,569573,581619,583313,580572,576394,578204,581724,580843,573299,571537,573577,576522,579577,585617,592118,593918,600208,605043,605900,605793,605926,604358,587334,570939,567061,566009,565679,563638,561169,572533,586119,587628,588473,587213,587669,593755,598031,612245,610134,608740,608639,605637,600481,594817,574e3,571157,567983,561232,555727,548102,537940,516513,510243,503530,465771,431789,404473,386628,380557,380994]}},{tot:{label:"2017",
data:[269752,403885,609139,688339,710566,634268,378505,359765,677199,711729,721705,733373,643562,357219,332890,613319,697581,721452,708708,707626,381822,341007,699128,746258,752831,279791,643909,330104,322014,633422,689964,701913,722127,679212,367919,352960,690183,753182,746546,739576,700729,355458,358841,699949,755660,778644,804113,722614,377140,572366,653571,803476,831189,835698,758235,451895,421150,795855,720505,838114,830958,739961,409600,379241,764111,798748,767779,798035,735545,391181,359702,739370,795265,794092,777465,699874,379342,364243,741760,798426,819556,787492,703916,383583,354874,759918,782717,773469,782743,709855,366861,347437,720047,699472,929330,908215,857758,510717,488983,876811,916968,917636,874729,716494,477394,456553,723315,892498,905017,894102,863792,538241,556159,923040,1009710,977904,927419,892299,525236,531126,728402,887191,924333,909869,845015,494353,478265,839940,924859,935898,983932,793585,526439,395470,795201,836829,809763,807461,725341,368758,342324,741045,838582,828105,730827,695358,368715,335404,580654,747278,881750,863781,773162,372300,339188,712819,831982,845964,830035,765214,381761,372858,798821,894069,888590,872978,790871,375978,349377,831608,885125,869657,862765,771207,385525,376688,802746,875506,860963,864297,803176,439254,424866,741793,726996,875537,881273,832807,420979,410940,843870,930085,923232,920501,830442,491931,457254,881055,933840,939504,940398,860602,563099,493596,889218,914955,910405,884335,789744,418331,387889,839119,892205,868760,865712,812272,445782,417124,828762,906959,870422,870136,807394,431189,410029,814059,817713,906037,885566,782071,396845,392514,795712,881909,864250,196972,627564,399492,401551,811451,894325,889401,865323,776609,406023,393793,675065,873790,928037,881281,801159,403659,434457,853161,908189,887546,911267,826584,426454,405222,860634,926835,910708,900986,833800,424385,412912,874299,938953,946302,898944,802528,410539,380887,790256,892501,899151,904428,851832,456258,464008,882172,978258,975847,975247,895162,450639,431813,891867,937378,921799,952756,879092,451660,433533,923563,995730,1026189,996976,913386,461042,435775,905262,935838,942481,976290,886627,463235,422571,922947,1046624,1062347,1035018,941514,499569,477190,982960,1037370,1042946,981533,920514,486210,443844,944447,1017173,958206,811125,744660,447072,470526,964813,1015871,994059,982755,926809,483277,461336,951484,998027,991228,984593,874802,473867,450314,954861,1033408,1015166,955717,858177,454575,431897,910166,997975,1048517,1121568,789618,606454,685416,842473,812234,851883,866918,753719,534657,646986]},avg:{label:"2017 (7-day Average)",data:[383205,390958,416527,448166,481706,512879,527779,540638,579683,594338,599105,602363,603691,600650,596811,587685,585664,585628,582104,591256,594771,595930,608189,615143,619625,558351,549249,541861,539147,529761,521719,514445,577636,582679,588081,592502,600611,609642,616018,618511,621585,619804,620645,622040,622394,626979,636199,639325,642423,672926,666301,673132,680638,685150,690239,700918,679316,699642,687789,688778,688101,685491,679449,673462,668927,680104,670056,665353,664722,662091,659300,655765,655268,659027,656088,650992,649301,649950,650291,650743,654380,655813,656390,656996,655658,658252,656008,649424,648745,649594,647205,646142,640447,628554,650820,668745,689874,710425,730646,753040,784111,782441,777657,757476,752716,748083,726155,722659,720857,723624,744667,753359,767589,796121,812865,823278,828037,832110,830252,826676,798870,781368,773715,771208,764453,760041,752489,768423,773804,775457,786037,778690,783274,771446,765054,752479,734459,709249,699500,676974,669382,661645,661896,664516,653568,649285,649279,648290,625377,612334,619998,638991,650106,650618,651159,670039,682140,677028,672207,671071,672423,677233,689519,698388,704478,710613,714278,713452,710097,714781,713503,710799,709340,706531,707894,711796,707673,706299,705057,705276,709843,717518,724401,715693,694477,696559,698985,703218,700607,698617,713200,742213,749026,754630,754292,764428,771045,776357,776893,779218,782060,786369,796536,801727,802893,800196,796039,788030,777907,757226,742125,734968,731718,725769,723108,726326,730248,734424,732945,735053,735290,735922,735225,733140,732127,730026,717277,722365,724569,720952,716045,713543,710922,720093,714123,615753,593680,594059,595350,597598,599372,602965,698443,719736,720669,719560,700077,697143,702662,704942,708449,708112,713921,739363,744277,738493,742776,746409,749665,745489,746556,749220,752529,751060,752091,751795,752894,754846,756577,761662,761370,756903,754925,750350,738344,731708,724972,725755,732799,739330,751204,764335,776586,787543,797660,803850,803047,798448,799833,793993,786272,783059,780763,780909,781155,785683,794019,808931,815249,820148,821488,821808,819194,810638,798680,795724,791902,792215,790329,792855,808682,825805,834195,842036,847227,855029,863603,862281,859509,851868,848868,846960,842196,836694,833809,821703,797359,772237,766646,770458,773367,773181,778303,802822,828843,834015,832702,830798,828249,827845,828107,820678,819333,817759,818241,823296,826715,822590,820215,817459,814828,808443,803381,808146,831839,822045,843742,879959,870288,843754,815663,779285,774156,763900,758410]}},{tot:{label:"2018",data:[609560,877842,1030308,1029301,927165,467881,438523,905297,990789,998779,1011164,936687,479437,446823,719032,970697,1032868,1048657,940939,477697,448977,977868,1029429,1015243,1020743,920822,475958,457417,997978,1062098,1037589,1058163,948464,488387,450478,974675,1046325,1061558,1060157,980394,505501,487287,989673,1084269,1061040,1047327,989766,507069,485541,912305,1044727,1088752,1094906,1016975,532183,499834,1087072,1164638,1133112,1126040,1048962,543055,495923,1112305,1166574,1201490,1149257,1041332,499861,468647,1136464,1165035,1153288,1159532,1057201,521116,484896,1127124,1211411,1220956,1253206,1110178,528154,516196,1128234,1169244,1155604,1125199,862099,463976,445765,886427,1163253,1161680,1120730,1032721,511552,518083,1102361,1154030,1165437,1149277,1071983,504709,498406,1125729,1148994,1148118,1143962,1026004,485844,460426,1096101,1137248,1149278,1149647,1057842,521682,466330,1005083,918783,1146554,1140151,1065845,517374,464331,1069730,1136074,1149213,1079675,1039509,514508,486727,1175065,1266332,1249014,1270972,1114552,518903,508663,1119779,1250261,1253907,1269384,1074078,491306,472852,889521,1159710,1228338,1165807,1107755,546936,501284,1174365,1245184,1248832,1214204,1122829,537233,521753,1206421,1234965,1289190,1232757,1157411,573802,531760,1168056,1321856,1287128,1327386,1220811,611135,542410,1207938,1309980,1264655,1226416,1115462,518720,500146,1194180,1232791,970496,1123479,1062524,475937,469770,1154664,1190173,1182068,1181508,1075042,505758,486542,1175557,1266970,1231094,1188229,1051196,487036,468726,1156671,1215440,1185273,1159251,1059435,484601,466096,1143584,1201299,1192760,1164075,1055708,488137,462840,1116089,1188418,1186372,1167231,1069994,496397,477298,1135612,1189830,1098874,1243419,1180469,558524,568396,1251429,1351434,1321867,1391570,1207916,596177,604887,1268435,1311852,1310110,1289527,1121086,628357,623038,997606,1231419,1292102,1277536,1198099,634781,560637,1253742,1370445,1374378,1310015,1192342,636108,620027,1321753,1403647,1379856,1413865,1346799,683430,583496,1277746,1436045,1458326,1482627,1345656,682904,655995,1365995,1477968,1364349,1373913,1250753,640226,674065,1351885,1467975,1436791,1435464,1323437,631960,650960,1384940,1408820,1407137,1400854,1250204,640417,697012,1279560,1555669,1477687,1398260,1263558,619918,605487,1439148,1574123,1485312,1467958,1394867,755555,736817,1416193,1498747,1446264,1451944,1391828,681128,663734,1344956,1493650,1465268,1498441,1391191,735410,649289,1363279,1467468,1465141,1244887,1099869,701591,723740,1455006,1571261,1564809,1530869,1389832,704235,156093,1245426,1571241,1511399,1497118,1326395,650140,623637,1394732,1494768,1487348,1430016,1293679,645981,618134,1357097,1439844,1429146,1452875,1217286,616123,584075,744031,633668,818848,986770,909125,624831,582348,688735]},avg:{label:"2018 (7-day Average)",data:[725136,734509,759998,783196,807974,798434,768654,810902,827037,822533,819942,821302,822953,824139,797530,794659,799529,804885,805493,805244,805552,842529,850919,848401,844413,841539,841291,842497,845370,850037,853229,858575,862523,864299,863308,859979,857725,861150,861434,865996,868441,873699,875842,881262,881188,879355,880694,880918,880669,869616,863967,867926,874723,878610,882198,884240,909207,926337,932674,937122,941691,943244,942686,946290,946567,956335,959652,958562,952391,948495,951946,951726,944840,946308,948575,951611,953933,952598,959224,968890,982272,989841,990846,995317,995476,989452,980116,961829,926390,917221,907160,872616,871760,872628,871990,896364,903161,913492,944340,943022,943559,947637,953246,952268,949457,952795,952076,949602,948843,942274,939579,934153,929921,928243,928409,929221,933769,938889,939732,926730,895520,895131,893775,894918,894302,894017,903252,934294,934674,926034,922272,921862,925062,940110,958718,972975,1000303,1011024,1011652,1014785,1006887,1004592,1005291,1005064,999282,995339,990223,957329,944394,940741,925944,930755,938702,942764,983456,995667,998594,1005508,1007662,1006275,1009200,1013779,1012319,1018085,1020735,1025675,1030899,1032329,1026848,1039261,1038967,1052485,1061542,1066876,1068397,1074094,1072398,1069187,1054763,1039713,1026511,1020473,1018508,1007481,965458,950753,943190,937079,932739,927094,921006,951230,959520,961308,965569,967965,970949,981920,988924,989884,986478,983803,981258,978560,971198,964653,960513,961690,961342,960966,959097,957077,958146,958835,958303,958808,958343,954415,952575,951662,952113,954154,955334,957399,960188,960390,947890,958774,974557,983432,996446,1012991,1036077,1067934,1089098,1093019,1098398,1103611,1106040,1100386,1098706,1084129,1071724,1076322,1078915,1040225,1028734,1026162,1024449,1035451,1036368,1027454,1064045,1083906,1095659,1100299,1099477,1099666,1108151,1117866,1122610,1123392,1138228,1160293,1167053,1161835,1155548,1160176,1171386,1181209,1181046,1180971,1191328,1203935,1209924,1196499,1180968,1167411,1161314,1163895,1161879,1160452,1170801,1179594,1189977,1188796,1185496,1190218,1181767,1177531,1172586,1162125,1163333,1169912,1154857,1175836,1185914,1185544,1187451,1184523,1171448,1194246,1196883,1197972,1207929,1226687,1246064,1264825,1261546,1250778,1245200,1242912,1242478,1231845,1221405,1211228,1210500,1213215,1219857,1219766,1227521,1225457,1228075,1224335,1224317,1188095,1146477,1141646,1152282,1165386,1180213,1194451,1235306,1276729,1277107,1196015,1166075,1166072,1158442,1153620,1144558,1136830,1203622,1224951,1214027,1210591,1201005,1196331,1195737,1194951,1189574,1181728,1173413,1176679,1165766,1161500,1156635,1069054,953886,866700,800114,756091,757335,757088,749189]}}]},module.exports.totalsMonthly={labels:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],data:[{tot:{label:"2015",data:[5167281,5531588,6488674,6914710,8614254,8810078,7765444,8088239,8515752,9763128,10243008,10957704]}},{tot:{label:"2016",data:[10951832,12061660,13876894,15545251,13771741,14708229,14910617,15341383,15017641,17101821,17734113,16193738]}},{tot:{label:"2017",data:[17500832,18150706,20760935,22225263,22100946,21249011,22797850,22049501,21934121,24290305,24922497,24768122]}},{tot:{label:"2018",data:[25783568,24800578,29402559,27608702,30206918,30568634,29745536,32066733,32672777,37333847,37060992,31735144]}}]},module.exports.versions={labels:["Jan-1","Jan-2","Jan-3","Jan-4","Jan-5","Jan-6","Jan-7","Jan-8","Jan-9","Jan-10","Jan-11","Jan-12","Jan-13","Jan-14","Jan-15","Jan-16","Jan-17","Jan-18","Jan-19","Jan-20","Jan-21","Jan-22","Jan-23","Jan-24","Jan-25","Jan-26","Jan-27","Jan-28","Jan-29","Jan-30","Jan-31","Feb-1","Feb-2","Feb-3","Feb-4","Feb-5","Feb-6","Feb-7","Feb-8","Feb-9","Feb-10","Feb-11","Feb-12","Feb-13","Feb-14","Feb-15","Feb-16","Feb-17","Feb-18","Feb-19","Feb-20","Feb-21","Feb-22","Feb-23","Feb-24","Feb-25","Feb-26","Feb-27","Feb-28","Mar-1","Mar-2","Mar-3","Mar-4","Mar-5","Mar-6","Mar-7","Mar-8","Mar-9","Mar-10","Mar-11","Mar-12","Mar-13","Mar-14","Mar-15","Mar-16","Mar-17","Mar-18","Mar-19","Mar-20","Mar-21","Mar-22","Mar-23","Mar-24","Mar-25","Mar-26","Mar-27","Mar-28","Mar-29","Mar-30","Mar-31","Apr-1","Apr-2","Apr-3","Apr-4","Apr-5","Apr-6","Apr-7","Apr-8","Apr-9","Apr-10","Apr-11","Apr-12","Apr-13","Apr-14","Apr-15","Apr-16","Apr-17","Apr-18","Apr-19","Apr-20","Apr-21","Apr-22","Apr-23","Apr-24","Apr-25","Apr-26","Apr-27","Apr-28","Apr-29","Apr-30","May-1","May-2","May-3","May-4","May-5","May-6","May-7","May-8","May-9","May-10","May-11","May-12","May-13","May-14","May-15","May-16","May-17","May-18","May-19","May-20","May-21","May-22","May-23","May-24","May-25","May-26","May-27","May-28","May-29","May-30","May-31","Jun-1","Jun-2","Jun-3","Jun-4","Jun-5","Jun-6","Jun-7","Jun-8","Jun-9","Jun-10","Jun-11","Jun-12","Jun-13","Jun-14","Jun-15","Jun-16","Jun-17","Jun-18","Jun-19","Jun-20","Jun-21","Jun-22","Jun-23","Jun-24","Jun-25","Jun-26","Jun-27","Jun-28","Jun-29","Jun-30","Jul-1","Jul-2","Jul-3","Jul-4","Jul-5","Jul-6","Jul-7","Jul-8","Jul-9","Jul-10","Jul-11","Jul-12","Jul-13","Jul-14","Jul-15","Jul-16","Jul-17","Jul-18","Jul-19","Jul-20","Jul-21","Jul-22","Jul-23","Jul-24","Jul-25","Jul-26","Jul-27","Jul-28","Jul-29","Jul-30","Jul-31","Aug-1","Aug-2","Aug-3","Aug-4","Aug-5","Aug-6","Aug-7","Aug-8","Aug-9","Aug-10","Aug-11","Aug-12","Aug-13","Aug-14","Aug-15","Aug-16","Aug-17","Aug-18","Aug-19","Aug-20","Aug-21","Aug-22","Aug-23","Aug-24","Aug-25","Aug-26","Aug-27","Aug-28","Aug-29","Aug-30","Aug-31","Sep-1","Sep-2","Sep-3","Sep-4","Sep-5","Sep-6","Sep-7","Sep-8","Sep-9","Sep-10","Sep-11","Sep-12","Sep-13","Sep-14","Sep-15","Sep-16","Sep-17","Sep-18","Sep-19","Sep-20","Sep-21","Sep-22","Sep-23","Sep-24","Sep-25","Sep-26","Sep-27","Sep-28","Sep-29","Sep-30","Oct-1","Oct-2","Oct-3","Oct-4","Oct-5","Oct-6","Oct-7","Oct-8","Oct-9","Oct-10","Oct-11","Oct-12","Oct-13","Oct-14","Oct-15","Oct-16","Oct-17","Oct-18","Oct-19","Oct-20","Oct-21","Oct-22","Oct-23","Oct-24","Oct-25","Oct-26","Oct-27","Oct-28","Oct-29","Oct-30","Oct-31","Nov-1","Nov-2","Nov-3","Nov-4","Nov-5","Nov-6","Nov-7","Nov-8","Nov-9","Nov-10","Nov-11","Nov-12","Nov-13","Nov-14","Nov-15","Nov-16","Nov-17","Nov-18","Nov-19","Nov-20","Nov-21","Nov-22","Nov-23","Nov-24","Nov-25","Nov-26","Nov-27","Nov-28","Nov-29","Nov-30","Dec-1","Dec-2","Dec-3","Dec-4","Dec-5","Dec-6","Dec-7","Dec-8","Dec-9","Dec-10","Dec-11","Dec-12","Dec-13","Dec-14","Dec-15","Dec-16","Dec-17","Dec-18","Dec-19","Dec-20","Dec-21","Dec-22","Dec-23","Dec-24","Dec-25","Dec-26","Dec-27","Dec-28","Dec-29","Dec-30","Dec-31"],keys:["4.x","4.x (7-day Average)","5.x","5.x (7-day Average)","6.x","6.x (7-day Average)","7.x","7.x (7-day Average)","8.x","8.x (7-day Average)","9.x","9.x (7-day Average)","10.x","10.x (7-day Average)","11.x","11.x (7-day Average)"],data:{"6.x":{label:"6.x",data:[224164,354944,400837,413112,354458,145940,137464,304417,327564,333764,338638,317087,148226,139737,241241,327193,338625,333974,307599,147545,137602,317526,333495,332896,328609,286693,140886,134920,304141,327372,324300,324881,296237,148436,139878,299561,328293,325398,327831,305695,158917,151103,299083,331228,326151,317157,302802,159010,150623,272071,318494,333892,332889,307217,164002,156828,332728,344666,338245,340210,311082,178108,163134,332115,345103,352073,334043,313226,153626,141972,319852,318533,323365,323444,293299,150519,141936,318775,331837,326814,337848,293343,149225,149456,316799,325851,321917,319303,245697,141823,139845,255577,305678,302303,288147,264926,132375,130060,284947,291290,292393,295937,313755,172730,173466,318383,307587,302957,301361,277352,147945,143953,299979,289665,277857,277572,272310,144043,127317,278269,246798,298041,298176,280567,171490,134813,278806,278023,271122,264013,265691,136721,130666,306908,326562,320021,354834,295203,146424,171669,331290,348633,331594,333282,251618,129919,132542,224058,280706,304341,284288,272276,146323,141198,293785,313261,302331,271441,252729,126680,123425,267173,266187,277278,268356,245106,122227,121736,259641,287839,283059,301862,272169,141245,131703,272383,280689,268662,266383,239779,140011,126246,252512,256744,213160,240203,219250,115732,112653,251874,242878,239527,242033,222032,122139,117427,256244,267583,247122,249281,210724,107067,103752,236951,230598,222884,211860,195642,102898,97152,202128,208414,204294,201618,184744,99346,97151,193584,206856,211736,204772,191903,102677,100938,198378,210223,196738,214377,216546,118697,118566,218022,232420,228594,232646,216578,119913,119397,226517,241611,245755,232829,212566,117515,117238,173425,220022,234852,228910,209991,113689,110959,217546,238469,244634,233040,208328,122427,117496,219771,223625,219536,223012,206097,122738,121404,208459,230311,233900,240122,220316,141107,132314,219215,224774,223395,235411,219790,140272,142593,216049,249353,248773,243563,216063,129479,128885,217327,225042,216536,212789,192453,110608,115108,201199,231382,227768,223859,202547,119733,117950,218503,222200,221626,218067,203619,123458,119386,201980,209708,215873,227424,210404,126449,126084,206666,219617,222406,218244,201940,132175,122029,199038,213067,205361,176345,168603,117385,117778,197176,213580,218895,217002,197730,119454,30719,169978,226142,216653,215324,203360,123260,125884,212406,219500,215467,208184,192764,119456,116423,195523,205187,199682,199811,173133,111385,105003,125516,114888,134316,154914,143123,108169,109463,123464]},"6.x_avg":{label:"6.x (7-day Average)",data:[277560,281254,293486,306404,313957,302231,290131,301596,297684,288102,277463,272124,272451,272776,263751,263698,264392,263726,262370,262273,261968,272866,273766,272948,272181,269195,268243,267860,265948,265073,263845,263313,264676,265755,266463,265809,265940,266097,266519,267870,269367,270971,270902,271322,271429,269904,269491,269504,269436,265577,263758,264864,267111,267742,268455,269341,278007,281746,282367,283413,283965,285981,286881,286794,286856,288832,287951,288257,284760,281736,279985,276189,272088,270574,267727,267283,267278,267124,269025,269517,271575,271581,271396,272471,272188,271333,270634,267984,261178,260120,258747,250001,247120,244318,239867,242614,241264,239866,244062,242006,240591,241704,248679,254444,260645,265422,267750,269259,270034,264833,261293,257076,254447,251887,248301,244903,244183,243625,241249,238147,232023,234907,237850,239030,242951,244022,244098,248559,244713,239833,237708,232741,232148,236163,243097,250083,263057,267273,268659,274517,278e3,281153,282806,279727,273501,271143,265554,250235,240531,236638,229638,232590,234933,236170,246131,250781,250494,248659,245866,243060,240521,236720,229995,226416,225975,224886,224250,224009,222933,226026,226852,231638,235504,238221,239645,241465,240444,238387,233319,228692,228515,227736,224897,221476,213547,209807,206875,203406,201464,201373,199392,203159,203421,203818,204733,205415,206040,209569,210654,211689,210074,207921,205967,203211,197927,194465,189119,186964,186369,185426,180451,177282,174626,173163,171606,171099,171099,169878,169656,170719,171169,172192,172668,173209,173894,174375,172232,173604,177125,179413,181932,184738,187909,192460,195070,195074,195248,195367,196580,197893,200345,200371,199798,199455,199147,191562,188478,186921,186361,185993,185446,184549,190852,193488,194885,195475,195237,196486,197420,197737,195617,192031,190599,190280,190325,190883,189267,190222,192274,194718,196750,199374,200932,202469,201678,200177,199504,199429,199310,200778,200326,203837,207463,208627,208095,206553,204595,204777,201304,196699,192303,188930,186234,184266,181962,182867,184472,186053,187495,188799,189205,191677,190365,189488,188660,188814,189346,189551,187190,185406,184584,185921,186890,187317,188274,188944,190359,191292,189981,188772,189590,189011,187921,186985,184550,178565,173802,171689,171082,170816,170889,172823,178631,182792,183087,170650,166765,168560,168239,168e3,168804,169348,182943,189004,188055,187885,186865,185352,184808,183457,181045,179e3,176745,175549,172745,171592,169960,159959,147059,137721,131307,127020,126561,127198,126905]},"8.x":{label:"8.x",data:[213499,260492,330755,311475,282053,138125,121599,302955,333071,336888,342534,317500,135595,122481,238895,335646,354890,368634,322852,143579,132314,342537,371621,363863,366826,340988,162568,150545,389917,408747,397460,399789,354228,155969,142937,370239,400472,410523,407275,376096,154450,148005,370957,408772,399858,405357,374546,167089,163759,344350,411850,428968,439485,395170,180017,166565,431556,472373,459755,458065,436107,183152,165996,456969,482082,508703,483965,429346,177968,164120,472147,500574,493674,501865,456340,200544,181367,497017,543934,559968,567790,511486,210112,199174,498838,512963,505984,496603,375773,175096,162796,379586,528996,533821,511987,481292,217599,222284,505291,535852,546813,528150,465472,177909,172732,505076,527841,530891,524577,463120,176507,164723,493504,521046,513390,524481,470010,194705,168578,429105,392336,512855,518057,487219,186967,175143,483962,536004,534272,495601,469149,196574,184253,520401,571348,571807,567169,508701,208309,184853,491768,566980,581368,571028,501423,180828,175300,389415,542332,578648,552076,513497,217148,192864,546483,585277,596158,589580,517790,219103,210106,585012,602733,633431,603420,594461,291322,253819,580712,671129,653349,658240,621147,281277,235489,593957,663148,648408,624338,565155,217049,212390,590490,641312,477185,562344,533642,205941,204980,579905,608722,610372,609636,547006,227715,220027,580871,640320,648997,595414,538806,223112,215524,596566,633163,624610,614206,554510,228622,220836,594117,634898,628461,610177,560066,230511,217446,579560,628478,625427,618399,559882,237879,229e3,589165,628944,584741,680750,638163,280252,293575,689947,750559,734018,795539,659730,304145,320423,706308,706315,686247,693788,596543,343924,346279,544757,670751,692784,688736,647198,356130,293976,680731,726412,738462,716973,657126,320061,346747,746045,801281,783524,805978,796434,396200,303177,725404,818324,836196,854325,772660,356011,356117,795832,878942,778929,777185,696805,328243,364132,789215,815075,791300,789648,760767,321830,338278,796796,791517,797076,797276,701866,344926,401728,745104,899011,814916,761362,681713,309770,303813,799046,850531,737117,688496,677600,345508,340280,656880,712397,675053,668409,657040,276528,284002,614022,694275,685780,731625,686128,326692,267625,630884,689005,710770,611723,507364,322328,352888,719562,777059,732393,717806,647387,308104,66246,584462,714677,700361,717705,595538,250593,237053,609716,647029,639962,624275,567467,251205,242454,588509,628816,635476,641096,516314,233952,231138,302463,255812,329565,396453,366695,240859,224114,278739]},"8.x_avg":{label:"8.x (7-day Average)",data:[188363,202657,222256,238825,254017,255958,236856,249636,260004,260880,265317,270381,270020,270146,260994,261362,263934,267663,268427,269568,270972,285778,290918,292200,291941,294532,297245,299849,306618,311922,316721,321430,323322,322379,321292,318481,317299,319165,320234,323358,323141,323865,323968,325154,323630,323356,323135,324940,327191,323390,323829,327988,332863,335810,337657,338057,350515,359162,363560,366214,372062,372510,372429,376059,377446,384439,388139,387173,386432,386164,388333,390974,388827,391384,395241,398466,400930,404483,410677,420147,429565,437443,438810,441354,441614,437190,429478,419308,399921,394918,389721,372685,374976,378953,381150,396224,402296,410795,428752,429732,431588,433897,431637,425967,418888,418857,417713,415438,414928,414592,414392,413247,411594,410624,408123,408110,409094,411694,412244,403045,384657,384581,383663,386122,385016,385954,393791,414315,417374,414166,411585,412957,414259,419464,424514,429876,440100,445750,447426,447512,443422,442798,444164,444715,443675,439749,438385,423763,420242,419853,417146,418870,424059,426568,449006,455141,457643,463001,463614,463893,466356,471860,474354,479679,481656,492609,502926,509171,508556,518327,521173,529004,532816,531381,528763,530655,529515,528809,523966,515967,506792,503492,502996,499877,475417,466560,462058,460472,459413,457901,453245,472272,479028,480937,484048,486197,486335,490849,496367,494335,493164,492506,491863,494105,493083,489599,492283,494527,495314,496073,495723,495971,496521,495945,496739,497009,496525,494445,493528,493095,494269,494243,495295,496946,498318,498385,492572,501480,512663,518716,527941,542338,559712,581037,597436,600517,603930,607765,610103,603782,596958,582422,573395,579078,582772,559693,554612,555546,554824,562061,563805,556333,575758,583709,590235,594268,595687,590534,598073,607403,618099,624536,637251,657152,668029,661805,658856,661291,668816,675722,672326,666585,674148,684209,692869,684688,673668,662831,658864,660009,659064,649940,651707,653488,662625,661709,658016,659099,655733,656558,657648,649234,652533,661597,654213,669569,672118,666987,664108,659086,645098,652804,645878,634764,624355,623767,628873,634082,613773,594039,585173,582303,579366,569512,561472,555350,552761,554293,563324,567480,574646,572306,574715,573962,577532,560403,534866,534242,546423,559091,571670,574759,589914,609917,607885,566936,547636,538725,534149,534134,526727,518511,542912,546520,536856,528228,514880,510870,510958,511729,508700,506098,505457,507860,500552,498088,496471,455607,402321,358620,323671,302296,303283,302280,298891]},"4.x":{label:"4.x",data:[48206,71069,80133,82861,75959,50974,49920,77217,81237,83218,81915,80321,49771,46847,62520,78864,93443,89548,82377,52694,49536,83079,83596,83838,98688,78750,48966,48378,78197,86384,85428,89758,82533,62511,54076,83474,87532,87527,89060,82366,60925,57451,82997,96726,95624,92479,93479,58862,55422,75015,87473,94985,89542,89404,65138,58989,83977,91375,90115,86181,77759,55683,49585,80857,83775,94244,89771,72742,46214,45466,88048,85190,86824,83102,74329,45460,42638,73380,80778,75094,78842,71977,43259,43930,70568,71701,65032,63646,52543,34181,32418,54562,65468,66128,59937,58236,33869,36563,63791,67734,66805,66876,59621,33559,32512,57599,61686,60179,58993,57446,37667,34647,59587,61983,63224,64058,59328,36254,33371,54782,51259,58215,57896,53706,31687,31788,54134,57127,55287,53214,51503,32662,30564,55775,57691,57022,55484,51398,31897,28984,49734,56364,56382,56368,50251,30384,32341,41274,50824,53298,52133,51787,31028,28611,53135,54342,55354,54367,50060,29280,32503,51937,56146,57166,58526,54219,32825,30933,53123,60879,56667,60305,53483,36424,35521,55491,59593,57486,53404,48080,33603,28580,45720,48114,38377,45685,43525,24672,25087,45573,45209,45222,45654,44705,23624,23937,42302,46989,44482,45090,41535,26293,23879,42838,46639,44121,43994,40818,24233,24603,42236,52159,50255,49162,44330,27661,27133,45233,48472,47123,45907,44538,28233,26617,46339,49386,45129,45851,41885,25148,25415,42323,48038,44389,47942,45613,29366,27768,43095,48646,49212,48481,42614,28750,28484,35655,43916,47179,46820,41616,26693,26915,42188,46472,46561,45176,40801,28949,29516,46217,47294,46509,45909,41434,25222,25278,39454,44471,43898,41880,39924,29385,26417,40318,40489,40509,40492,37622,24997,25175,38865,43036,41104,42773,37329,26778,27297,37930,37929,35888,37299,33208,23511,23798,34443,39919,37413,36390,33529,21755,21866,33445,35918,37428,39498,41211,27625,27264,39108,40369,38397,39206,40007,26992,26886,39258,43233,40718,40695,42096,30629,31210,40306,44238,43702,36541,37569,27954,27352,40336,43148,44005,44507,40668,28366,7902,32016,40277,42368,42785,39406,28776,28842,40192,48017,43587,40996,39418,29397,28378,39936,42738,40720,40620,39898,32498,28458,30218,28261,31781,33814,33498,29134,28013,29634]},"4.x_avg":{label:"4.x (7-day Average)",data:[56411,58419,60929,63315,65223,65461,65588,69733,71185,71626,71491,72114,71942,71503,69404,69065,70525,71616,71910,72327,72711,75648,76324,74952,76258,75740,75207,75042,74344,74743,74970,73694,74234,76169,76983,77737,77901,78201,78101,78078,77851,78333,78265,79578,80735,81224,82811,82516,82227,81086,79764,79673,79254,78671,79568,80078,81358,81915,81220,80739,79076,77725,76382,75936,74850,75440,75953,75236,73884,73295,74322,74525,73465,72512,72739,72631,72227,70131,69501,67825,67217,66881,66566,66751,66349,65053,63615,61444,58668,57371,55727,53440,52550,52706,52176,52990,52945,53537,54856,55179,55276,56267,56465,56421,55842,54958,54094,53147,52021,51710,52297,52602,52886,52928,53363,54087,54356,54154,53972,53285,51753,51038,50157,49354,48702,48476,48383,49221,48803,48134,47820,47959,47784,48018,48099,48347,48671,48656,48547,48321,47458,47269,47177,47303,47140,46923,47403,46194,45403,44962,44357,44577,44669,44136,45830,46333,46627,46946,46699,46449,47005,46834,47092,47351,47945,48539,49046,48821,48991,49667,49596,49850,49745,50259,50914,51252,51069,51186,50200,49428,49025,48033,46638,44998,42268,41165,40514,39239,38740,38719,38304,39281,39277,39446,39296,39132,38664,38919,38813,38732,38279,38661,38652,38729,38679,38627,38471,38368,38074,38178,38092,38880,39756,40495,40996,41486,41848,42276,41749,41302,40837,40866,40948,40874,41032,41163,40878,40870,40491,40050,39879,39305,39112,39007,39305,39838,40440,40777,40887,40974,41663,41740,41311,41223,41326,40263,39587,39297,39059,38917,38623,38399,39332,39697,39609,39374,39258,39580,39951,40527,40644,40637,40742,40832,40300,39694,38728,38325,37952,37376,37161,37755,37918,38041,37473,36988,36790,36461,35834,35657,35449,35813,35898,36224,36182,36437,36740,36606,35877,35132,34350,33761,33294,32794,32296,32580,32798,32668,32714,32463,32187,32045,31473,31475,31919,33017,33855,34627,35436,36071,36210,36168,35996,35906,35852,35873,36282,36614,36827,37125,37645,38262,38412,38556,38982,38388,37742,37360,36808,36813,36657,36700,37838,38281,38340,35561,34373,33963,33729,33483,33302,33361,36352,37520,38626,38800,38545,38546,38635,38569,38532,37778,37369,37315,37383,37826,37838,36450,34381,33104,32132,31218,30737,30674,30590]},"7.x":{label:"7.x",data:[30619,62571,68526,62883,62536,36959,36884,67556,83094,75164,71965,61985,33180,31303,50709,64597,70924,73374,66623,37387,36799,69253,69211,69546,63876,58460,31970,30102,63679,65708,65856,66520,60732,33127,31699,62383,64945,67140,69853,58914,34084,33171,73826,73706,65415,63423,56724,32366,30917,54520,61526,65321,63488,59452,31921,30248,62985,65983,62304,61747,57684,30418,29449,60065,64752,62934,60361,59763,36629,35715,82505,79535,71248,70242,65439,38750,38257,68215,74237,74394,73867,65899,40614,41189,70169,78086,76508,65030,46995,30287,28188,49611,65696,68574,68857,61894,37353,35465,65576,67678,69726,67212,55605,26985,27170,56244,58974,63321,61437,56195,30915,29267,60165,63388,63455,64366,59542,36131,35538,56640,52767,61290,58258,49222,28102,27497,52164,54916,65783,64344,58017,37423,36863,70705,78488,70610,62469,50950,27018,25204,48381,52026,53575,55006,47697,24906,24449,45267,56067,55692,56436,57391,35050,33138,52999,56795,54674,51250,47896,25789,24799,49916,52828,51936,49324,43806,23956,24568,47252,49670,48147,49099,45706,28467,26922,46957,50590,47688,45649,44367,25441,25688,41567,44921,38236,41847,40991,24548,24322,43114,44907,43446,43204,41159,24378,24086,41614,46191,44167,44228,39739,25213,23720,40286,41499,41877,41900,39874,24468,23568,41648,44543,44629,43725,39443,25536,24748,41218,44134,42857,41042,39869,25525,23234,40449,39866,36678,36981,34902,22222,21821,36912,38100,38811,40289,38231,24739,24531,38743,40061,40329,39811,36355,22717,22507,32034,37834,40485,38745,36518,23708,22733,37711,40622,38490,37453,36082,22905,22487,37094,38290,38395,38194,35360,23294,23039,34267,38273,38243,38723,35643,23881,23900,36615,36011,36462,36143,34419,22607,23228,33645,38499,37394,36631,35183,22139,22229,36239,37717,38449,38038,36336,22533,22582,34527,39952,39920,38152,35387,22597,21780,36890,37995,38462,36719,35469,23161,22417,37651,39209,37096,36139,34552,22721,21235,34268,36524,36865,36924,34747,24203,22474,34014,38753,38300,30634,31955,23923,22385,35173,37666,36279,37002,35515,25370,6075,31270,36975,37761,36032,33816,22136,22152,34742,38585,36370,36044,33477,23028,21808,33710,34939,34942,34513,32365,22026,21619,23757,21942,25794,27858,25864,21977,21481,23955]},"7.x_avg":{label:"7.x (7-day Average)",
data:[37794,41402,44782,47054,49911,50822,51568,56845,59776,60725,62022,61943,61404,60606,58200,55557,54951,55153,55815,56416,57201,59851,60510,60313,58956,57790,57016,56059,55263,54763,54235,54613,54938,55103,55331,55146,55037,55220,55697,55437,55574,55784,57419,58670,58424,57505,57192,56947,56625,53867,52127,52113,52123,52512,52449,52353,53563,54199,53768,53520,53267,53052,52938,52521,52345,52435,52237,52534,53421,54317,57522,59634,60822,62233,63044,63347,63710,61669,60912,61362,61879,61945,62211,62630,62909,63459,63761,62499,59798,58323,56466,53529,51759,50625,51172,53301,54310,55350,57630,57913,58078,57843,56945,55463,54278,52945,51702,50787,49962,50046,50608,50907,51467,52098,52117,52535,53014,53759,54655,54151,52634,52324,51452,49978,48831,47682,47042,47349,47991,48861,50117,51449,52787,55435,58803,59492,59225,58215,56729,55063,51874,48094,45660,44594,44129,43827,43720,43275,43852,44154,44359,45744,47193,48434,49539,49643,49497,48756,47400,46077,44886,44445,43878,43487,43212,42628,42366,42333,41952,41501,40960,40928,41199,41844,42180,42138,42269,42204,41711,41520,41087,40911,40141,39331,37981,37438,36955,36828,36633,36854,36852,37596,37790,37814,37790,37756,37542,37725,37828,37974,37771,37891,37838,37649,36978,36651,36319,36338,36232,36210,36404,36839,37232,37493,37432,37584,37753,37691,37633,37380,36996,37057,37056,36839,36730,36120,35237,34657,33947,33476,33274,32768,32516,32821,33293,33769,34129,34516,34777,35057,35274,35206,34938,34649,34360,33402,33083,33106,32953,32977,33118,33151,33962,34360,34075,33890,33828,33713,33678,33590,33257,33243,33349,33246,33302,33380,32977,32974,32952,33028,33068,33152,33275,33611,33288,33033,32665,32490,32308,32212,31787,32143,32276,32346,32455,32388,32245,32616,32504,32655,32856,33021,33077,33127,32883,33202,33412,33428,33293,33302,33187,33525,33245,33037,32832,32844,32925,33016,33124,33298,33103,33020,32889,32826,32657,32174,31790,31757,31869,31897,32109,32286,32250,32568,32773,31875,31476,31436,31423,31589,31433,31145,32054,32563,32770,30440,29882,29783,29995,29856,29614,29152,31448,31944,32174,31976,31977,31929,32056,32007,31860,31339,31135,30916,30757,30614,30587,29165,27309,26002,25051,24122,24115,24096,24124]},"5.x":{label:"5.x",data:[9052,16991,20868,22198,21285,12314,11786,21736,23862,23467,23477,23183,11102,10482,15695,21610,22289,23240,21873,11868,11010,22863,23662,22272,22474,21482,11117,10580,21514,22968,21990,23618,20458,10383,8398,19e3,19659,20822,20436,17885,10329,7706,17640,20568,19317,19949,18613,9210,8296,15170,19778,19771,19387,17263,9053,8484,18259,20730,17972,20485,18376,8447,7956,18755,20990,23437,18755,17613,8484,7439,17592,18776,17948,19188,17018,8358,7513,17314,18259,18046,18916,16980,8463,7990,17263,18271,18632,17634,13978,7801,7590,14159,17238,17433,16286,14066,7780,7939,15879,16812,16476,16916,15563,7950,10570,15378,16224,15331,16404,14351,7665,6572,15363,16692,17661,16138,14509,7613,6792,15178,13720,14957,16116,14291,5799,6063,12865,14622,14735,13254,12266,5844,5334,13290,15413,15414,15579,13864,6986,6155,14072,17513,20127,20857,17346,10549,9888,14528,18492,18077,17730,17643,10974,10316,18877,20680,20125,17414,19658,13142,11935,19340,13266,13067,13631,12047,5457,5342,12045,13988,13510,12303,11715,5795,5373,11216,12680,12061,12104,11366,4791,4593,11222,12341,9583,11398,10976,4901,4437,12461,12586,12331,10607,10112,4730,4463,11328,12322,12750,12915,11535,5698,6723,13298,13535,12599,13950,11998,4808,4456,12435,13900,13787,12170,10315,4890,4719,11981,12327,12635,12773,12477,5134,4516,11598,12259,10871,11283,11449,5511,5106,10984,11037,11153,12258,11513,5120,5065,10179,11541,12194,11528,10212,4517,4379,6991,9772,10128,11552,9079,4157,4071,9131,11071,11744,10425,9423,4503,3694,9233,10318,9700,10165,9383,4339,4156,8839,11171,12706,13665,13427,5817,4723,10357,10643,9434,10780,11462,5047,4711,9947,10611,1e4,11492,10218,5273,4777,9584,9978,11685,11080,10588,5767,5441,9419,12776,12130,12228,11139,5604,4890,11410,11527,11444,10237,12166,5677,5165,9978,11281,9261,10204,9971,4568,3974,8063,9043,9686,8756,8953,4812,3608,7409,8523,9696,7912,6821,3723,3365,7788,9513,8736,7882,8368,3922,873,6339,8729,8840,8391,6366,3562,3740,6993,9038,7700,7813,7366,3894,3400,7032,8266,7605,6523,6244,4240,3572,4509,3875,4991,5156,4769,3995,3427,3741]},"5.x_avg":{label:"5.x (7-day Average)",data:[11892,12587,13641,14684,15561,15910,16356,18168,19149,19521,19703,19975,19801,19615,18752,18430,18262,18228,18041,18151,18226,19250,19543,19541,19431,19375,19268,19207,19014,18915,18875,19038,18892,18787,18475,18116,17643,17476,17022,16654,16647,16548,16353,16483,16268,16199,16303,16143,16227,15874,15761,15826,15746,15553,15531,15558,15999,16135,15878,16035,16194,16107,16032,16103,16140,16920,16673,16564,16570,16496,16330,16013,15229,15291,15206,15188,15199,15159,15085,15099,15060,15055,15070,15138,15131,15132,15216,15033,14604,14509,14452,14009,13861,13690,13497,13510,13507,13557,13803,13742,13605,13695,13909,13933,14309,14237,14153,13990,13917,13744,13703,13132,13130,13196,13529,13491,13514,13506,13538,13511,13087,12701,12697,12666,12407,12303,11973,12101,12070,11661,11372,11378,11274,11335,11448,11545,11877,12105,12268,12385,12497,12797,13470,14224,14722,15231,15764,15829,15969,15676,15230,15272,15333,15394,16015,16328,16620,16575,16863,17173,17404,17470,16411,15403,14862,13775,12677,11735,10693,10796,10860,10670,10622,10671,10675,10557,10370,10163,10134,10085,9941,9830,9831,9782,9428,9327,9272,9287,9265,9442,9477,9870,9757,9633,9609,9612,9451,9413,9473,9802,10006,10144,10467,10748,10922,10900,11048,11114,10987,10663,10540,10592,10762,10507,10267,10279,10316,10251,10027,9862,9948,10257,10292,10263,10208,10198,9946,9734,9587,9641,9725,9637,9463,9503,9642,9651,9595,9590,9475,9547,9695,9591,9405,9319,9221,8766,8513,8218,8221,8059,8008,7964,8270,8455,8686,8525,8574,8624,8570,8584,8477,8185,8148,8142,8118,8184,8128,8250,8679,9179,9757,9968,10049,10266,10191,9723,9311,9030,8920,8919,8860,8856,8936,9038,8860,8893,8902,8850,8760,9001,8942,8995,9065,9160,9136,9536,9600,9764,9842,9819,9740,10025,9846,9748,9464,9611,9621,9660,9456,9421,9109,9104,8791,8632,8462,8188,7869,7929,7723,7577,7612,7560,7466,7392,7393,7273,6968,6813,6778,6832,6974,6836,6832,7053,7082,6726,6519,6407,6421,6494,6208,6157,6566,6660,6704,6541,6458,6601,6649,6600,6606,6495,6482,6298,6137,6187,6211,5851,5224,4850,4655,4444,4409,4388,4279]},"10.x":{label:"10.x",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,13798,87452,79582,66230,41483,36300,60339,58441,77909,74670,70033,39614,39064,75140,78021,92315,86274,81913,51727,48151,96114,99935,95844,91501,79284,45256,42488,82559,91127,93166,111090,100261,47592,47267,89409,98104,103059,93379,89276,54397,45400,100428,101653,104799,112743,128470,69530,65959,123995,128186,132668,121231,101781,49325,47353,105385,118446,113730,127937,116716,68026,60147,123256,130814,121260,123265,112064,53626,57861,155890,123026,106780,124183,116784,55882,53320,123295,129769,126837,123398,114382,61387,54650,136544,142538,130302,134618,116887,56590,54967,128960,137827,128161,123801,115935,56262,55696,133697,138632,139314,140972,120890,57447,51986,132765,138852,135819,133564,120673,53053,51746,130349,134840,124082,145453,135670,63023,61573,149115,155873,155764,151865,132434,66459,64017,141695,154416,161278,153283,129748,63339,60937,131433,149210,154006,150541,151714,66076,61431,160283,169366,172092,158155,143252,62120,58659,160590,172292,172216,179564,157521,67842,63994,162687,185523,183730,184624,16e4,77383,69760,162192,177103,174925,168203,154530,72203,68252,165945,199090,196275,206035,169488,79010,81585,190952,196968,197814,199559,182782,86530,82790,168709,207115,157736,146854,138895,53413,52160,161416,239507,265239,277810,237977,114363,112435,264121,272327,262820,264834,245097,115688,103840,262847,289060,279574,271715,236358,115559,109713,266512,279542,269367,222030,197333,111727,107763,274714,290238,304836,304938,272835,120047,22474,261391,327389,307379,291778,276142,124143,112718,303665,330671,338492,320599,278940,122723,113852,308133,319461,312684,313091,266645,115748,105337,145741,118546,168577,213787,190929,120256,101580,124534]},"10.x_avg":{label:"10.x (7-day Average)",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1971,14464,25833,35294,41220,46406,55026,61403,60040,59338,59882,59615,60010,62124,64921,66979,68637,70334,72064,73363,76359,79489,79994,80740,80365,79440,78631,76695,75437,75054,77852,80849,81183,81866,82844,83841,85254,82724,81155,82127,81860,83434,83941,84190,86956,92555,94717,97654,101021,104811,108793,110005,106192,103306,100648,97989,96598,93893,94851,96984,99656,101483,104036,105803,106879,106212,105547,103490,103163,107825,106713,104644,104775,105450,105772,105123,100467,101430,104295,104183,103840,104626,104816,106709,108533,109028,110631,110989,110304,110349,109266,108593,108287,106741,106605,106559,106663,107339,107454,109048,111501,112209,112378,111848,111715,111746,111247,110189,110158,109530,109496,109150,108577,106901,108599,110741,112166,113570,116250,119255,123781,124697,124235,124726,125075,124015,123807,124594,124797,124413,123968,123528,122062,121318,120279,119887,123025,123416,123487,127608,130488,133071,134159,132950,132385,131989,132033,132451,132469,135527,137566,138383,139145,139445,141335,142980,143703,144057,145420,146243,146173,144970,143712,141366,140585,139845,139629,140165,143306,146356,151761,153898,154870,156775,160347,160044,160264,159339,161238,162312,162485,159307,160757,155031,147502,141232,136501,132126,131084,135711,151069,169777,183931,192638,201249,215921,220610,220264,218411,219428,219617,218389,218207,220598,222991,223974,222726,222707,223546,224070,222710,221252,214154,208579,208032,207753,208925,210453,215520,227364,238150,239338,227154,225251,230558,230921,229041,229514,230099,242991,249030,249499,253944,258061,258461,258258,258420,259058,257457,253770,252697,250941,249944,248728,225529,196827,176240,162054,151237,151881,151345,148315]},"9.x":{label:"9.x",data:[51098,69667,80972,82124,79271,44419,42118,83758,90711,93907,100414,87933,63566,61014,70524,92106,98336,102779,89642,48892,45922,92656,99507,95211,93382,88631,46860,50573,95745,103761,100359,110594,98064,51351,47439,102565,107520,108991,105587,100281,57029,63359,110082,113647,116292,109027,109419,55814,54297,120262,109068,110206,111953,114237,56698,56632,117600,128341,125531,124059,114908,60559,56775,127713,133017,123850,125945,115314,54970,52879,122562,126657,124373,125808,116799,55779,52520,120709,128026,131856,141699,118825,54511,55672,123807,127949,130376,131621,98586,54650,54591,103409,137233,133058,137557,118357,56624,59868,131751,136264,134213,135859,126308,60908,58088,138189,139397,138891,141958,123169,58483,56587,133644,135287,87981,87859,80222,34689,33635,77799,70263,84256,78623,71916,25221,23364,75139,78039,76458,65327,65597,23682,22339,72700,78838,78349,81126,74373,23239,19809,63851,76468,76433,79401,64825,22196,22982,52681,74606,75467,71273,67238,24318,23045,71764,75266,78239,78529,69207,25011,24047,74164,77102,84018,80467,74042,24562,23084,74970,84143,82885,83689,67070,25916,22277,71962,78048,72847,67589,64578,18739,20491,65622,70876,54358,63342,63969,17728,17899,64923,70654,69043,70601,62801,17155,16107,73696,75686,68360,69433,61297,18118,16311,64087,77125,75837,74149,67953,17878,14820,84574,75249,77273,72294,63655,18011,16443,80117,76089,77044,77548,69375,19551,17321,88180,80816,68776,74297,69135,20299,18476,72644,81851,74105,76569,71272,21667,20175,69888,75428,78968,75452,60178,17518,16726,44239,67548,78702,77611,68155,21054,16987,76859,105417,90352,76973,66324,50044,17345,71976,78622,77668,79328,68983,21092,19455,70763,77840,78647,77604,74634,23680,20888,72685,80561,71038,75326,65547,23427,24015,68426,78785,76944,70850,61021,21083,20984,61736,75751,75256,67667,59557,21273,18973,54850,72803,67645,65504,57690,20595,17968,65886,65500,68639,66996,53956,21005,18199,60671,67562,62577,64103,61463,20087,16709,55654,66255,65498,64018,58245,21577,18772,58421,63377,58616,43850,42928,19003,18550,56985,64183,65693,64372,56531,20752,4219,52451,69810,59581,58155,51862,20891,19996,54912,59493,62969,56411,52059,21631,19741,53547,59534,55818,64120,53679,20243,17808,25962,18550,29671,39906,36703,21112,18565,24295]},"9.x_avg":{label:"9.x (7-day Average)",data:[115917,100454,85861,71743,66207,63908,64238,68904,71910,73758,76371,77608,80343,83043,81152,81352,81984,82322,82566,80470,78314,81476,82533,82087,80744,80600,80309,80974,81415,82023,82758,85217,86565,87206,86759,87733,88270,89503,88788,89104,89916,92190,93264,94139,95182,95673,96979,96805,95511,96965,96311,95441,95859,96548,96674,97008,96627,99381,101570,103299,103395,103947,103967,105412,106080,105840,106109,106167,105369,104812,104076,103168,103242,103223,103435,103551,103499,103235,103430,104499,106769,107059,106878,107328,107770,107759,107548,106108,103217,103237,103082,100168,101495,101878,102726,105550,105832,106586,110635,110497,110662,110419,111555,112167,111913,112832,113280,113948,114819,114371,114025,113810,113161,112574,105301,97572,91437,88038,84759,76781,67492,66960,65641,64454,63101,61634,61254,62365,61251,59352,58449,58229,58083,57734,57848,58118,60375,61629,61566,61204,59940,59602,59328,59082,57718,57569,58022,56426,56160,56022,54861,55206,55509,55518,58244,58338,58734,59771,60052,60151,60294,60637,60899,61725,62002,62693,62628,62491,62606,63612,63450,63910,62914,63108,62992,62563,61692,60258,57958,57602,56577,56322,55416,54391,51750,51143,51056,50912,50542,50442,50410,52508,53545,53378,53296,53040,54293,55012,54915,54748,54533,54671,54700,53327,53533,54601,55274,56225,56191,55978,58905,58637,58842,58577,57963,57982,58214,57577,57697,57664,58415,59232,59452,59577,60729,61405,60223,59759,59725,59832,59997,57777,57925,58686,59011,59316,59512,59754,59361,58443,59138,58978,57393,56801,56308,52644,51518,51480,51788,52928,53433,53470,58130,63540,65205,65113,64852,68993,69044,68347,64519,62707,63043,63423,59287,59589,59415,59304,59444,59197,60005,60374,60579,60854,61242,60155,59830,58532,58496,58942,58334,58080,58924,58284,57638,57303,56870,55914,55481,55240,54785,54576,54603,54316,53332,52911,51824,51515,51248,51151,51007,52584,51541,51683,51896,51362,51421,51454,50709,51004,50138,49724,50797,50666,50453,49736,49549,49967,49954,49495,49708,50002,50398,49986,49003,46122,43934,43566,43535,43329,43445,44456,47387,49331,49580,47533,46885,47689,46816,45928,45261,45281,47535,47886,46412,46896,46647,46675,46781,46745,46550,46556,45534,46635,46867,46668,46392,42452,36597,32861,29402,26977,27101,27209,26971]},"11.x":{label:"11.x",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17280,85495,79295,69880,40130,39552,79366,76438,69906,94141,96284,65547,63825,109246,110429,109263,101966,96528,59997,54424,89209,98323,91059,89050,85650,49185,46338,92366,92275,92975,80352,72528,48316,46458,88354,99257,115763,105244,97470,53981,11648,86027,118331,104775,96197,91849,54864,50696,103769,107915,110401,105496,91423,52409,50584,101125,106192,110066,120684,97725,51840,46907,60269,48148,66887,87684,81443,56710,53396,58669]},"11.x_avg":{label:"11.x (7-day Average)",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,2468,14682,26010,35992,41725,47376,58714,67165,64938,67059,70831,74462,77929,82198,87054,92676,93794,93829,93036,91693,88830,87101,84500,82655,81101,79557,78402,78853,77989,78262,77020,75145,75021,75038,74465,75462,78718,82274,85837,86646,81673,81341,84066,82496,81204,80401,80527,86105,88640,87152,87955,89284,89223,88872,88856,88479,88232,88185,90354,91255,91173,90648,84811,76519,70351,65637,63311,64006,64933,64705]}}},module.exports.countries={labels:["Jan-1","Jan-2","Jan-3","Jan-4","Jan-5","Jan-6","Jan-7","Jan-8","Jan-9","Jan-10","Jan-11","Jan-12","Jan-13","Jan-14","Jan-15","Jan-16","Jan-17","Jan-18","Jan-19","Jan-20","Jan-21","Jan-22","Jan-23","Jan-24","Jan-25","Jan-26","Jan-27","Jan-28","Jan-29","Jan-30","Jan-31","Feb-1","Feb-2","Feb-3","Feb-4","Feb-5","Feb-6","Feb-7","Feb-8","Feb-9","Feb-10","Feb-11","Feb-12","Feb-13","Feb-14","Feb-15","Feb-16","Feb-17","Feb-18","Feb-19","Feb-20","Feb-21","Feb-22","Feb-23","Feb-24","Feb-25","Feb-26","Feb-27","Feb-28","Mar-1","Mar-2","Mar-3","Mar-4","Mar-5","Mar-6","Mar-7","Mar-8","Mar-9","Mar-10","Mar-11","Mar-12","Mar-13","Mar-14","Mar-15","Mar-16","Mar-17","Mar-18","Mar-19","Mar-20","Mar-21","Mar-22","Mar-23","Mar-24","Mar-25","Mar-26","Mar-27","Mar-28","Mar-29","Mar-30","Mar-31","Apr-1","Apr-2","Apr-3","Apr-4","Apr-5","Apr-6","Apr-7","Apr-8","Apr-9","Apr-10","Apr-11","Apr-12","Apr-13","Apr-14","Apr-15","Apr-16","Apr-17","Apr-18","Apr-19","Apr-20","Apr-21","Apr-22","Apr-23","Apr-24","Apr-25","Apr-26","Apr-27","Apr-28","Apr-29","Apr-30","May-1","May-2","May-3","May-4","May-5","May-6","May-7","May-8","May-9","May-10","May-11","May-12","May-13","May-14","May-15","May-16","May-17","May-18","May-19","May-20","May-21","May-22","May-23","May-24","May-25","May-26","May-27","May-28","May-29","May-30","May-31","Jun-1","Jun-2","Jun-3","Jun-4","Jun-5","Jun-6","Jun-7","Jun-8","Jun-9","Jun-10","Jun-11","Jun-12","Jun-13","Jun-14","Jun-15","Jun-16","Jun-17","Jun-18","Jun-19","Jun-20","Jun-21","Jun-22","Jun-23","Jun-24","Jun-25","Jun-26","Jun-27","Jun-28","Jun-29","Jun-30","Jul-1","Jul-2","Jul-3","Jul-4","Jul-5","Jul-6","Jul-7","Jul-8","Jul-9","Jul-10","Jul-11","Jul-12","Jul-13","Jul-14","Jul-15","Jul-16","Jul-17","Jul-18","Jul-19","Jul-20","Jul-21","Jul-22","Jul-23","Jul-24","Jul-25","Jul-26","Jul-27","Jul-28","Jul-29","Jul-30","Jul-31","Aug-1","Aug-2","Aug-3","Aug-4","Aug-5","Aug-6","Aug-7","Aug-8","Aug-9","Aug-10","Aug-11","Aug-12","Aug-13","Aug-14","Aug-15","Aug-16","Aug-17","Aug-18","Aug-19","Aug-20","Aug-21","Aug-22","Aug-23","Aug-24","Aug-25","Aug-26","Aug-27","Aug-28","Aug-29","Aug-30","Aug-31","Sep-1","Sep-2","Sep-3","Sep-4","Sep-5","Sep-6","Sep-7","Sep-8","Sep-9","Sep-10","Sep-11","Sep-12","Sep-13","Sep-14","Sep-15","Sep-16","Sep-17","Sep-18","Sep-19","Sep-20","Sep-21","Sep-22","Sep-23","Sep-24","Sep-25","Sep-26","Sep-27","Sep-28","Sep-29","Sep-30","Oct-1","Oct-2","Oct-3","Oct-4","Oct-5","Oct-6","Oct-7","Oct-8","Oct-9","Oct-10","Oct-11","Oct-12","Oct-13","Oct-14","Oct-15","Oct-16","Oct-17","Oct-18","Oct-19","Oct-20","Oct-21","Oct-22","Oct-23","Oct-24","Oct-25","Oct-26","Oct-27","Oct-28","Oct-29","Oct-30","Oct-31","Nov-1","Nov-2","Nov-3","Nov-4","Nov-5","Nov-6","Nov-7","Nov-8","Nov-9","Nov-10","Nov-11","Nov-12","Nov-13","Nov-14","Nov-15","Nov-16","Nov-17","Nov-18","Nov-19","Nov-20","Nov-21","Nov-22","Nov-23","Nov-24","Nov-25","Nov-26","Nov-27","Nov-28","Nov-29","Nov-30","Dec-1","Dec-2","Dec-3","Dec-4","Dec-5","Dec-6","Dec-7","Dec-8","Dec-9","Dec-10","Dec-11","Dec-12","Dec-13","Dec-14","Dec-15","Dec-16","Dec-17","Dec-18","Dec-19","Dec-20","Dec-21","Dec-22","Dec-23","Dec-24","Dec-25","Dec-26","Dec-27","Dec-28","Dec-29","Dec-30","Dec-31"],keys:["USA","USA (7-day Average)","Europe","Europe (7-day Average)","China","China (7-day Average)","Developing Economies","Developing Economies (7-day Average)"],data:{usa:{label:"USA",data:[489420,636826,739037,725779,657450,293299,281630,611992,658970,674284,692271,642020,317948,297836,450096,649948,704760,712707,642664,315578,289152,657304,711725,712121,722427,650907,324845,311686,686789,743406,727562,734073,673664,343579,311056,676996,744186,759734,762824,706569,364385,333269,708187,794252,782026,769850,750907,376443,350935,641526,757310,798652,795068,743449,375885,361654,763256,828776,811424,808019,755916,382438,351551,784927,844454,863055,830514,743361,338474,315760,773916,808722,819514,827455,752417,342844,317928,773356,832299,822630,841076,745283,343591,337304,775060,817443,814319,802834,621702,320584,307456,632738,809977,806898,780835,721944,341050,321450,758949,809852,814894,814400,778145,363361,360191,804497,824190,826393,821244,738912,338010,324074,775371,802590,798950,811861,762450,349593,321947,746722,691782,781213,779290,727450,355160,309058,726822,775066,773942,735576,707326,335261,321931,785466,857633,847005,879252,776017,340907,326952,733040,817892,842225,862715,739698,327969,320809,541610,775569,846424,810626,779554,393761,351597,806453,848766,865249,837607,792475,366581,360575,845781,867461,897266,867382,838901,413181,372136,807585,918082,881049,916112,860705,428632,364196,822579,909947,870859,853830,793965,367726,345530,810384,834623,597030,744750,736050,322050,316421,790585,817638,805372,809783,729777,328830,311785,797853,867623,842726,791723,722849,318963,308560,777679,826076,806233,789715,721780,322244,304571,775262,815290,807624,785551,724078,329096,308566,757517,812270,811789,812548,738420,336263,317900,783083,818184,768869,858488,824531,381507,390319,866075,956515,945125,996401,852121,410961,426396,889012,909286,910858,902894,770046,435755,430166,604264,825592,881232,877801,830026,448894,378138,855751,961041,970211,913970,824633,419660,412297,897187,951600,932330,961112,931889,452902,348929,900786,1013570,1024382,1036489,937397,432243,421903,949896,1032612,957890,948557,864667,410236,437574,920589,997254,975787,973127,919156,402804,416940,937032,949712,956023,956260,852219,429622,480068,837366,1082045,999844,927309,846211,390311,372801,975154,1101207,1023388,1043983,980855,522589,501034,958634,1020389,978356,968260,963334,452037,445975,886496,1018952,994949,1026086,964155,509928,417907,893751,971426,987528,788497,667628,467082,499025,988615,1085642,1070006,1042064,955272,472656,103824,833288,1088846,1015505,955383,898277,416491,396086,922352,993253,1008675,969450,881936,427944,396477,897727,969806,961663,989151,837801,397611,373294,458049,381037,516466,649700,595387,391022,366034,458670]},usa_avg:{label:"USA (7-day Average)",data:[556608,559290,574583,584514,597241,580345,546205,563716,566879,557629,552842,550638,554159,556474,533346,532057,536411,539330,539422,539084,537843,567444,576270,577321,578710,579887,581211,584430,588642,593168,595374,597038,600289,602965,602875,601476,601588,606184,610291,614992,617964,621137,625593,632745,635930,636934,643268,644990,647514,637991,632713,635089,638691,637626,637546,639077,656467,666677,668501,670351,672132,673069,671625,674721,676961,684337,687550,685757,679476,674363,672790,667686,661465,661028,662322,662946,663256,663176,666544,666989,668935,667916,668023,670791,671034,668912,667725,662262,644607,641320,637056,616725,615658,614598,611455,625776,628699,630698,648729,648711,649853,654648,662677,665864,671398,677905,679954,681596,682574,676969,673348,668188,664027,660942,657021,655681,659043,660698,660394,656301,640472,637938,633285,628285,629080,627239,624396,636294,635255,629010,626135,623293,625132,633509,645305,655742,676267,686080,686887,687604,680115,674437,673755,671392,666204,664355,663478,636131,630085,630684,623243,628937,638336,642734,680569,691025,693715,697569,699415,695532,696815,702433,705104,709678,713931,720563,727221,728872,723416,730647,728330,735292,738407,740614,739480,741622,740460,739004,730106,720572,711871,709205,707463,696702,657584,642001,633727,627202,623044,620215,617789,647552,656842,655946,656915,656252,657291,664431,669768,667188,666198,664788,664328,661446,655510,650297,650010,649858,650326,649756,649411,647870,648069,647474,647802,648781,649352,646817,646386,646981,650837,652886,653910,655243,658896,659741,653609,660172,672474,678937,689283,701139,720900,746080,765781,769723,773931,779084,782361,775614,770719,757361,745636,749178,749716,709038,697082,692849,689265,697833,699710,692278,728204,747554,760266,765433,764662,760486,765366,771285,769936,764525,771259,786582,791331,782278,782792,791645,804795,815563,816350,813399,823824,830840,833560,824061,811499,801109,797965,800204,796017,790966,793523,797033,804817,803755,800808,803157,796365,793542,791132,781570,785401,794419,780181,799086,805346,801210,800352,794736,779412,799096,801833,805197,821865,841099,859996,878315,875955,864410,857977,847159,844656,834577,826712,816406,816201,818571,826832,826950,835220,831210,832246,825457,824397,790456,748095,741974,753562,767114,783431,795213,831437,872529,873325,816868,794678,795136,787350,774967,766825,758802,800553,813277,799621,798645,800654,798320,799956,800012,796494,793145,786429,789243,782938,778605,775293,712482,628372,564772,516279,481649,480707,479670,479759]},europe:{label:"Europe",data:[62107,124417,148480,154271,144947,78440,77025,165525,185816,190334,179975,167275,79313,76447,156922,189773,193817,194568,179229,87582,88945,190078,186006,181457,179561,170306,81589,78315,185950,190630,186842,183424,161836,74603,71368,172540,179943,176933,178610,166746,74670,83006,175351,184724,177462,175963,155846,70313,75164,175229,182721,187338,183616,164998,72271,70039,185509,187837,180180,184976,184279,81757,73138,187876,182104,192172,180550,173981,78705,77302,212550,210874,196722,200182,181877,78974,80884,197951,203636,211035,213573,187452,77692,79535,207546,209117,199936,191257,130314,67332,67262,119440,196811,195305,197669,184404,77707,77876,196911,208385,205845,198205,175884,68337,67732,191922,194255,193604,197800,176671,76703,67640,192546,201793,209986,200949,177974,84415,74814,157642,121475,204352,211748,198588,77137,75881,190696,197850,212904,186884,193897,85351,84842,234206,252896,237190,230491,208224,89653,99327,214291,261673,241618,240620,192360,67e3,68099,181605,219558,211841,192712,184181,71335,69413,210235,225626,223443,217721,188379,77470,72386,202926,209889,228181,214729,191171,68690,68973,216839,219582,222029,224437,190107,75414,74211,211748,218113,207796,211146,187624,65011,72850,202685,212550,205274,211e3,184753,66969,71102,207301,209866,209257,209559,197255,83211,89150,215090,225210,216755,214535,186003,80315,74398,206360,214952,218679,207596,185002,72878,75729,206117,220902,210412,210574,180704,68913,68894,201238,215734,213145,204596,188904,71043,73138,201657,204184,174835,212709,192257,76483,80862,215084,222598,215258,229663,199434,85550,81014,205731,228233,225404,223152,198978,86530,91203,227670,227951,233877,228300,209817,83533,83675,222819,229345,221079,225336,202316,77936,80075,233119,232552,228048,230514,204540,81639,86618,226438,244923,256984,266088,241048,124373,124406,267866,295402,249264,263663,239394,122001,128344,261169,285183,272669,274127,237433,117767,119889,263684,275274,276793,273714,248539,117627,122497,262811,286762,284556,283949,253039,125286,128526,275826,276531,274659,239451,245540,123329,127798,278093,292136,283171,300806,260612,123800,120311,275965,293301,289193,294374,263231,119708,126025,283769,308320,290296,277719,274548,130890,122577,286637,300064,303846,301263,270655,125926,27106,282782,294348,295060,292153,258413,122164,123976,283645,312875,293874,282733,260293,119730,123483,279250,292764,291883,295543,231290,121065,119291,158713,134400,155890,186263,176053,128821,118089,131448]},europe_avg:{label:"Europe (7-day Average)",
data:[87484,91785,96631,102528,108661,110421,112795,127562,136336,142317,145984,149174,149305,149219,147993,148558,149054,151135,152848,154024,155811,160546,160008,158244,156097,154827,153967,152451,151861,152523,153295,153842,152637,151636,150643,148724,147199,145787,145097,145799,145807,147476,147873,148554,148631,148254,146697,146073,144958,144935,144650,146062,147152,148458,148740,148007,149478,150208,149187,149378,152131,153485,153929,154271,153455,155166,154534,153063,152625,153219,156748,160857,161508,164307,165438,165475,165988,163902,162870,164912,166821,167626,167440,167246,168618,169395,167811,164628,156463,154985,153232,140645,138885,138225,139142,146867,148349,149869,160932,162585,164092,164171,162953,161614,160163,159451,157433,155688,155626,155740,156934,156920,157012,158087,160431,160874,161065,162164,163190,158204,146726,145926,147468,150412,149374,149525,154248,165158,166380,162828,162155,163328,164608,170826,178690,182162,188389,190438,191054,193116,190275,191528,192157,193603,191339,188103,183638,178975,172960,168702,161860,160694,161312,161499,165590,166457,168114,171685,172284,173165,173592,172543,170295,170969,170539,170943,169689,169201,171185,172570,171695,173081,172931,173889,174634,173914,173702,171668,169769,169416,167929,167733,166441,165646,165282,165264,164855,165136,164885,165546,165157,165726,165521,167310,169627,172206,173320,175512,176579,177297,175688,175270,173167,171919,170457,170726,169736,169594,168534,168719,168688,169535,168355,168778,168165,167601,166625,165930,165184,165580,164726,165896,166203,166806,166867,165217,159744,160905,161378,162159,163259,165183,167809,173586,176007,177033,178330,178353,177015,177815,179267,178338,178273,178413,179865,183e3,182962,184176,184908,186459,186029,184952,184261,184459,182628,182211,181135,180335,179818,181294,181753,182746,183490,183806,184333,185271,184316,186079,190215,195295,200512,206615,212018,217935,225148,224041,223699,223454,223118,223684,222728,221265,224612,226105,225822,225217,224013,224374,222954,223546,223488,225071,225052,225422,225300,226941,228052,229515,230155,231251,232110,233971,232505,231097,224737,223668,223385,223281,223606,225837,227051,235819,237973,238039,236969,236663,236832,237689,236772,237145,236564,237376,238494,240638,240795,238419,240031,241633,241138,241548,240365,242304,245668,245112,244404,230765,230213,229399,228139,226842,225092,224551,238391,238517,241163,240992,239644,239918,239569,239498,238871,235997,235714,237543,233399,233590,232988,215771,193150,173721,158112,150217,151324,151154,147258]},china:{label:"China",data:[14887,41034,56049,65128,49125,40249,31378,41493,45267,42287,48484,44156,27757,21967,35866,40036,41226,34672,35683,22466,19366,40089,35611,29991,32652,28258,20072,18856,33394,31731,32497,49494,30532,18770,16456,28860,28061,29252,26388,24017,14619,19668,18822,12480,11045,10310,5434,6359,6631,7437,8182,7849,23061,25812,26748,16436,39619,39854,42822,38945,31010,19421,18409,43896,39246,44057,42207,37857,22312,20452,45425,40492,38578,34996,36735,40763,34066,60981,75728,90775,100157,90696,52638,45883,45498,42133,43944,42629,43477,25650,23538,42065,56908,61954,47808,42289,40136,61674,48951,36045,46489,34919,34212,21687,19562,33161,34427,33687,31362,29400,20014,17719,34041,34632,44054,37494,33695,30664,20688,18538,19621,44960,41614,37203,26831,20861,40858,38763,40990,41030,34001,23975,19771,38935,37670,45503,41814,32361,24879,19818,40257,40804,40116,37077,38575,25662,23681,42343,38472,43519,40323,31770,21062,20765,40111,39807,41947,41517,38274,30392,29335,48973,43589,45528,42456,37676,40111,35932,36452,58651,59303,60696,55110,42171,38882,58985,61257,71004,45807,32656,21789,20120,65897,60457,42994,46166,38992,23944,21964,41515,42703,44689,46417,43268,32123,28422,53590,50084,48745,55914,42547,27963,25251,55183,55546,45905,45965,40774,27968,25477,47373,46228,53514,48630,47554,28774,26795,45046,43805,46683,39298,39692,28493,27541,39964,45564,45343,47755,53800,40866,38804,58592,55078,54177,50629,48518,38476,37231,55190,52575,52999,45237,48759,40248,37998,56017,54885,53725,54008,50739,38115,38335,56652,58965,59157,57884,58744,72806,64609,77624,101032,103056,103688,103200,83527,85711,42812,58890,57284,58728,58615,51018,43831,34549,32678,33600,36533,35599,37049,39970,56481,56122,60779,60962,57181,41596,39368,56267,54080,53033,52943,45588,30147,31002,57684,57007,60348,57502,49586,34512,34164,56447,62452,60129,61784,57845,43051,40640,54147,56186,58102,57555,54055,37779,36161,60477,55384,56576,58237,55466,39589,41597,59561,61657,63896,59861,62294,45060,42923,59822,60228,65087,64500,59841,41936,12343,39128,60299,76100,127811,64667,45787,44452,64974,62850,59224,57612,55099,42978,41602,62958,61069,60716,61319,55432,42218,36366,55960,57375,59013,59910,56462,51931,48470,41055]},china_avg:{label:"China (7-day Average)",data:[24747,26182,29888,34922,38102,41644,42550,46350,46955,44989,42611,41902,40117,38773,37969,37221,37070,35097,33886,33130,32759,33362,32730,31125,30836,29776,29434,29361,28404,27850,28208,30614,30939,30753,30410,29762,29238,28775,25474,24543,23950,24409,22975,20749,18148,15851,13196,12016,10154,8528,7914,7457,9279,12190,15102,16503,21101,25625,30621,32890,33633,32586,32868,33479,33392,33569,34035,35013,35426,35718,35936,36114,35331,34301,34141,36777,38722,40944,45978,53434,62743,70452,72148,73836,71625,66825,60135,51917,45171,41316,38124,37633,39744,42317,43057,42887,44956,50404,51388,48408,46198,44357,43203,40568,34552,32296,32065,30236,29728,29040,28801,28538,28664,28693,30174,31050,31664,33185,33609,31395,29250,29380,29968,30469,29922,29946,33135,35870,35302,35219,34762,34354,34198,33923,33767,34412,34524,34289,34419,34425,34614,35062,34292,33616,34503,34615,35167,35465,35132,35618,36082,35110,34452,34036,33717,33908,33683,33854,34783,36116,37340,38606,39146,39658,39792,39707,41095,42037,40249,42400,44368,46974,49465,49759,50180,53399,53772,55443,53316,50108,47197,44516,45504,45390,41388,41439,42345,42652,42916,39433,36896,37139,37174,37785,38954,39876,41601,42656,43235,44592,44489,43895,43442,43669,44449,44044,42622,42369,42370,42402,41286,39955,41042,41423,42392,42507,42695,42363,42016,41041,39707,38584,38544,38651,37925,38176,37985,39193,41208,42976,44585,47246,48605,49867,50278,49523,49182,48957,48471,48113,47945,47175,47209,47462,47572,47690,48020,48124,49377,49660,49355,49403,49494,50077,50853,51406,52550,57506,61259,64255,70265,76536,83079,89430,90962,93976,89003,82983,76444,70021,63652,59008,53025,51845,48100,44717,41546,38258,36262,35711,38844,42193,46076,49566,52649,53298,53212,53182,52890,51783,50638,48982,47346,46151,46353,46772,47817,48468,49039,49663,50114,49938,50715,50684,51296,52476,53696,54621,54292,53397,53107,52503,51962,51209,50569,51473,51359,51141,51238,51440,51698,52475,52344,53240,54286,54518,55493,56275,56464,56501,56297,56467,57130,56780,56333,51965,49009,49019,50592,59636,60326,60876,65463,69155,69520,67109,57080,55714,55312,54905,54617,54363,54576,55105,55153,55044,54296,53297,52769,52526,52324,52472,53859,55588,53459]},developing:{label:"Developing Economies",data:[54114,110947,138239,147281,121135,93796,73857,121089,147436,134794,141176,133022,82338,67786,116077,134325,134187,145051,129809,77777,68795,135224,131184,119643,121323,105814,73557,66912,133960,134017,126776,150083,117324,73092,66543,124464,125570,126530,122570,115856,68874,73611,115475,108944,104834,108896,90694,61128,63520,105332,110839,105223,119801,112869,85827,66114,139886,145311,145049,138668,117101,79750,71644,145917,142220,153742,132302,129530,83905,75039,158452,150406,140234,140697,134313,102262,83535,162248,184372,199057,204300,186872,107084,97414,156046,150425,144063,141078,126324,76090,69361,136317,161643,162932,148211,138703,94658,114756,143073,140364,149129,135671,124082,78464,70166,138312,135829,137267,136518,120437,74637,66733,132352,139612,152189,141846,127613,96595,66843,94512,74664,133618,135616,135167,82341,72394,138208,143289,140634,147666,125115,87832,70518,141693,141517,150328,135162,116037,82635,69229,135886,139036,136944,133834,125721,83044,70980,139508,135169,139202,128547,118439,74841,69145,139290,137803,138222,137809,125807,90928,78566,136337,128856,141315,127752,111535,85583,79971,125202,155416,153798,166753,155715,102699,94704,157504,163094,162228,138297,116833,73368,66597,162527,159196,142956,141209,126626,75231,69299,136558,141248,144739,143355,129639,83125,74252,149062,151424,147308,148411,126745,88706,73967,150699,154369,143115,139154,136645,81068,74583,139705,141675,151726,142591,130309,79380,71738,140368,139204,140079,128869,125743,78735,75124,128455,134852,123925,140307,137401,90168,84346,143995,142071,137715,138945,128417,87772,80899,146621,145040,143745,132600,128793,95764,90165,146853,149646,146139,145138,136763,91826,88699,151120,155515,154698,145137,143671,127015,115015,176476,199049,196865,196983,187295,138386,135476,137874,155920,152806,153385,145727,108199,93768,128182,125301,131682,133086,120922,95786,91797,148850,154248,156493,154646,140906,98871,88586,150985,152614,148101,143884,129347,83223,82467,156210,157559,163896,158058,142611,94250,89781,159271,169809,159936,157844,147919,99406,93726,147751,164295,162526,168641,150333,97732,86768,161842,160587,159986,156747,147915,98308,96359,163861,168123,167032,159144,151733,99316,92018,162625,166129,170643,166495,152059,102543,21469,131396,165122,180627,227245,157958,106205,97260,168472,168071,163747,160603,139865,93760,90616,165673,169778,158644,152593,139751,96182,85058,129581,118699,137568,142262,131209,105255,89886,85977]},developing_avg:{label:"Developing Economies (7-day Average)",data:[82092,83372,87900,94298,98734,103916,105571,115127,120340,119853,118979,120677,119043,118173,117461,115591,115505,116054,115589,114944,115086,117817,117371,115297,111908,108479,107875,107602,107424,107830,108852,112953,114602,114541,114478,113123,111918,111887,107952,107747,107136,108154,106869,104493,101392,99436,95845,94738,93293,91849,92119,92172,93731,96899,100425,100799,105736,110660,116350,119038,119645,118784,119569,120436,119994,121235,120319,122098,122693,123182,124968,126134,124203,125409,126093,128706,129928,130463,135320,143721,152804,160315,161005,162991,162106,157250,149391,140363,131718,127288,123289,120468,122065,124762,125780,127544,130203,136684,137646,134614,132643,130849,128761,126449,120073,119395,118748,117058,117172,116653,116100,115619,114766,115307,117440,118196,119226,122364,122379,116969,107686,105042,104148,105229,103192,103984,110228,120030,121032,122759,121317,122107,121837,122338,122080,123472,121682,120381,119639,119452,118622,118276,116361,116169,117552,117615,117857,118376,117827,118144,117390,116353,115187,114918,114888,115264,115123,116445,117499,119805,121142,120720,119440,119880,118446,116410,115647,115848,114253,118050,119833,125409,131717,134162,136264,140886,141983,143180,139117,133565,129369,125360,126073,125526,122766,123179,124579,124848,125229,121527,118953,119205,119515,119945,121081,121781,123569,125024,125391,126113,125703,126495,126461,126691,127113,126510,125189,126607,125517,125604,124034,122219,123444,123938,123034,122792,122384,122485,122120,120465,118500,117853,117762,118244,116540,115921,113613,115249,116909,118543,119861,122086,123110,125081,124886,123609,123269,122770,123149,123565,124432,123527,123579,124723,126039,126082,126733,127080,128869,130011,129446,129243,129851,130680,131904,131906,132897,137914,141680,145306,151522,157543,164951,171185,172810,175727,170213,164054,157748,151530,145592,141282,135323,133935,129563,126549,123646,120103,118328,118042,120998,125135,128677,131762,134612,135055,134597,134902,134669,133469,131937,130283,128050,127170,127920,128628,130885,132902,134800,136382,137420,137860,139604,139048,139008,139772,140502,141061,139426,138639,139006,140551,140890,140657,139656,141673,141139,140778,139083,138740,138820,140192,140474,141552,142562,142907,143448,143598,142968,142795,142509,143029,144076,144126,144584,134508,130048,129906,131329,140007,140854,141373,152200,157500,157920,155507,145983,143395,141625,140674,140269,140519,139783,138635,138625,138975,138180,133024,125728,122718,121242,120022,121318,122003,115781]}}},module.exports.commits={labels:["Feb 2009","Mar 2009","Apr 2009","May 2009","Jun 2009","Jul 2009","Aug 2009","Sep 2009","Oct 2009","Nov 2009","Dec 2009","Jan 2010","Feb 2010","Mar 2010","Apr 2010","May 2010","Jun 2010","Jul 2010","Aug 2010","Sep 2010","Oct 2010","Nov 2010","Dec 2010","Jan 2011","Feb 2011","Mar 2011","Apr 2011","May 2011","Jun 2011","Jul 2011","Aug 2011","Sep 2011","Oct 2011","Nov 2011","Dec 2011","Jan 2012","Feb 2012","Mar 2012","Apr 2012","May 2012","Jun 2012","Jul 2012","Aug 2012","Sep 2012","Oct 2012","Nov 2012","Dec 2012","Jan 2013","Feb 2013","Mar 2013","Apr 2013","May 2013","Jun 2013","Jul 2013","Aug 2013","Sep 2013","Oct 2013","Nov 2013","Dec 2013","Jan 2014","Feb 2014","Mar 2014","Apr 2014","May 2014","Jun 2014","Jul 2014","Aug 2014","Sep 2014","Oct 2014","Nov 2014","Dec 2014","Jan 2015","Feb 2015","Mar 2015","Apr 2015","May 2015","Jun 2015","Jul 2015","Aug 2015","Sep 2015","Oct 2015","Nov 2015","Dec 2015","Jan 2016","Feb 2016","Mar 2016","Apr 2016","May 2016","Jun 2016","Jul 2016","Aug 2016","Sep 2016","Oct 2016","Nov 2016","Dec 2016","Jan 2017","Feb 2017","Mar 2017","Apr 2017","May 2017","Jun 2017","Jul 2017","Aug 2017","Sep 2017","Oct 2017","Nov 2017","Dec 2017","Jan 2018","Feb 2018","Mar 2018","Apr 2018","May 2018","Jun 2018","Jul 2018","Aug 2018","Sep 2018","Oct 2018","Nov 2018","Dec 2018"],keys:["master","0.8","0.10","0.12","4","5","6","7","8","9","10","11"],data:{master:{label:"master",data:[15,34,64,114,137,52,85,133,109,76,96,107,143,216,183,145,129,130,130,138,179,266,188,234,162,120,75,82,99,249,310,270,244,240,261,207,311,254,195,187,286,182,197,143,171,67,168,209,219,289,173,163,112,173,218,84,111,104,106,148,114,77,53,86,57,74,81,79,101,83,123,321,219,210,158,179,154,115,188,182,196,203,189,262,270,215,260,317,218,182,232,268,249,226,460,329,359,291,414,331,370,323,326,307,648,473,424,365,365,424,448,422,298,254,353,348,497,499,328]},.8:{label:"0.8",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,184,269,127,122,67,64,15,28,38,41,19,9,1,12,1,null,null,8,1,1,2,null,1,1,5,6,5,1,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},"0.10":{label:"0.10",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,217,233,95,80,55,56,36,32,40,37,39,52,37,16,15,25,21,25,22,14,29,16,25,17,9,21,9,3,10,15,4,3,null,5,5,2,9,11,1,6,6,null,1,8,5,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},.12:{label:"0.12",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,62,48,54,15,31,33,37,9,10,2,10,8,2,10,13,2,6,11,null,1,7,6,1,4,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},4:{label:"4",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,178,168,159,164,161,201,186,135,128,165,124,100,91,80,85,100,192,87,58,12,6,16,4,6,5,2,7,4,5,null,2,11,1,null,null,null,null,null,null,null,null]},5:{label:"5",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,177,185,187,177,220,225,168,103,7,5,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},6:{label:"6",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,213,255,291,198,185,203,248,194,183,362,190,142,123,209,136,140,116,80,63,272,161,110,59,26,31,7,null,3,null,8,2,null,6,8]},7:{label:"7",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,262,233,207,426,277,284,187,178,3,2,2,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]},8:{label:"8",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,410,326,333,297,283,256,567,359,227,192,144,145,67,31,31,16,31,23,45,11,11]},9:{label:"9",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,628,434,359,255,236,242,18,1,3,null,null,null,null,null,null]},10:{label:"10",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,425,429,397,287,237,290,290,380,58,9]},11:{label:"11",data:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,346,474,471,163]}}},module.exports.committers={labels:["Feb 2009","Mar 2009","Apr 2009","May 2009","Jun 2009","Jul 2009","Aug 2009","Sep 2009","Oct 2009","Nov 2009","Dec 2009","Jan 2010","Feb 2010","Mar 2010","Apr 2010","May 2010","Jun 2010","Jul 2010","Aug 2010","Sep 2010","Oct 2010","Nov 2010","Dec 2010","Jan 2011","Feb 2011","Mar 2011","Apr 2011","May 2011","Jun 2011","Jul 2011","Aug 2011","Sep 2011","Oct 2011","Nov 2011","Dec 2011","Jan 2012","Feb 2012","Mar 2012","Apr 2012","May 2012","Jun 2012","Jul 2012","Aug 2012","Sep 2012","Oct 2012","Nov 2012","Dec 2012","Jan 2013","Feb 2013","Mar 2013","Apr 2013","May 2013","Jun 2013","Jul 2013","Aug 2013","Sep 2013","Oct 2013","Nov 2013","Dec 2013","Jan 2014","Feb 2014","Mar 2014","Apr 2014","May 2014","Jun 2014","Jul 2014","Aug 2014","Sep 2014","Oct 2014","Nov 2014","Dec 2014","Jan 2015","Feb 2015","Mar 2015","Apr 2015","May 2015","Jun 2015","Jul 2015","Aug 2015","Sep 2015","Oct 2015","Nov 2015","Dec 2015","Jan 2016","Feb 2016","Mar 2016","Apr 2016","May 2016","Jun 2016","Jul 2016","Aug 2016","Sep 2016","Oct 2016","Nov 2016","Dec 2016","Jan 2017","Feb 2017","Mar 2017","Apr 2017","May 2017","Jun 2017","Jul 2017","Aug 2017","Sep 2017","Oct 2017","Nov 2017","Dec 2017","Jan 2018","Feb 2018","Mar 2018","Apr 2018","May 2018","Jun 2018","Jul 2018","Aug 2018","Sep 2018","Oct 2018","Nov 2018","Dec 2018"],data:{tot:{label:"Committers",data:[1,1,1,1,2,2,3,8,5,11,17,18,24,24,19,25,22,25,25,20,28,26,20,14,21,20,20,18,14,43,30,23,27,33,28,27,38,41,26,37,36,30,25,22,24,21,21,34,19,42,26,25,16,19,28,13,21,20,31,25,29,18,29,27,23,28,26,27,26,26,53,68,53,52,40,44,44,28,45,51,66,66,72,70,69,77,76,80,61,53,75,99,86,82,198,97,85,94,96,89,87,120,115,89,292,195,95,74,88,92,111,89,79,86,80,88,230,203,68]},avg:{label:"Average",data:[null,null,null,null,null,null,null,null,null,null,null,5,7,9,11,13,14,16,18,19,21,22,23,22,22,22,22,21,20,22,22,23,23,23,24,25,26,28,29,30,32,31,30,30,30,29,29,29,28,28,28,27,25,24,24,24,23,23,24,23,24,22,22,23,23,24,24,25,25,26,28,31,33,36,37,38,40,40,42,44,47,50,52,52,53,56,59,62,63,65,68,72,73,75,85,87,89,90,92,92,95,100,104,103,120,129,121,119,119,119,120,120,119,117,114,114,108,109,107]}}},module.exports.releases={labels:["May 2009","Jun 2009","Jul 2009","Aug 2009","Sep 2009","Oct 2009","Nov 2009","Dec 2009","Jan 2010","Feb 2010","Mar 2010","Apr 2010","May 2010","Jun 2010","Jul 2010","Aug 2010","Sep 2010","Oct 2010","Nov 2010","Dec 2010","Jan 2011","Feb 2011","Mar 2011","Apr 2011","May 2011","Jun 2011","Jul 2011","Aug 2011","Sep 2011","Oct 2011","Nov 2011","Dec 2011","Jan 2012","Feb 2012","Mar 2012","Apr 2012","May 2012","Jun 2012","Jul 2012","Aug 2012","Sep 2012","Oct 2012","Nov 2012","Dec 2012","Jan 2013","Feb 2013","Mar 2013","Apr 2013","May 2013","Jun 2013","Jul 2013","Aug 2013","Sep 2013","Oct 2013","Nov 2013","Dec 2013","Jan 2014","Feb 2014","Mar 2014","Apr 2014","May 2014","Jun 2014","Jul 2014","Aug 2014","Sep 2014","Oct 2014","Nov 2014","Dec 2014","Jan 2015","Feb 2015","Mar 2015","Apr 2015","May 2015","Jun 2015","Jul 2015","Aug 2015","Sep 2015","Oct 2015","Nov 2015","Dec 2015","Jan 2016","Feb 2016","Mar 2016","Apr 2016","May 2016","Jun 2016","Jul 2016","Aug 2016","Sep 2016","Oct 2016","Nov 2016","Dec 2016","Jan 2017","Feb 2017","Mar 2017","Apr 2017","May 2017","Jun 2017","Jul 2017","Aug 2017","Sep 2017","Oct 2017","Nov 2017","Dec 2017","Jan 2018","Feb 2018","Mar 2018","Apr 2018","May 2018","Jun 2018","Jul 2018","Aug 2018","Sep 2018","Oct 2018","Nov 2018","Dec 2018"],data:{tot:{label:"Releases",data:[2,5,1,6,6,2,5,4,2,4,3,4,4,2,3,3,2,3,2,2,5,3,3,3,1,1,4,3,4,2,4,3,5,6,5,3,3,6,5,6,4,5,null,3,5,5,7,5,5,6,4,4,4,3,2,3,2,1,1,null,3,2,2,1,2,1,null,2,5,6,11,5,7,5,10,3,7,4,2,6,5,10,10,4,7,7,3,2,5,9,4,5,8,2,10,3,2,4,7,3,4,8,5,7,4,4,12,3,5,7,3,3,2,5,7,8]}}},module.exports.contributors={labels:["2009","2010","2011","2012","2013","2014","2015","2016","2017","2018"],data:{tot:{label:"Contributors",data:[35,113,119,130,121,137,219,454,737,578]}}}},{}],7:[function(require,module,exports){function toggleContent(toggleTarget){var toggleWrapper=document.querySelector(".toggle-wrapper"),visibleSections=document.querySelectorAll(".toggle.active");toggleWrapper.classList.remove("loading");for(var i=0;i<visibleSections.length;i++)visibleSections[i].classList.toggle("active");if(toggleTarget.length>0)for(var i=0;i<toggleTarget.length;i++)toggleTarget[i].classList.toggle("active","inactive");else toggleTarget.classList.toggle("active","inactive")}function toggleClickEvent(e){for(var activeLink=e.target,activeToggler=document.querySelector("#"+activeLink.getAttribute("data")+"-link"),toggleTarget=document.querySelectorAll("."+activeLink.getAttribute("data")),i=0;i<toggler.length;i++)toggler[i].parentNode.classList.remove("active");activeToggler.classList.add("active"),toggleContent(toggleTarget);var activeHash=activeLink.parentNode.getAttribute("id").split("-link");return window.location.hash=activeHash[0],e.preventDefault&&e.preventDefault(),e.stopPropagation&&e.stopPropagation(),!1}var toggler=document.querySelectorAll("a.toggle-link"),mobileToggleList=document.querySelector(".toggle-selector-mobile"),preselected=window.location.href.split("#");mobileToggleList.addEventListener("change",function(){var toggleTarget=document.querySelector(".toggle."+mobileToggleList.value);window.location.hash=mobileToggleList.value,toggleContent(toggleTarget)}),function(){if(toggler.length>0&&preselected[1]){var initialContent=document.querySelectorAll("."+preselected[1]),initialButton=document.querySelector("#"+preselected[1]+"-link");initialButton.classList.toggle("active"),toggleContent(initialContent)}else if(toggler.length>0){var initialContent=document.querySelectorAll("."+toggler[0].getAttribute("data")),initialButton=toggler[0].parentNode;initialButton.classList.toggle("active"),toggleContent(initialContent)}if(toggler)for(var i=0;i<toggler.length;i++)toggler[i].addEventListener("click",toggleClickEvent);if(mobileToggleList)for(var opts=mobileToggleList.options,j=0;j<opts.length;j++)opts[j].value==preselected[1]&&(mobileToggleList.selectedIndex=j)}()},{}],8:[function(require,module,exports){document.querySelector("body").classList.value.split("page-")[1];var ctaLinks=document.querySelectorAll(".track-link"),sendEvent=function(eventCategory,eventAction,eventLabel){eventCategory&&eventAction&&eventLabel?ga("send","event",eventCategory,eventAction,eventLabel):console.log("sending category: "+eventCategory+", action: "+eventAction+", label: "+eventLabel)};!function(elems,cb){function iterate(els){Array.from(els).forEach(cb)}if("function"==typeof elems)return cb=elems,iterate;iterate(elems)}(ctaLinks,function(el){el.addEventListener("click",function(e){var eventCategory=el.getAttribute("data-event-category"),eventAction=el.getAttribute("data-event-action"),eventLabel=el.getAttribute("data-event-label");if(el.classList.contains("crosspage-link"))var eventLabel=eventLabel+document.querySelector("body").getAttribute("data-page");return sendEvent(eventCategory,eventAction,eventLabel),!0})});var monitorVideos=setInterval(function(){var el=document.activeElement;if(el&&"IFRAME"==el.tagName&&el.classList.contains("track-link")){clearInterval(monitorVideos);var eventCategory=el.getAttribute("data-event-category"),eventAction=el.getAttribute("data-event-action"),eventLabel=el.getAttribute("data-event-label");sendEvent(eventCategory,eventAction,eventLabel)}},100);document.querySelector("nav #platformSignUpNav")},{}],9:[function(require,module,exports){function socialScroll(){var scrollPos=window.pageYOffset;scrollPos<initialShare-100&&socialShare.classList.contains("scroll")&&!isMobile?socialShare.classList.remove("scroll"):scrollPos>initialShare-100&&!socialShare.classList.contains("scroll")&&!isMobile?socialShare.classList.add("scroll"):isMobile&&scrollPos<10||lastScrollPos<scrollPos?socialShare.classList.add("scrolled"):isMobile&&scrollPos>10&&lastScrollPos>scrollPos&&socialShare.classList.remove("scrolled"),lastScrollPos=scrollPos}var socialShare=document.querySelector("fieldset.social-share"),isMobile=window.innerWidth<801;if(socialShare&&!isMobile){var initialScroll=window.pageYOffset,initialShare=socialShare.parentElement.getBoundingClientRect().top+initialScroll,lastScrollPos=0;document.addEventListener("scroll",socialScroll)}else if(socialShare&&isMobile){var initialScroll=window.pageYOffset,initialShare=socialShare.parentElement.getBoundingClientRect().top+initialScroll,lastScrollPos=0;document.addEventListener("touchend",socialScroll)}},{}],10:[function(require,module,exports){function navScroll(){var scrollPos=window.pageYOffset,windowHeight=document.documentElement.clientHeight,pageHeight=document.querySelector("html").offsetHeight,maxScroll=pageHeight-windowHeight;scrollPos<=0?mainNav.classList.remove("goingUp"):scrollPos>=maxScroll?(mainNav.classList.add("goingUp"),mainNav.classList.remove("goingDown")):lastScrollPos>scrollPos?(mainNav.classList.add("goingUp"),mainNav.classList.remove("goingDown")):lastScrollPos<scrollPos&&(mainNav.classList.add("goingDown"),mainNav.classList.remove("goingUp")),lastScrollPos=scrollPos}var mainNav=document.querySelector("nav.main-navigation");if(mainNav){mainNav.classList}var lastScrollPos=0;mainNav&&document.addEventListener("scroll",navScroll)},{}],11:[function(require,module,exports){for(var replaceContent=function(canvas){var canvas=document.querySelector("#"+canvas),canvas2d=canvas.getContext("2d"),canvasParent="#"+canvas.getAttribute("ID").split("Canvas")[0],canvasPadding=Number(canvas.getAttribute("data-padding")),canvasScale=(Number(canvas.getAttribute("data-scale"))+10)/10,selectedImage=document.querySelector(canvasParent+" img.selected");if(canvas.parentNode.classList.contains("invert")){var theImage=new Image,invertSource=selectedImage.getAttribute("src").replace("/normal","/invert").replace(".svg","-invert.svg");theImage.classList.add("invert"),theImage.src=invertSource}else{var theImage=new Image;theImage.src=selectedImage.getAttribute("src")}var selectedClass="selected"===selectedImage.classList[0]?selectedImage.classList[1]:selectedImage.classList[0],visibleText=document.querySelector("#nodesourceLogoImageContent div.show"),newText=document.querySelector("#nodesourceLogoImageContent div."+selectedClass);newText&&visibleText&&(visibleText.classList.replace("show","hide"),newText.classList.replace("hide","show"));var rawImageWidth=Math.round(theImage.width),rawImageHeight=Math.round(theImage.height),imageWidth=rawImageWidth*canvasScale,imageHeight=rawImageHeight*canvasScale,canvasHeight=Math.round(imageHeight+2*canvasPadding),canvasWidth=Math.round(imageWidth+2*canvasPadding),tmPadding=0;canvas.parentNode.classList.contains("centered")&&(tmPadding=Math.round(Number(selectedImage.getAttribute("data-tm-padding"))*imageWidth),canvasWidth+=tmPadding),canvas.height=canvasHeight,canvas.width=canvasWidth,canvas.style.width=canvasWidth,canvas.style.height=canvasHeight,canvas2d.clearRect(0,0,canvasWidth+tmPadding,canvasHeight);canvas2d.drawImage(theImage,0+canvasPadding+tmPadding,0+canvasPadding,imageWidth,imageHeight),canvas.nextElementSibling.innerHTML=canvas.width+"px &times; "+canvas.height+"px";var captionText=document.querySelector(canvasParent+" .captionText");if(captionText){var captionTextByLine=captionText.value.split(/\n\r?/g),canvasInfo={width:rawImageWidth,height:rawImageHeight,canvasEle:canvas2d,captionCopy:captionTextByLine,copySize:captionText.getAttribute("data-size")+"",copyColor:captionText.getAttribute("data-color")+"",copyMargin:captionText.getAttribute("data-margin"),
copyJustification:captionText.getAttribute("data-justify")+""};positionText(canvasInfo)}},positionText=function(canvasInfo){if(canvasInfo.canvasEle.fillStyle=canvasInfo.copyColor,canvasInfo.canvasEle.font="600 "+canvasInfo.copySize+"px Source Sans Pro",canvasInfo.canvasEle.textAlign=canvasInfo.copyJustification,"center"==canvasInfo.copyJustification)var textOriginX=canvasInfo.width/2,textOriginY=canvasInfo.height/2+Number(canvasInfo.copySize)/3;else var textOriginX=canvasInfo.copyMargin,textOriginY=canvasInfo.height/2+Number(canvasInfo.copySize)/3;1==canvasInfo.captionCopy.length?canvasInfo.canvasEle.fillText(canvasInfo.captionCopy[0],textOriginX,textOriginY):2==canvasInfo.captionCopy.length?(canvasInfo.canvasEle.fillText(canvasInfo.captionCopy[0],textOriginX,textOriginY-Number(canvasInfo.copySize)/1.4),canvasInfo.canvasEle.fillText(canvasInfo.captionCopy[1],textOriginX,textOriginY+Number(canvasInfo.copySize)/1.4)):3==canvasInfo.captionCopy.length?(canvasInfo.canvasEle.fillText(canvasInfo.captionCopy[0],textOriginX,textOriginY-Number(canvasInfo.copySize)/.7),canvasInfo.canvasEle.fillText(canvasInfo.captionCopy[1],textOriginX,textOriginY),canvasInfo.canvasEle.fillText(canvasInfo.captionCopy[2],textOriginX,textOriginY+Number(canvasInfo.copySize)/.7)):canvasInfo.canvasEle.fillText("Your text has too many lines :(",280,80)},swapImage=function(thisImage){var imageSection=thisImage.parentNode.getAttribute("id");document.querySelector("#"+imageSection+" .selected").classList.remove("selected"),thisImage.classList.add("selected")},captionTextBoxes=document.querySelectorAll(".captionText"),i=0;i<captionTextBoxes.length;i++){captionTextBoxes[i].addEventListener("keyup",function(){var sectionId=this.getAttribute("id").split("Text")[0];replaceContent(sectionId+"Canvas")})}for(var imageSelector=document.querySelectorAll(".imgSelector"),i=0;i<imageSelector.length;i++){var images=imageSelector[i].children;!function(images){for(var i=0;i<images.length;i++){if("IMG"==images[i].tagName){var sectionId=images[i].parentNode.getAttribute("id").split("ImageSelector")[0],canvas=sectionId+"Canvas";images[i].addEventListener("click",function(e){swapImage(e.target),replaceContent(canvas)})}}}(images);var canvas=imageSelector[i].getAttribute("id").split("ImageSelector")[0]+"Canvas";canvasElement=document.querySelector("#"+canvas);var dimensions=document.createElement("span");canvasElement.parentNode.appendChild(dimensions).classList.add("dimensions"),replaceContent(canvas)}for(var sliders=document.querySelectorAll(".controlGroup.slider"),i=0;i<sliders.length;i++){sliders[i].getElementsByTagName("input")[0].addEventListener("input",function(e){var canvas=this.parentNode.parentNode.getAttribute("id").replace("Settings","Canvas"),type=this.getAttribute("class"),label=this.nextElementSibling;switch(type){case"scale":label.innerHTML=(Number(this.value)+10)/10,document.querySelector("#"+canvas).setAttribute("data-scale",this.value);break;case"padding":label.innerHTML=this.value,document.querySelector("#"+canvas).setAttribute("data-padding",this.value)}replaceContent(canvas)})}for(var inverters=document.querySelectorAll(".controlGroup.invert input"),i=0;i<inverters.length;i++){inverters[i].addEventListener("click",function(e){var canvasWrap=document.querySelector("#"+this.parentNode.parentNode.getAttribute("id").replace("Settings","")+" .canvasWrap"),canvas=this.parentNode.parentNode.getAttribute("id").replace("Settings","Canvas");canvasWrap.classList.toggle("invert"),replaceContent(canvas)})}for(var padders=document.querySelectorAll(".controlGroup.alignment input"),i=0;i<padders.length;i++){padders[i].addEventListener("click",function(e){var canvasWrap=document.querySelector("#"+this.parentNode.parentNode.getAttribute("id").replace("Settings","")+" .canvasWrap"),canvas=this.parentNode.parentNode.getAttribute("id").replace("Settings","Canvas");canvasWrap.classList.toggle("centered"),replaceContent(canvas)})}},{}],12:[function(require,module,exports){function toggler(e){var href=e.target.getAttribute("href");if(!href||"#"===href)return navToggle.classList.toggle("active"),mobileMenu.classList.toggle("open"),document.querySelector("body").classList.toggle("menu-open"),document.querySelector("html").classList.toggle("menu-open"),e.preventDefault&&e.preventDefault(),e.stopPropagation&&e.stopPropagation(),!1}function mobileNavScroll(){if(mobileNav){var scrollPos=window.pageYOffset;window.pageYOffset>0?lastMobileScroll<scrollPos?(mobileNav.classList.add("scrolled"),mobileNav.classList.remove("scrolling")):lastMobileScroll>scrollPos&&mobileNav.classList.add("scrolling"):mobileNav.className="mobile-navigation",lastMobileScroll=scrollPos}}var navToggle=document.querySelector(".nav-toggle"),mobileMenu=document.querySelector(".mobile-menu"),mobileNav=document.querySelector(".mobile-navigation");navToggle&&navToggle.addEventListener("click",toggler);var lastMobileScroll=0;navToggle&&document.addEventListener("scroll",mobileNavScroll)},{}],13:[function(require,module,exports){var page=document.body.getAttribute("data-page");"home"===page&&require("./pages/home"),"blog"!==page.split("-")[0]&&"blog"!==page||require("./pages/blog"),"products-nsolid"===page&&require("./pages/nsolid"),"resources"===page&&require("./pages/resources"),"events"===page&&require("./pages/events"),"press"===page&&require("./pages/press"),"node-by-numbers-16"===page&&require("./pages/node-by-numbers-2016"),"node-by-numbers-17"===page&&require("./pages/node-by-numbers-2017"),"node-by-numbers-18"===page&&require("./pages/node-by-numbers-2018"),"branding"===page&&require("./pages/branding"),"latest-lambda"===page&&require("./pages/latest-lambda"),require("./elements/fixednav"),require("./elements/fixed-social"),require("./elements/mobile-menu"),require("./elements/cta-tracking")},{"./elements/cta-tracking":8,"./elements/fixed-social":9,"./elements/fixednav":10,"./elements/mobile-menu":12,"./pages/blog":14,"./pages/branding":15,"./pages/events":16,"./pages/home":17,"./pages/latest-lambda":18,"./pages/node-by-numbers-2016":19,"./pages/node-by-numbers-2017":20,"./pages/node-by-numbers-2018":21,"./pages/nsolid":22,"./pages/press":23,"./pages/resources":24}],14:[function(require,module,exports){function search(){var query=encodeURI(document.getElementById("search-input").value);window.location="/blog/search?q="+query}var moment=require("moment");"undefined"!=typeof hljs&&hljs.initHighlightingOnLoad();var originalDate=document.getElementsByClassName("post-date");if(originalDate&&originalDate.length>0)for(var i=0;i<originalDate.length;i++){var userDate=moment(originalDate[i].dataset.date).format("MMM DD YYYY");originalDate[i].innerHTML=userDate}if(null!==document.getElementById("search-input")){document.getElementById("search-input").addEventListener("keyup",function(evt){evt.preventDefault(),evt.which=evt.which||evt.keyCode,13===evt.which&&search()});document.getElementById("search-link").addEventListener("click",function(evt){evt.preventDefault(),""!==document.getElementById("search-input").value&&search()})}},{moment:3}],15:[function(require,module,exports){"use strict";require("./../elements/content-toggle"),require("./../elements/generator");var Clipboard=require("clipboard"),swapCopied=function(e){var getCopied=document.querySelector(".copied");getCopied&&getCopied.classList.remove("copied"),e.trigger.classList.add("copied")};!function(){var clipboard=new Clipboard("li.color-sample-container");clipboard.on("success",function(e){swapCopied(e)}),clipboard.on("error",function(e){console.error("Action:",e.action),console.error("Trigger:",e.trigger)})}()},{"./../elements/content-toggle":7,"./../elements/generator":11,clipboard:2}],16:[function(require,module,exports){for(var moment=require("moment"),originalDate=document.getElementsByClassName("event-dates"),i=0;i<originalDate.length;i++){var userDate=moment(originalDate[i].value);document.getElementById("event-month-"+originalDate[i].value).innerHTML=userDate.format("MMM"),document.getElementById("event-day-"+originalDate[i].value).innerHTML=userDate.format("DD"),document.getElementById("event-time-"+originalDate[i].value).innerHTML=userDate.format("hh:mm a")}},{moment:3}],17:[function(require,module,exports){function toggleQuote(e){e.preventDefault();var quoteTarget=e.target.getAttribute("data-quote-num")||e.target.parentNode.getAttribute("data-quote-num");quoteContainer.className="",quoteContainer.classList.add("carousel-wrap","quote-"+quoteTarget),quoteContainer.setAttribute("data-quote-num",quoteTarget)}function cycleQuote(e){e.preventDefault();var newQuote,currQuote=1*document.querySelector(".carousel-wrap").getAttribute("data-quote-num"),swapQuote=function(currQuote,newQuote){console.log("Current quote: "+currQuote+"New Quote: "+newQuote),quoteContainer.className="",quoteContainer.classList.add("carousel-wrap","quote-"+newQuote),quoteContainer.setAttribute("data-quote-num",newQuote)};"prev"==this.getAttribute("id")?(newQuote=currQuote>1?currQuote-1:totalQuotes,swapQuote(currQuote,newQuote)):"next"==this.getAttribute("id")&&(newQuote=currQuote<totalQuotes?currQuote+1:1,swapQuote(currQuote,newQuote))}for(var quoteButtons=document.querySelectorAll(".quote-selector a"),quoteContainer=document.querySelector(".carousel-wrap"),totalQuotes=quoteButtons.length,arrows=document.querySelectorAll(".arrow"),i=0;i<quoteButtons.length;i++)quoteButtons[i].addEventListener("click",toggleQuote);for(var i=0;i<arrows.length;i++)arrows[i].addEventListener("click",cycleQuote)},{}],18:[function(require,module,exports){"use strict";require("./../elements/content-toggle");var Clipboard=require("clipboard"),swapCopied=function(e){var getCopied=document.querySelector(".copied");getCopied&&getCopied.classList.remove("copied"),e.trigger.classList.add("copied")};!function(){var clipboard=new Clipboard(".copy-trigger");clipboard.on("success",function(e){swapCopied(e),e.clearSelection()}),clipboard.on("error",function(e){console.error("Action:",e.action),console.error("Trigger:",e.trigger)})}();var rawLayerData,versionSelect=document.querySelector("#select-version"),regionSelect=document.querySelector("#select-region"),changeVersion=function(newVersion){var currRegion=regionSelect.value;regionSelect.innerHTML="";for(var region in newVersion.layers)if(newVersion.layers.hasOwnProperty(region)){var o=document.createElement("option");o.value=region,o.text=region,regionSelect.appendChild(o)}if(currRegion)for(var i=0;i<regionSelect.options.length;i++)regionSelect[i].value==currRegion&&(regionSelect.selectedIndex=i);else regionSelect.selectedIndex=0;changeRegion()},changeRegion=function(){for(var currVersion=versionSelect.value,newRegion=regionSelect.value,newARN=rawLayerData[currVersion].layers[newRegion],arnSpans=document.querySelectorAll(".total-arn"),i=0;i<arnSpans.length;i++)arnSpans[i].innerHTML=newARN;for(var regionSpans=document.querySelectorAll(".lambda-option-region"),i=0;i<regionSpans.length;i++)regionSpans[i].innerHTML=newRegion},initializeARNdata=function(){versionSelect.addEventListener("change",function(){changeVersion(rawLayerData[this.value])}),regionSelect.addEventListener("change",function(){changeRegion()});var versionNames=[],versionNums=[];for(var version in rawLayerData)rawLayerData.hasOwnProperty(version)&&(versionNames.push(rawLayerData[version].name),versionNums.push(version));for(var i=versionNames.length-1;i>-1;i--){var o=document.createElement("option");o.value=versionNums[i],o.text=versionNums[i]+" ("+versionNames[i]+")",versionSelect.appendChild(o)}changeVersion(rawLayerData[versionSelect[0].value])};if(window.location.href.includes("localhost:8888"))rawLayerData={8:{name:"Carbon",layers:{"ap-northeast-1":"arn:aws:lambda:ap-northeast-1:800406105498:layer:nsolid-node-8-beta:8","ap-northeast-2":"arn:aws:lambda:ap-northeast-2:800406105498:layer:nsolid-node-8-beta:8","ap-south-1":"arn:aws:lambda:ap-south-1:800406105498:layer:nsolid-node-8-beta:8","ap-southeast-1":"arn:aws:lambda:ap-southeast-1:800406105498:layer:nsolid-node-8-beta:8","ap-southeast-2":"arn:aws:lambda:ap-southeast-2:800406105498:layer:nsolid-node-8-beta:8","ca-central-1":"arn:aws:lambda:ca-central-1:800406105498:layer:nsolid-node-8-beta:8","eu-central-1":"arn:aws:lambda:eu-central-1:800406105498:layer:nsolid-node-8-beta:8","eu-west-1":"arn:aws:lambda:eu-west-1:800406105498:layer:nsolid-node-8-beta:8","eu-west-2":"arn:aws:lambda:eu-west-2:800406105498:layer:nsolid-node-8-beta:8","eu-west-3":"arn:aws:lambda:eu-west-3:800406105498:layer:nsolid-node-8-beta:8","sa-east-1":"arn:aws:lambda:sa-east-1:800406105498:layer:nsolid-node-8-beta:8","us-east-1":"arn:aws:lambda:us-east-1:800406105498:layer:nsolid-node-8-beta:8","us-east-2":"arn:aws:lambda:us-east-2:800406105498:layer:nsolid-node-8-beta:8","us-west-2":"arn:aws:lambda:us-west-2:800406105498:layer:nsolid-node-8:99"}},10:{name:"Dubnium",layers:{"ap-northeast-1":"arn:aws:lambda:ap-northeast-1:800406105498:layer:nsolid-node-10-beta:8","ap-northeast-2":"arn:aws:lambda:ap-northeast-2:800406105498:layer:nsolid-node-10-beta:8","ap-south-1":"arn:aws:lambda:ap-south-1:800406105498:layer:nsolid-node-10-beta:8","ap-southeast-1":"arn:aws:lambda:ap-southeast-1:800406105498:layer:nsolid-node-10-beta:8","ap-southeast-2":"arn:aws:lambda:ap-southeast-2:800406105498:layer:nsolid-node-10-beta:8","ca-central-1":"arn:aws:lambda:ca-central-1:800406105498:layer:nsolid-node-10-beta:8","eu-central-1":"arn:aws:lambda:eu-central-1:800406105498:layer:nsolid-node-10-beta:8","eu-west-1":"arn:aws:lambda:eu-west-1:800406105498:layer:nsolid-node-10-beta:8","eu-west-2":"arn:aws:lambda:eu-west-2:800406105498:layer:nsolid-node-10-beta:8","eu-west-3":"arn:aws:lambda:eu-west-3:800406105498:layer:nsolid-node-10-beta:8","sa-east-1":"arn:aws:lambda:sa-east-1:800406105498:layer:nsolid-node-10-beta:8","us-east-1":"arn:aws:lambda:us-east-1:800406105498:layer:nsolid-node-10-beta:8","us-east-2":"arn:aws:lambda:us-east-2:800406105498:layer:nsolid-node-10-beta:8","us-west-2":"arn:aws:lambda:us-west-2:800406105498:layer:nsolid-node-10-beta:8"}}},initializeARNdata();else{var getLayerData=new XMLHttpRequest;getLayerData.open("GET","https://api.nodesource.com/serverless/layer-versions",!0),getLayerData.send(),getLayerData.onload=function(){rawLayerData=JSON.parse(getLayerData.response),initializeARNdata()}}},{"./../elements/content-toggle":7,clipboard:2}],19:[function(require,module,exports){function navScroll(){if(mainNav){var scrollPos=window.pageYOffset;window.pageYOffset;scrollPos>500?mainNav.classList.add("fixed"):500>scrollPos&&mainNav.classList.remove("fixed"),lastScroll=scrollPos}}function updateFieldText(selector,num){var el=document.querySelector(selector);el&&(el.innerText=String(num))}function updateNumberFieldText(selector,num){updateFieldText(selector,thousandsSeparatedLabel(num))}function thousandsSeparatedLabel(label){return label.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}function thousandsSeparatedTooltip(tooltipItem,data){return(data.datasets[tooltipItem.datasetIndex].label||"")+": "+thousandsSeparatedLabel(tooltipItem.yLabel)}function fractionToPercentTooltip(tooltipItem,data){return(data.labels[tooltipItem.index]||"")+": "+Math.round(100*data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index])+"%"}function makeLineGraphOptions(opts){var ret={scales:{xAxes:[{gridLines:{display:!1},ticks:{autoSkipPadding:30}}],yAxes:[{ticks:{beginAtZero:!1,callback:thousandsSeparatedLabel}}]},hover:{},tooltips:{callbacks:{label:thousandsSeparatedTooltip}},spanGaps:!0};return opts&&!1===opts.legend&&(ret.legend={display:!1}),ret}function makeStackedGraphOptions(opts){var ret={tooltips:{mode:"index"},hover:{mode:"index"},scales:{xAxes:[{gridLines:{display:!1},ticks:{autoSkipPadding:15}}],yAxes:[{ticks:{beginAtZero:!1,callback:thousandsSeparatedLabel},stacked:!0}]}};return opts&&!1===opts.legend&&(ret.legend={display:!1}),ret}const moment=require("moment"),data=require("../data/nodebynumbers-data-2016");var mainNav=document.querySelector("nav.nbn-nav"),daysofweek="Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),operatingSystems="Windows macOS Linux".split(" "),versions=Object.keys(data.versions.data).filter(function(v){return/^\d+\.(x|\d+)$/.test(v)}),versionsPercentage=Object.keys(data.versionsPercentage.data),branches=(Object.keys(data.countries.data).filter(function(v){return"year"!=v&&/^[a-z]+$/.test(v)}),Object.keys(data.commits.data));document.addEventListener("scroll",navScroll),updateNumberFieldText("section#growth .text .average",data.stats.dayAverage),updateNumberFieldText("section#growth .total.number",data.stats.total),updateFieldText("section#growth .total-download .number",thousandsSeparatedLabel(Math.floor(data.stats.totalTb))+"."+Math.round(1e3*(data.stats.totalTb-Math.floor(data.stats.totalTb))));var highestDay=moment.utc(data.stats.highestDay);updateFieldText("section#growth .highest-download .day",highestDay.format("dddd")),updateFieldText("section#growth .highest-download .date",highestDay.format("MMMM D, YYYY")),updateFieldText("section#growth .highest-download .number",thousandsSeparatedLabel(data.stats.highest)+" Downloads"),data.stats.topDevelopingCountries.forEach(function(country,i){updateFieldText("section#growth .economy .row:nth-of-type("+(i+1)+") .country",country.name),updateFieldText("section#growth .economy .row:nth-of-type("+(i+1)+") .second-number",thousandsSeparatedLabel(country.downloads))}),Array.prototype.forEach.call(document.querySelectorAll(".year-placeholder"),function(el){el.innerText=data.stats.year}),updateFieldText("section#community .authors .number",thousandsSeparatedLabel(data.contributors.data.tot.data[data.contributors.data.tot.data.length-1]));for(var i=0;i<3;i++)updateFieldText("section#community .releases .row:nth-of-type("+(i+1)+") .second-number",data.stats.topReleaseMonths[i].count),updateFieldText("section#community .releases .row:nth-of-type("+(i+1)+") .month",data.stats.topReleaseMonths[i].months.join(", "));updateFieldText("section#community .avg-releases .number",Math.round(100*data.stats.releasesMonthAverage)/100),updateFieldText("section#growth .totalDelta",data.stats.totalDelta),updateFieldText("section#growth .tbDelta",data.stats.tbDelta),updateFieldText("section#community .releasesMonthAverageDelta",data.stats.releasesMonthAverageDelta),updateFieldText("section#community .newContributorsDelta",data.stats.newContributorsDelta);var graphColors={fonts:"#89a19d",passive:"#2e3535",versions:"#89a19d #89a19d #66ccbb #66ccbb #75bbea #75bbea".split(" "),commits:"#4c5859 #4c5859 #89a19d #A28FCC #66ccbb #66ccbb #75bbea #75bbea".split(" "),years:"#75bbea #a28fcc #66ccbb".split(" ")},Chart=require("chart.js");Chart.defaults.global.defaultFontFamily="'Source Sans Pro', 'Helvetica', 'Arial', sans-serif",Chart.defaults.global.defaultFontColor=graphColors.fonts,Chart.defaults.global.responsive=!0,Chart.defaults.global.legend.position="bottom",Chart.defaults.global.legend.onClick=function(event,legendItem){console.log("Stop clicking things you're not supposed to, Tierney")},Chart.defaults.global.legend.labels.usePointStyle=!0,Chart.defaults.global.elements.line.borderWidth=2,Chart.defaults.global.elements.line.tension=0,Chart.defaults.global.elements.line.fill=!1,Chart.defaults.global.elements.point.radius=0,Chart.defaults.global.elements.point.hoverRadius=3,Chart.defaults.global.tooltips.backgroundColor="#202525",Chart.defaults.global.tooltips.xPadding=15,Chart.defaults.global.tooltips.yPadding=15,Chart.defaults.global.tooltips.intersect=!1,Chart.defaults.global.tooltips.mode="index",Chart.defaults.global.hover.mode="index",Chart.defaults.global.hover.intersect=!1,Chart.defaults.global.tooltips.titleSpacing=0,Chart.defaults.global.tooltips.titleMarginBottom=10,Chart.defaults.global.tooltips.cornerRadius=2,Chart.defaults.global.tooltips.bodyFontColor="#89a19d";var downloadsVersion=document.getElementById("version-downloads"),downloadsVersionArea=(new Chart(downloadsVersion,{type:"line",data:{labels:data.versions.labels,datasets:versions.reduce(function(p,version,i){return 1===i||3===i||5===i?p.push({label:data.versions.data[version+"_avg"].label,data:data.versions.data[version+"_avg"].data,borderColor:graphColors.versions[i],borderDash:[2,4],pointBackgroundColor:graphColors.versions[i]}):p.push({label:data.versions.data[version+"_avg"].label,data:data.versions.data[version+"_avg"].data,borderColor:graphColors.versions[i],pointBackgroundColor:graphColors.versions[i]}),p},[])},options:makeLineGraphOptions()}),document.getElementById("version-downloads-area")),downloadsVersionPercent=(new Chart(downloadsVersionArea,{type:"line",data:{labels:data.versions.labels,datasets:versions.reduce(function(p,version,i){return p.push({label:data.versions.data[version+"_avg"].label,data:data.versions.data[version+"_avg"].data,fill:!0,borderColor:"rgba(0,0,0,0)",backgroundColor:"#4c5859 #3d4647 #66ccbb #478e83 #75bbea #46708c".split(" ")[i],pointBackgroundColor:"#4c5859 #3d4647 #66ccbb #478e83 #75bbea #46708c".split(" ")[i]}),p},[])},options:makeStackedGraphOptions()}),document.getElementById("version-percentage")),downloadsMonthly=(new Chart(downloadsVersionPercent,{type:"line",data:{labels:data.versionsPercentage.labels,datasets:versionsPercentage.reduce(function(p,version,i){return p.push({label:data.versionsPercentage.data[version].label,data:data.versionsPercentage.data[version].data,fill:!0,lineTension:0,borderColor:"rgba(0,0,0,0)",backgroundColor:"#4c5859 #3d4647 #66ccbb #478e83 #75bbea #46708c".split(" ")[i],pointBackgroundColor:"#4c5859 #3d4647 #66ccbb #478e83 #75bbea #46708c".split(" ")[i]}),p},[])},options:{tooltips:{mode:"index"},hover:{mode:"index"},scales:{xAxes:[{gridLines:{display:!1},ticks:{maxTicksLimit:12}}],yAxes:[{ticks:{min:0,max:1,stepSize:.2,beginAtZero:!1},stacked:!0}]}}}),document.getElementById("monthly-downloads")),totalDownloadsOS=(new Chart(downloadsMonthly,{type:"line",data:{labels:data.totalsMonthly.labels,datasets:[0,1,2].reduce(function(p,i){return p.push({label:data.totalsMonthly.data[i].tot.label,data:data.totalsMonthly.data[i].tot.data,borderColor:graphColors.years[i],pointBackgroundColor:graphColors.years[i]}),p},[])},options:makeLineGraphOptions()}),document.getElementById("total-os-downloads")),commitsCore=(new Chart(totalDownloadsOS,{type:"pie",data:{labels:operatingSystems,datasets:[{data:operatingSystems.reduce(function(p,c){return p.push(data.stats.osPercent[c.toLowerCase()]),p},[]),backgroundColor:"#66ccbb #a28fcc #75bbea".split(" "),borderWidth:0}]},options:{cutoutPercentage:40,tooltips:{mode:"point",callbacks:{label:fractionToPercentTooltip}},hover:{mode:"point"}}}),document.getElementById("core-commits")),contributorsCore=(new Chart(commitsCore,{type:"line",data:{labels:data.commits.labels,datasets:branches.reduce(function(p,branch,i){return 0===i?p.push({fill:!0,borderColor:"rgba(0,0,0,0)",backgroundColor:"rgba(0,0,0,.1)",pointBackgroundColor:"#000000",label:data.commits.data[branch].label,data:data.commits.data[branch].data}):1===i||2===i||3===i||5===i||7===i?p.push({borderDash:[2,3],borderColor:graphColors.commits[i],pointBackgroundColor:graphColors.commits[i],label:data.commits.data[branch].label,data:data.commits.data[branch].data}):p.push({borderColor:graphColors.commits[i],pointBackgroundColor:graphColors.commits[i],label:data.commits.data[branch].label,data:data.commits.data[branch].data}),p},[])},options:makeLineGraphOptions()}),document.getElementById("core-contributors")),contributorsNew=(new Chart(contributorsCore,{type:"line",data:{labels:data.committers.labels,datasets:[{label:"Unique Authors",data:data.committers.data.tot.data,fill:!1,borderColor:"#66ccbb",pointBackgroundColor:"#66ccbb"}]},options:makeLineGraphOptions({legend:!1})}),document.getElementById("new-contributors")),downloadsTotal=(new Chart(contributorsNew,{type:"line",data:{labels:data.contributors.labels,datasets:[{label:"New Contributors",data:data.contributors.data.tot.data,fill:!1,borderColor:"#75bbea",pointBackgroundColor:"#75bbea"}]},options:makeLineGraphOptions({legend:!1})}),document.getElementById("total-downloads")),downloadsDay=(new Chart(downloadsTotal,{type:"line",data:{labels:data.totals.labels,datasets:[0,1,2].reduce(function(p,i){return p.push({label:data.totals.data[i].avg.label,data:data.totals.data[i].avg.data,borderColor:graphColors.years[i],pointBackgroundColor:graphColors.years[i]}),p},[])},options:makeLineGraphOptions()}),document.getElementById("day-downloads")),commitsCoreStacked=(new Chart(downloadsDay,{type:"bar",data:{labels:daysofweek,datasets:[{label:"Average Downloads",data:daysofweek.map(function(day){return data.stats.average[day]}),backgroundColor:graphColors.years[0],borderWidth:0}]},options:function(opts){var ret={tooltips:{mode:"index"},hover:{mode:"index"},scales:{xAxes:[{gridLines:{display:!1},ticks:{autoSkipPadding:15}}],yAxes:[{ticks:{beginAtZero:!1,callback:thousandsSeparatedLabel}}]}};return opts&&!1===opts.legend&&(ret.legend={display:!1}),ret}()}),document.getElementById("core-commits-stacked"));new Chart(commitsCoreStacked,{type:"line",data:{labels:data.commits.labels,datasets:branches.map(function(branch,i){return 0===i?{label:data.commits.data[branch].label,data:data.commits.data[branch].data,fill:!0,borderColor:"rgba(0,0,0,0)",backgroundColor:"#353d3e",pointBackgroundColor:"#353d3e"}:{label:data.commits.data[branch].label,data:data.commits.data[branch].data,fill:!0,borderColor:"rgba(0,0,0,0)",backgroundColor:graphColors.commits[i],pointBackgroundColor:graphColors.commits[i]}})},options:makeStackedGraphOptions()})},{"../data/nodebynumbers-data-2016":4,"chart.js":1,moment:3}],20:[function(require,module,exports){function navScroll(){if(mainNav){var scrollPos=window.pageYOffset;window.pageYOffset;scrollPos>500?mainNav.classList.add("fixed"):500>scrollPos&&mainNav.classList.remove("fixed"),lastScroll=scrollPos}}function updateFieldText(selector,num){var el=document.querySelector(selector);el&&(el.innerText=String(num))}function updateNumberFieldText(selector,num){updateFieldText(selector,thousandsSeparatedLabel(num))}function thousandsSeparatedLabel(label){return label.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}function thousandsSeparatedTooltip(tooltipItem,data){return(data.datasets[tooltipItem.datasetIndex].label||"")+": "+thousandsSeparatedLabel(tooltipItem.yLabel)}function fractionToPercentTooltip(tooltipItem,data){return(data.labels[tooltipItem.index]||"")+": "+Math.round(100*data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index])+"%"}function translateVersion(version){return"4.x"==version?'4.x (LTS "Argon")':"6.x"==version?'6.x (LTS "Boron")':"8.x"==version?'8.x (LTS "Carbon")':version}function makeLineGraphOptions(opts){var ret={scales:{xAxes:[{gridLines:{display:!1},ticks:{autoSkipPadding:30}}],yAxes:[{ticks:{beginAtZero:!1,callback:thousandsSeparatedLabel}}]},hover:{},tooltips:{callbacks:{label:thousandsSeparatedTooltip}},spanGaps:!0};return opts&&!1===opts.legend&&(ret.legend={display:!1}),ret}const moment=require("moment"),data=require("../data/nodebynumbers-data-2017");var mainNav=document.querySelector("nav.nbn-nav"),operatingSystems=("Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),"Windows macOS Linux".split(" ")),versions=data.versions.keys.filter(function(v){return/^\d+\.(x|\d+)$/.test(v)}),branches=(Object.keys(data.countries.data).filter(function(v){return"year"!=v&&/^[a-z]+$/.test(v)}),data.commits.keys);document.addEventListener("scroll",navScroll),updateNumberFieldText("section#growth .text .average",data.stats.dayAverage),updateNumberFieldText("section#growth .total.number",data.stats.total),updateFieldText("section#growth .total-download .number",thousandsSeparatedLabel(Math.floor(data.stats.totalTb))+"."+Math.round(1e3*(data.stats.totalTb-Math.floor(data.stats.totalTb))));var highestDay=moment.utc(data.stats.highestDay);updateFieldText("section#growth .highest-download .day",highestDay.format("dddd")),updateFieldText("section#growth .highest-download .date",highestDay.format("MMMM D, YYYY")),updateFieldText("section#growth .highest-download .number",thousandsSeparatedLabel(data.stats.highest)+" Downloads"),data.stats.topDevelopingCountries.forEach(function(country,i){updateFieldText("section#growth .economy .row:nth-of-type("+(i+1)+") .country",country.name),updateFieldText("section#growth .economy .row:nth-of-type("+(i+1)+") .second-number",thousandsSeparatedLabel(country.downloads)),updateFieldText("section#growth .economy .row:nth-of-type("+(i+1)+") .delta",country.downloadsDelta)}),Array.prototype.forEach.call(document.querySelectorAll(".year-placeholder"),function(el){el.innerText=data.stats.year}),updateFieldText("section#community .authors .number",thousandsSeparatedLabel(data.contributors.data.tot.data[data.contributors.data.tot.data.length-1]));for(var i=0;i<3;i++)updateFieldText("section#community .releases .row:nth-of-type("+(i+1)+") .second-number",data.stats.topReleaseMonths[i].count),updateFieldText("section#community .releases .row:nth-of-type("+(i+1)+") .month",data.stats.topReleaseMonths[i].months.join(", "));updateFieldText("section#community .avg-releases .number",Math.round(100*data.stats.releasesMonthAverage)/100),updateFieldText("section#growth .totalDelta",data.stats.totalDelta),updateFieldText("section#growth .tbDelta",data.stats.tbDelta),updateFieldText("section#community .releasesMonthAverageDelta",data.stats.releasesMonthAverageDelta),updateFieldText("section#community .newContributorsDelta",data.stats.newContributorsDelta);var graphColors={fonts:"#89a19d",passive:"#2e3535",versions:"#89a19d #89a19d #66ccbb #66ccbb #75bbea #75bbea #A28FCC #A28FCC".split(" "),commits:"#4c5859 #4c5859 #89a19d #E1E7E6 #66ccbb #66ccbb #75bbea #75bbea #A28FCC #A28FCC".split(" "),years:"#75bbea #a28fcc #66ccbb #fa9fc5".split(" ")},Chart=require("chart.js");Chart.defaults.global.defaultFontFamily="'Source Sans Pro', 'Helvetica', 'Arial', sans-serif",Chart.defaults.global.defaultFontColor=graphColors.fonts,Chart.defaults.global.responsive=!0,Chart.defaults.global.legend.position="bottom",Chart.defaults.global.legend.onClick=function(event,legendItem){console.log("Stop clicking things you're not supposed to, Tierney")},Chart.defaults.global.legend.labels.usePointStyle=!0,Chart.defaults.global.elements.line.borderWidth=2,Chart.defaults.global.elements.line.tension=0,Chart.defaults.global.elements.line.fill=!1,Chart.defaults.global.elements.point.radius=0,Chart.defaults.global.elements.point.hoverRadius=3,Chart.defaults.global.tooltips.backgroundColor="#202525",Chart.defaults.global.tooltips.xPadding=15,Chart.defaults.global.tooltips.yPadding=15,Chart.defaults.global.tooltips.intersect=!1,Chart.defaults.global.tooltips.mode="index",Chart.defaults.global.hover.mode="index",Chart.defaults.global.hover.intersect=!1,Chart.defaults.global.tooltips.titleSpacing=0,Chart.defaults.global.tooltips.titleMarginBottom=10,Chart.defaults.global.tooltips.cornerRadius=2,Chart.defaults.global.tooltips.bodyFontColor="#89a19d";var downloadsVersion=document.getElementById("version-downloads"),downloadsMonthly=(new Chart(downloadsVersion,{type:"line",data:{labels:data.versions.labels,datasets:versions.map(function(version,i){var options={label:translateVersion(data.versions.data[version].label),data:data.versions.data[version+"_avg"].data,borderColor:graphColors.versions[i],pointBackgroundColor:graphColors.versions[i]};return(version.split(".x")[0]<1||version.split(".x")[0]%2==1)&&(options.borderDash=[2,4]),options})},options:makeLineGraphOptions()}),document.getElementById("monthly-downloads")),totalDownloadsOS=(new Chart(downloadsMonthly,{type:"line",data:{labels:data.totalsMonthly.labels,datasets:[0,1,2,3].map(function(i){return{label:data.totalsMonthly.data[i].tot.label,data:data.totalsMonthly.data[i].tot.data,borderColor:graphColors.years[i],pointBackgroundColor:graphColors.years[i]}})},options:makeLineGraphOptions()}),
document.getElementById("total-os-downloads")),commitsCore=(new Chart(totalDownloadsOS,{type:"pie",data:{labels:operatingSystems,datasets:[{data:operatingSystems.map(function(c){return data.stats.osPercent[c.toLowerCase()]}),backgroundColor:"#66ccbb #a28fcc #75bbea".split(" "),borderWidth:0}]},options:{cutoutPercentage:40,tooltips:{mode:"point",callbacks:{label:fractionToPercentTooltip}},hover:{mode:"point"}}}),document.getElementById("core-commits")),contributorsCore=(new Chart(commitsCore,{type:"line",data:{labels:data.commits.labels,datasets:branches.map(function(branch,i){var options={borderColor:graphColors.commits[i],pointBackgroundColor:graphColors.commits[i],label:translateVersion(data.commits.data[branch].label),data:data.commits.data[branch].data};return 0===i?(options.fill=!0,borderColor="rgba(0,0,0,0)",backgroundColor="rgba(0,0,0,.1)",pointBackgroundColor="#000000"):(branch<1||i%2==1)&&(options.borderDash=[2,3]),options})},options:makeLineGraphOptions()}),document.getElementById("core-contributors")),contributorsNew=(new Chart(contributorsCore,{type:"line",data:{labels:data.committers.labels,datasets:[{label:"Unique Authors",data:data.committers.data.tot.data,fill:!1,borderColor:"#66ccbb",pointBackgroundColor:"#66ccbb"}]},options:makeLineGraphOptions({legend:!1})}),document.getElementById("new-contributors"));new Chart(contributorsNew,{type:"line",data:{labels:data.contributors.labels,datasets:[{label:"New Contributors",data:data.contributors.data.tot.data,fill:!1,borderColor:"#75bbea",pointBackgroundColor:"#75bbea"}]},options:makeLineGraphOptions({legend:!1})})},{"../data/nodebynumbers-data-2017":5,"chart.js":1,moment:3}],21:[function(require,module,exports){function navScroll(){if(mainNav){var scrollPos=window.pageYOffset;window.pageYOffset;scrollPos>500?mainNav.classList.add("fixed"):500>scrollPos&&mainNav.classList.remove("fixed"),lastScroll=scrollPos}}function updateFieldText(selector,num){var el=document.querySelector(selector);el&&(el.innerText=String(num))}function updateNumberFieldText(selector,num){updateFieldText(selector,thousandsSeparatedLabel(num))}function thousandsSeparatedLabel(label){return label.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}function thousandsSeparatedTooltip(tooltipItem,data){return(data.datasets[tooltipItem.datasetIndex].label||"")+": "+thousandsSeparatedLabel(tooltipItem.yLabel)}function fractionToPercentTooltip(tooltipItem,data){return(data.labels[tooltipItem.index]||"")+": "+Math.round(100*data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index])+"%"}function translateVersion(version){return"4.x"==version?'4.x (LTS "Argon")':"6.x"==version?'6.x (LTS "Boron")':"8.x"==version?'8.x (LTS "Carbon")':"10.x"==version?'10.x (LTS "Dubnium")':version}function makeLineGraphOptions(opts){var ret={scales:{xAxes:[{gridLines:{display:!1},ticks:{autoSkipPadding:30}}],yAxes:[{ticks:{beginAtZero:!1,callback:thousandsSeparatedLabel}}]},hover:{},tooltips:{callbacks:{label:thousandsSeparatedTooltip}},spanGaps:!0};return opts&&!1===opts.legend&&(ret.legend={display:!1}),ret}const moment=require("moment"),data=require("../data/nodebynumbers-data-2018");var mainNav=document.querySelector("nav.nbn-nav"),operatingSystems=("Sunday Monday Tuesday Wednesday Thursday Friday Saturday".split(" "),"Windows macOS Linux".split(" ")),versions=data.versions.keys.filter(function(v){return/^\d+\.(x|\d+)$/.test(v)}),branches=(Object.keys(data.countries.data).filter(function(v){return"year"!=v&&/^[a-z]+$/.test(v)}),data.commits.keys);document.addEventListener("scroll",navScroll),updateNumberFieldText("section#growth .text .average",data.stats.dayAverage),updateNumberFieldText("section#growth .total.number",data.stats.total),updateFieldText("section#growth .total-download .number",thousandsSeparatedLabel(Math.floor(data.stats.totalTb))+"."+Math.round(1e3*(data.stats.totalTb-Math.floor(data.stats.totalTb))));var highestDay=moment.utc(data.stats.highestDay);updateFieldText("section#growth .highest-download .day",highestDay.format("dddd")),updateFieldText("section#growth .highest-download .date",highestDay.format("MMMM D, YYYY")),updateFieldText("section#growth .highest-download .number",thousandsSeparatedLabel(data.stats.highest)+" Downloads"),data.stats.topDevelopingCountries.forEach(function(country,i){updateFieldText("section#growth .economy .row:nth-of-type("+(i+1)+") .country",country.name),updateFieldText("section#growth .economy .row:nth-of-type("+(i+1)+") .second-number",thousandsSeparatedLabel(country.downloads)),updateFieldText("section#growth .economy .row:nth-of-type("+(i+1)+") .delta",country.downloadsDelta)}),Array.prototype.forEach.call(document.querySelectorAll(".year-placeholder"),function(el){el.innerText=data.stats.year}),updateFieldText("section#community .authors .number",thousandsSeparatedLabel(data.contributors.data.tot.data[data.contributors.data.tot.data.length-1]));for(var i=0;i<3;i++)updateFieldText("section#community .releases .row:nth-of-type("+(i+1)+") .second-number",data.stats.topReleaseMonths[i].count),updateFieldText("section#community .releases .row:nth-of-type("+(i+1)+") .month",data.stats.topReleaseMonths[i].months.join(", "));updateFieldText("section#community .avg-releases .number",Math.round(100*data.stats.releasesMonthAverage)/100),updateFieldText("section#growth .totalDelta",data.stats.totalDelta),updateFieldText("section#growth .tbDelta",data.stats.tbDelta),updateFieldText("section#community .releasesMonthAverageDelta",data.stats.releasesMonthAverageDelta),updateFieldText("section#community .newContributorsDelta",data.stats.newContributorsDelta);var graphColors={fonts:"#89a19d",passive:"#353d3e",versions:"#89a19d #89a19d #66ccbb #66ccbb #75bbea #75bbea #A28FCC #A28FCC #ffb726 #ffb726".split(" "),commits:"#4c5859 #4c5859 #89a19d #E1E7E6 #66ccbb #66ccbb #75bbea #75bbea #A28FCC #A28FCC #FA9FC5 #FA9FC5".split(" "),years:"#75bbea #a28fcc #66ccbb #fa9fc5".split(" ")},Chart=require("chart.js");Chart.defaults.global.defaultFontFamily="'Source Sans Pro', 'Helvetica', 'Arial', sans-serif",Chart.defaults.global.defaultFontColor=graphColors.fonts,Chart.defaults.global.responsive=!0,Chart.defaults.global.legend.position="bottom",Chart.defaults.global.legend.onClick=function(event,legendItem){console.log("Stop clicking things you're not supposed to, Tierney")},Chart.defaults.global.legend.labels.usePointStyle=!0,Chart.defaults.global.elements.line.borderWidth=2,Chart.defaults.global.elements.line.tension=0,Chart.defaults.global.elements.line.fill=!1,Chart.defaults.global.elements.point.radius=0,Chart.defaults.global.elements.point.hoverRadius=3,Chart.defaults.global.tooltips.backgroundColor="#000000",Chart.defaults.global.tooltips.xPadding=15,Chart.defaults.global.tooltips.yPadding=15,Chart.defaults.global.tooltips.intersect=!1,Chart.defaults.global.tooltips.mode="index",Chart.defaults.global.tooltips.position="nearest",Chart.defaults.global.hover.mode="index",Chart.defaults.global.hover.intersect=!1,Chart.defaults.global.tooltips.titleSpacing=0,Chart.defaults.global.tooltips.titleMarginBottom=10,Chart.defaults.global.tooltips.cornerRadius=2,Chart.defaults.global.tooltips.bodyFontColor="#89a19d",Chart.defaults.global.tooltips.bodyFontFamily="'Source Sans Pro', 'Helvetica', 'Arial', sans-serif",Chart.defaults.global.tooltips.bodySpacing=4,Chart.defaults.global.tooltips.multiKeyBackground="#202525";var downloadsVersion=document.getElementById("version-downloads"),downloadsMonthly=(new Chart(downloadsVersion,{type:"line",data:{labels:data.versions.labels,datasets:versions.map(function(version,i){var options={label:translateVersion(data.versions.data[version].label),data:data.versions.data[version+"_avg"].data,borderColor:graphColors.versions[i],pointBackgroundColor:graphColors.versions[i]};return(version.split(".x")[0]<1||version.split(".x")[0]%2==1)&&(options.borderDash=[2,4]),options})},options:makeLineGraphOptions()}),document.getElementById("monthly-downloads")),totalDownloadsOS=(new Chart(downloadsMonthly,{type:"line",data:{labels:data.totalsMonthly.labels,datasets:[0,1,2,3].map(function(i){return{label:data.totalsMonthly.data[i].tot.label,data:data.totalsMonthly.data[i].tot.data,borderColor:graphColors.years[i],pointBackgroundColor:graphColors.years[i]}})},options:makeLineGraphOptions()}),document.getElementById("total-os-downloads")),commitsCore=(new Chart(totalDownloadsOS,{type:"pie",data:{labels:operatingSystems,datasets:[{data:operatingSystems.map(function(c){return data.stats.osPercent[c.toLowerCase()]}),backgroundColor:"#66ccbb #75BBEA #A28FCC".split(" "),borderWidth:0}]},options:{cutoutPercentage:40,tooltips:{mode:"point",callbacks:{label:fractionToPercentTooltip}},hover:{mode:"point"}}}),document.getElementById("core-commits")),contributorsCore=(new Chart(commitsCore,{type:"line",data:{labels:data.commits.labels,datasets:branches.map(function(branch,i){var options={borderColor:graphColors.commits[i],pointBackgroundColor:graphColors.commits[i],label:translateVersion(data.commits.data[branch].label),data:data.commits.data[branch].data};return 0===i?(options.fill=!0,borderColor="rgba(0,0,0,0)",backgroundColor="rgba(0,0,0,.1)",pointBackgroundColor="#000000"):(branch<1||i%2==1)&&(options.borderDash=[2,3]),options})},options:makeLineGraphOptions()}),document.getElementById("core-contributors")),contributorsNew=(new Chart(contributorsCore,{type:"line",data:{labels:data.committers.labels,datasets:[{label:"Unique Authors",data:data.committers.data.tot.data,fill:!1,borderColor:"#66ccbb",pointBackgroundColor:"#66ccbb"}]},options:makeLineGraphOptions({legend:!1})}),document.getElementById("new-contributors"));new Chart(contributorsNew,{type:"line",data:{labels:data.contributors.labels,datasets:[{label:"New Contributors",data:data.contributors.data.tot.data,fill:!1,borderColor:"#75bbea",pointBackgroundColor:"#75bbea"}]},options:makeLineGraphOptions({legend:!1})})},{"../data/nodebynumbers-data-2018":6,"chart.js":1,moment:3}],22:[function(require,module,exports){},{}],23:[function(require,module,exports){"use strict";var loadMore=document.querySelector(".load-more");loadMore.addEventListener("click",function(e){e.preventDefault();for(var elements=document.querySelectorAll("li.hidden"),i=0;i<elements.length;i++){var element=elements[i];element.className=element.className.replace(/hidden/," ")}loadMore.className=loadMore.className+" hidden"},!1)},{}],24:[function(require,module,exports){"use strict";require("./../elements/content-toggle");var moment=require("moment");if(document.getElementById("webinar-date")){var originalDate=document.getElementById("webinar-date").value,userDate=moment(originalDate);document.getElementById("webinar-month").innerHTML=userDate.format("MMM"),document.getElementById("webinar-day").innerHTML=userDate.format("DD"),document.getElementById("webinar-time").innerHTML=userDate.format("hh:mm a")}},{"./../elements/content-toggle":7,moment:3}]},{},[13]);